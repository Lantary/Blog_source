{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/next_v8.5.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/next_v8.5.0/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/Test.md","hash":"b6abdd7be031bde87e0bea0d13bfc19b0985e6fd","modified":1653056903184},{"_id":"source/robots.txt","hash":"484159d0e398d431047a734a523870029bbd890c","modified":1657285614180},{"_id":"source/index.md","hash":"4368c7d2001e54752d7ae07163bee10f0ae1d248","modified":1657632265549},{"_id":"source/_data/calendar.styl","hash":"c9a17a670ce72882019ccd451330d85a76e6536b","modified":1570815670000},{"_id":"source/_data/sidebar.swig","hash":"5269e567e6667ef07dd7e2cf6caecf626f5c69df","modified":1653112959173},{"_id":"source/_posts/博客插件.md","hash":"b24c9b7491ecd01e3ef580a1d825747564eaac4d","modified":1657613805863},{"_id":"source/categories/index.md","hash":"2f9c852cae25c6394664ca01c8beb9b0570b64c4","modified":1657632265541},{"_id":"source/_posts/博客优化/blog能被搜索到.md","hash":"f6c7d1d2f47b5e6304ec0f27d3602fa2e62a4979","modified":1657500561544},{"_id":"source/_posts/生物信息学/001_DAVID在线富集分析.md","hash":"baa775f53d7a966421367a90169879cb6138ef01","modified":1657421040714},{"_id":"source/_posts/生物信息学/GSEA, GSVA分析.md","hash":"0baab7c2a983d125a6eb379c91424bd8e94f0819","modified":1657421119957},{"_id":"source/_posts/生物信息学/ROC曲线.md","hash":"a72ca0a60d7743cdc115f4413e8282b75384d5af","modified":1657420971362},{"_id":"source/_posts/生物信息学/差异分析.md","hash":"f1fd87c573b40cd069b5681a2352358790a45fee","modified":1657421072628},{"_id":"source/_posts/生物信息学/数据可视化分析.md","hash":"8ac3cfb88d5b75d8725cd3d5e7bfef7bced35a12","modified":1657421100169},{"_id":"source/_posts/生物信息学/生物网络分析.md","hash":"6113807ed223816c56834fd175c479576e3d0934","modified":1657421147708},{"_id":"source/_posts/日常使用中的问题/Rstudio自定义代码配色方案.md","hash":"662eecaf5d78d9f6616e8beacf9eead747cd73f4","modified":1657421443581},{"_id":"source/_posts/日常使用中的问题/ibus在pycharm中不能进行汉字输入的问题.md","hash":"920833f2ae20f2abaac0009075cfc9d25a837fc4","modified":1657420911934},{"_id":"source/_posts/日常使用中的问题/检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出.md","hash":"fbdf5de3d0f9f5e9ae5f3eccacb02cc6aa7a51b7","modified":1657420891908},{"_id":"themes/next_v8.5.0/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1622477006000},{"_id":"themes/next_v8.5.0/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1622477006000},{"_id":"themes/next_v8.5.0/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1622477006000},{"_id":"themes/next_v8.5.0/.gitignore","hash":"68d2f59b79fbc9edf358295ac38515c4b32126c1","modified":1622477006000},{"_id":"themes/next_v8.5.0/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1622477006000},{"_id":"themes/next_v8.5.0/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1657035399000},{"_id":"themes/next_v8.5.0/_vendors.yml","hash":"4a00898e7f4e08e6b42604a33dd926ba57e11939","modified":1657035399000},{"_id":"themes/next_v8.5.0/_config.yml","hash":"a2bfcaa2dee9ed5713442fede550cf19555cbc6d","modified":1657636977871},{"_id":"themes/next_v8.5.0/README.md","hash":"56638e4978154a2f2a3f03ba84047b77b4a499cc","modified":1657035399000},{"_id":"themes/next_v8.5.0/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1657035399000},{"_id":"themes/next_v8.5.0/package.json","hash":"ed04579cb05e09d83946d898edcca4677897e328","modified":1657035399000},{"_id":"themes/next_v8.5.0/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1657035399000},{"_id":"themes/next_v8.5.0/.githooks/install.js","hash":"4d77dbddf2eac1f3fc78f151d12ed22208ed655b","modified":1622477006000},{"_id":"themes/next_v8.5.0/.githooks/pre-commit","hash":"f473eac1aaaa96c947d67988bbed140bbab1a821","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/CODE_OF_CONDUCT.md","hash":"21cbff565a0445d3a880fff1ee417e309740a9ab","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/CONTRIBUTING.md","hash":"eefd073dfb68884cd946f7ec6d3b3619031d7650","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"3e9fbb78e3dee0ca1dc886d0c28b0148ba0ca499","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/config.yml","hash":"7984e665e9de481a0e0e51fca5668337713f810b","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/label-commenter-config.yml","hash":"1097fc47beeacfc1edb0248c27b17bf64bde3565","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/labeler.yml","hash":"e7033752b1f7c35adb61c2b38aad0a9202cdd19b","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/release-drafter.yml","hash":"7662e31224a24154c4fe06b95ccbdff51ab8f2cc","modified":1622477006000},{"_id":"themes/next_v8.5.0/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/page.njk","hash":"6c40aa438c658eb7f0cd0f6a759f18b43e7e8f93","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/bn.yml","hash":"fccbf2855392186e11daa8590121073594037b7b","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/es.yml","hash":"b813da5aed9d73b809133db4dfb08f90ec56afd9","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/default.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/ko.yml","hash":"819c19eb9d142e5411f77cf3821d90f740ee114a","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/ru.yml","hash":"8c2b6361f2de17561c1a3eede2bf47b4e2ba6ce5","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/tk.yml","hash":"519239e35c3bda7b62b00ff5d34644f45b16fe6a","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1657035399000},{"_id":"themes/next_v8.5.0/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1657035399000},{"_id":"themes/next_v8.5.0/.github/workflows/label-commenter.yml","hash":"44405477660289d4ed9beba1d054b15bb67bba06","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/labeler.yml","hash":"8b73c439dc796be141d521a4546bcfb7a5485534","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/linter.yml","hash":"a2be8ad35051b82d80a780494813b28154583273","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/release-drafter.yml","hash":"4f3af81009cb922be91f718a67425377515ea69d","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/lock.yml","hash":"70bd0be3f33774e4b0ada3a59c901f8f9cff1013","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/stale.yml","hash":"17586ef86bfc264eb5587c9d8246b7fbcfdbcaa3","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/ISSUE_TEMPLATE/config.yml","hash":"c40ae7903b6cc99f94c9d45ac7ba8c2850bb1309","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/workflows/tester.yml","hash":"22aaaa3eba1a7ebcf0f78417fd9a7113ee7b6c6c","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/ISSUE_TEMPLATE/bug-report.md","hash":"fc4dce84ed9a5d21d3a8833ff6d776c46f876115","modified":1622477006000},{"_id":"themes/next_v8.5.0/.github/ISSUE_TEMPLATE/feature-request.md","hash":"4ecac91716eac59d7c2bc53cf6e95612d44da97b","modified":1622477006000},{"_id":"themes/next_v8.5.0/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_macro/post.njk","hash":"434b3e76a040a816169e1929657e4176e7b8164c","modified":1657035399000},{"_id":"themes/next_v8.5.0/.github/ISSUE_TEMPLATE/other.md","hash":"8cc5b5c116f6a052865a324512362f145d699202","modified":1622477006000},{"_id":"themes/next_v8.5.0/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/index.js","hash":"3ce10d4cce94e3d4c482c2e18bb6f0f0ca380d3d","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/minify.js","hash":"f160e39943e39d7276da86adb47c3f08e5f22c7a","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/post.js","hash":"30e03a1d4828259f82d46e64cbfe2955b6cff9a9","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/ru/README.md","hash":"6c82bfd2ec8248c248da701f091b548a7a133580","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1657035399000},{"_id":"themes/next_v8.5.0/docs/zh-CN/README.md","hash":"ccf27b9249524b9fec1c15497b4353c8d1748c6c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_mixins.styl","hash":"32d31cb5a155681c19f5ad0bb56dcb08429f93ef","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/noscript.styl","hash":"263eddabfae40e54c0591e7baa8403ade8cdd56d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/helpers/next-url.js","hash":"a91d880cb75e0a8e65a7be4c7362b2c8ebfb7c4f","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/group-pictures.js","hash":"5c68ae0184f9da6e00ba199f2554d503d8e6da71","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1657035399000},{"_id":"themes/next_v8.5.0/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/head/head.njk","hash":"0ba2bf0266f1fcb8edbd961869f8521b29685c56","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/header/brand.njk","hash":"aff4613756456be26415febc668860fdab8d33c5","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-related.njk","hash":"57eca76cfbbe9a65bc2a77f1deebf003ed335673","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/sidebar/site-overview.njk","hash":"3d8591bb92df77ceb9d5b07bc76da1ca89e5bd76","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/index.njk","hash":"45477a04cf2b3c077061c8c3ada216c1ae288e0e","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1657035399000},{"_id":"themes/next_v8.5.0/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/config.js","hash":"c8b59b404f5d2a0b3b5cd1a6c9a10af5f30e43b5","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/changyan.js","hash":"7fa8701c86485b2fe7324e017101a32417902397","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1657035399000},{"_id":"themes/next_v8.5.0/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_variables/base.styl","hash":"163c7441d777bee87042d475e6ce0fde199add28","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Mist/_posts-expand.styl","hash":"be6cf377ae8f4a01ee76f9b3014e74161d4d5d17","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/index.styl","hash":"ff642130354a0b3be0d708c43044ed4d710b5e83","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/site-meta.styl","hash":"759e582d34d08e3386c55d87a835a9523608619f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/highlight/index.styl","hash":"f2328caa94645836e06fb39a6a9c9a84ed68a8b5","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/disqusjs.styl","hash":"c2326ee3e8b724d99c24a818ddee32813ea5bf89","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/index.styl","hash":"979486a41a81f2a9fd8b0b87c4f87d6416c68c7d","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1657035399000},{"_id":"themes/next_v8.5.0/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1657035399000},{"_id":"public/calendar.json","hash":"0b568d3ea772d33572aa3a096eb48050e412b433","modified":1657636986665},{"_id":"public/search.xml","hash":"52fc9c16073e2497af8cf06009cf50a4186c522d","modified":1657636986665},{"_id":"public/sitemap.xml","hash":"07fae31365afd78baa6e79cd22d962293c949598","modified":1657636986665},{"_id":"public/sitemap.txt","hash":"192ac8b6ba5ed671f5aeb38561f18f77d8a14d14","modified":1657636986665},{"_id":"public/index.html","hash":"59fe76c11da232e42eb05bcbfb31076baa2467c4","modified":1657636986665},{"_id":"public/categories/index.html","hash":"5fc4078da6ef83060a197704e89db40f8613738e","modified":1657636986665},{"_id":"public/archives/page/2/index.html","hash":"e1ba66e61a75a65377f8bf22716adc94b9589b62","modified":1657636986665},{"_id":"public/archives/2022/page/2/index.html","hash":"024b9c38e5695d40b5c64b50a1cced67f2a064dd","modified":1657636986665},{"_id":"public/archives/2022/04/index.html","hash":"96acb6eec048e55e849c5ebbcdba776e1a6f7543","modified":1657636986665},{"_id":"public/archives/2022/05/index.html","hash":"19c9b8de84453590b3db54efc53d0ef0d3161c11","modified":1657636986665},{"_id":"public/archives/2022/06/index.html","hash":"19bd0f044088021a57278902f294c3ca3b31d937","modified":1657636986665},{"_id":"public/archives/2022/07/index.html","hash":"43572b318edfba0bc10723850966bbdbb8b26518","modified":1657636986665},{"_id":"public/categories/其他/index.html","hash":"297688e9b1164a784f3b66962f3646158c425615","modified":1657636986665},{"_id":"public/categories/博客优化/index.html","hash":"a7b8b548fab3e86e4770cea741d4e64f4632cc15","modified":1657636986665},{"_id":"public/categories/生物信息学/index.html","hash":"02c74d6e2c1070fffe6286a0c63caf0a2a6043c7","modified":1657636986665},{"_id":"public/categories/生物信息学/生物网络/index.html","hash":"ab9a2c9a2e7c2eaf74832feece1242434fdeba3f","modified":1657636986665},{"_id":"public/categories/生物信息学/富集分析/index.html","hash":"95acb405be111b8979c92b116b01c6c2077a3e2f","modified":1657636986665},{"_id":"public/categories/日常使用中的问题/index.html","hash":"e4358e8f1540f6c18a7766b4c0498d3668e93684","modified":1657636986665},{"_id":"public/categories/生物信息学/ROC曲线/index.html","hash":"ff707e82f984d26bd897b4824e89b00aac3b5b9c","modified":1657636986665},{"_id":"public/default-index/page/2/index.html","hash":"a62436cdaff97606da78bd1322702a05da3aad65","modified":1657636986665},{"_id":"public/Test.html","hash":"ef761022ff4cd56ee9e9afaad030455307776ec3","modified":1657636986665},{"_id":"public/2022/07/10/博客优化/blog能被搜索到/index.html","hash":"0e41bc5761277077ce7cc50e1375df1eeb768501","modified":1657636986665},{"_id":"public/2022/07/01/日常使用中的问题/Rstudio自定义代码配色方案/index.html","hash":"7da2f5383eb3f1148ac6d5e04688dd6209d0edbc","modified":1657636986665},{"_id":"public/2022/06/27/日常使用中的问题/ibus在pycharm中不能进行汉字输入的问题/index.html","hash":"06dab51a7ebe76f8a28ad67d5f92143b50be54b8","modified":1657636986665},{"_id":"public/2022/06/27/日常使用中的问题/检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出/index.html","hash":"902df8b9c53dd848adbcf0db532090c1598306a5","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/001_DAVID在线富集分析/index.html","hash":"b8687cda1768691ea8edf937f8da02093ec3058e","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/GSEA, GSVA分析/index.html","hash":"8ad54f4d76a8de9ebd0e51e8d8682f24a507bea2","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/ROC曲线/index.html","hash":"a9fb3a2230a1c0edead6c6475d0cde2a1cb974e2","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/差异分析/index.html","hash":"fab23b8ba96dbbea84db24940cd8c0ac35d27f8d","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/数据可视化分析/index.html","hash":"0986285236c93f6da2e5e3a72dee66a160e6adf9","modified":1657636986665},{"_id":"public/2022/05/20/生物信息学/生物网络分析/index.html","hash":"4e7efbc7788cef4fe7122cf422bfb9b46138c467","modified":1657636986665},{"_id":"public/2022/04/01/博客插件/index.html","hash":"49c15ec6abc5bf602044d301a51cab8b4b3cdd71","modified":1657636986665},{"_id":"public/archives/index.html","hash":"14a54f230b3ecf8fdad08d568477104e35ba6dd9","modified":1657636986665},{"_id":"public/archives/2022/index.html","hash":"bfab2f70f4c493ccf03a714d3e42875d9120460c","modified":1657636986665},{"_id":"public/default-index/index.html","hash":"68439b55fb077aa2cc58713b973bb3a0d57810c5","modified":1657636986665},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1657636986665},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1657636986665},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1657636986665},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1657636986665},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1657636986665},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1657636986665},{"_id":"public/robots.txt","hash":"484159d0e398d431047a734a523870029bbd890c","modified":1657636986665},{"_id":"public/css/noscript.css","hash":"ec89b3425fbce20863d554c6fd495ea29c3c303d","modified":1657636986665},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1657636986665},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1657636986665},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1657636986665},{"_id":"public/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1657636986665},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1657636986665},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1657636986665},{"_id":"public/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1657636986665},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1657636986665},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1657636986665},{"_id":"public/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1657636986665},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1657636986665},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1657636986665},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1657636986665},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1657636986665},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1657636986665},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1657636986665},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1657636986665},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1657636986665},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1657636986665},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1657636986665},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1657636986665},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1657636986665},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1657636986665},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1657636986665},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1657636986665},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1657636986665},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1657636986665},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1657636986665},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1657636986665},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1657636986665},{"_id":"public/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1657636986665},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1657636986665},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1657636986665},{"_id":"public/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1657636986665},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1657636986665},{"_id":"public/css/main.css","hash":"10268228fa6506f090fce3a77088181dfa909da2","modified":1657636986665}],"Category":[{"name":"其他","_id":"cl5ia9hjb00040bhfh6pp5mov"},{"name":"博客优化","_id":"cl5ia9hjf00090bhfhdhsfc2v"},{"name":"生物信息学","_id":"cl5ia9hji000d0bhfb2x5fl0b"},{"name":"生物网络","parent":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjp000n0bhfcdlp0cfi"},{"name":"富集分析","parent":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjp000o0bhf9s09a8ef"},{"name":"日常使用中的问题","_id":"cl5ia9hjp000q0bhf1978hq09"},{"name":"ROC曲线","parent":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjr000z0bhfa91e4ve4"}],"Data":[{"_id":"calendar","data":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n"},{"_id":"sidebar","data":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}],"Page":[{"title":"Test","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"Test.md","raw":"---\ntitle: Test\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","date":"2022-05-20T15:03:15.603Z","updated":"2022-05-20T14:28:23.184Z","path":"Test.html","comments":1,"layout":"page","_id":"cl5ia9hj200000bhfao9pazj6","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"主页","_content":"\n还没有想好填什么","source":"index.md","raw":"---\ntitle: 主页\n---\n\n还没有想好填什么","date":"2022-07-12T13:24:25.549Z","updated":"2022-07-12T13:24:25.549Z","path":"index.html","comments":1,"layout":"page","_id":"cl5ia9hj800020bhfh17q4ltq","content":"<p>还没有想好填什么</p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<p>还没有想好填什么</p>\n"},{"title":"categories","date":"2022-05-20T15:39:15.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-05-20 23:39:15\ntype: \"categories\"\n---\n","updated":"2022-07-12T13:24:25.541Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl5ia9hjc00050bhf92mohvlj","content":"","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":""}],"Post":[{"title":"博客插件","date":"2022-03-31T16:00:00.000Z","_content":"\n# 日历插件\n\n~~来源于[theme-next-calendar](https://github.com/theme-next/theme-next-calendar)~~\n\n来源于[小冰大神](https://zfe.space/) 做的插件 [文章在此处](https://zfe.space/post/hexo-githubcalendar.html) , [github](https://github.com/Zfour/hexo-github-calendar)\n","source":"_posts/博客插件.md","raw":"---\ntitle: 博客插件\ncategories:\n\t- 其他\ndate: 2022-04-01\n---\n\n# 日历插件\n\n~~来源于[theme-next-calendar](https://github.com/theme-next/theme-next-calendar)~~\n\n来源于[小冰大神](https://zfe.space/) 做的插件 [文章在此处](https://zfe.space/post/hexo-githubcalendar.html) , [github](https://github.com/Zfour/hexo-github-calendar)\n","slug":"博客插件","published":1,"updated":"2022-07-12T08:16:45.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hj500010bhfaqab2zmi","content":"<h1 id=\"日历插件\"><a href=\"#日历插件\" class=\"headerlink\" title=\"日历插件\"></a>日历插件</h1><p><del>来源于<a href=\"https://github.com/theme-next/theme-next-calendar\">theme-next-calendar</a></del></p>\n<p>来源于<a href=\"https://zfe.space/\">小冰大神</a> 做的插件 <a href=\"https://zfe.space/post/hexo-githubcalendar.html\">文章在此处</a> , <a href=\"https://github.com/Zfour/hexo-github-calendar\">github</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h1 id=\"日历插件\"><a href=\"#日历插件\" class=\"headerlink\" title=\"日历插件\"></a>日历插件</h1><p><del>来源于<a href=\"https://github.com/theme-next/theme-next-calendar\">theme-next-calendar</a></del></p>\n<p>来源于<a href=\"https://zfe.space/\">小冰大神</a> 做的插件 <a href=\"https://zfe.space/post/hexo-githubcalendar.html\">文章在此处</a> , <a href=\"https://github.com/Zfour/hexo-github-calendar\">github</a></p>\n"},{"title":"hexo框架下的博客提交至google搜索","date":"2022-07-09T16:00:00.000Z","_content":"\n## 博客优化内容\n\n对于刚建立的博客来说，谷歌往往不能或者不会收录你的博客，为了使自己的博客可以被谷歌所检索到。我们需要主动向谷歌提供网址信息。\n\n## 优化方案\n\n谷歌提供了如何向谷歌提交搜索的方法，同样bing，搜狗，百度等搜索引擎也有相同的提交方案。\n如果你想你的博客被全网搜索到，那么你需要在主流的搜索引擎上分别提交你的网址。要注意的是百度的提交原理跟其他搜索引擎有所不同。这篇博客只以谷歌搜索为例子。以下操作均在 [[Google Search Console]][link1] 中完成。\n\n### 1.验证网站所属\n\n进入 [[Google Search Console]][link1] 后会显示\n\n![piture_1][p1]\n\n输入你博客的地址后点击继续。\n\n![piture_2][p2]\n\n选择验证网站所有权信息的方式。这里需要注意如果你的bolg是以hexo框架搭建的。 那么最好不要选择第一种 `HTML文件验证` 的方式。 因为hexo会自动编译你下载的HTML文件，使其失效，若想要用这种验证方式，那么需要在hexo编译完后，再添加HTML文件。 即在 `hexo g` 后，再添加HTML文件。且你每一次部署都需要如此操作十分麻烦。故不推荐。\n\n这里用第二种方式 `HTML标记` 进行验证。 复制content中的内容到主题中的配置文件 `_config.yml` 。 在属性 `google_site_verification:` 后添加content后的内容\n\n![piture_3][p3]\n\n最后通过验证如图所示。\n\n![piture_4][p4]\n\n### 2.添加sitemap文件到博客\n\n向博客中添加站点地图的方式有很多。这里推荐一种用插件实现的方案。 首先要在你的博客根目录下下载插件。\n```\nnpm install hexo-generator-sitemap --save\n```\n插件安装完成后，在public中文件夹中会生成一个 `sitemap.xml`，如果没有请重新编译一下 `hexo g` 再进行检查。 同时修改博客根目录下的站点配置文件 `_config.yml` 中的 url 属性，将你的主页网站输入到url中。\n\n```\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://lantary.github.io/\npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n```\n重新编译部署 `hexo g -d`。在谷歌站点地图中输入sitemap.xml后提交即可。\n\n![piture_5][p5]\n\n\n## 版本信息\n```\n博客框架 \thexo-cli_4.3.0\n主题\t\tnext\n网站挂载于\tgithub\n```\n\n## 参考链接\n\n[[1] 解决验证问题](https://javahikers.github.io/2019/06/16/personal-blog-being-included-in-google/)\n\n[[2] 提交sitemap](https://zhuanlan.zhihu.com/p/100922816)\n\n[link1]: https://search.google.com/search-console/about\n\n[p1]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p1.png\n[p2]: https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p2.png?raw=true\n[p3]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p3.png\n[p4]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p4.png\n[p5]: https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p5.png?raw=true\n","source":"_posts/博客优化/blog能被搜索到.md","raw":"---\ntitle: hexo框架下的博客提交至google搜索\ncategories:\n\t- 博客优化\ndate: 2022-07-10\n---\n\n## 博客优化内容\n\n对于刚建立的博客来说，谷歌往往不能或者不会收录你的博客，为了使自己的博客可以被谷歌所检索到。我们需要主动向谷歌提供网址信息。\n\n## 优化方案\n\n谷歌提供了如何向谷歌提交搜索的方法，同样bing，搜狗，百度等搜索引擎也有相同的提交方案。\n如果你想你的博客被全网搜索到，那么你需要在主流的搜索引擎上分别提交你的网址。要注意的是百度的提交原理跟其他搜索引擎有所不同。这篇博客只以谷歌搜索为例子。以下操作均在 [[Google Search Console]][link1] 中完成。\n\n### 1.验证网站所属\n\n进入 [[Google Search Console]][link1] 后会显示\n\n![piture_1][p1]\n\n输入你博客的地址后点击继续。\n\n![piture_2][p2]\n\n选择验证网站所有权信息的方式。这里需要注意如果你的bolg是以hexo框架搭建的。 那么最好不要选择第一种 `HTML文件验证` 的方式。 因为hexo会自动编译你下载的HTML文件，使其失效，若想要用这种验证方式，那么需要在hexo编译完后，再添加HTML文件。 即在 `hexo g` 后，再添加HTML文件。且你每一次部署都需要如此操作十分麻烦。故不推荐。\n\n这里用第二种方式 `HTML标记` 进行验证。 复制content中的内容到主题中的配置文件 `_config.yml` 。 在属性 `google_site_verification:` 后添加content后的内容\n\n![piture_3][p3]\n\n最后通过验证如图所示。\n\n![piture_4][p4]\n\n### 2.添加sitemap文件到博客\n\n向博客中添加站点地图的方式有很多。这里推荐一种用插件实现的方案。 首先要在你的博客根目录下下载插件。\n```\nnpm install hexo-generator-sitemap --save\n```\n插件安装完成后，在public中文件夹中会生成一个 `sitemap.xml`，如果没有请重新编译一下 `hexo g` 再进行检查。 同时修改博客根目录下的站点配置文件 `_config.yml` 中的 url 属性，将你的主页网站输入到url中。\n\n```\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://lantary.github.io/\npermalink: :year/:month/:day/:title/\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n```\n重新编译部署 `hexo g -d`。在谷歌站点地图中输入sitemap.xml后提交即可。\n\n![piture_5][p5]\n\n\n## 版本信息\n```\n博客框架 \thexo-cli_4.3.0\n主题\t\tnext\n网站挂载于\tgithub\n```\n\n## 参考链接\n\n[[1] 解决验证问题](https://javahikers.github.io/2019/06/16/personal-blog-being-included-in-google/)\n\n[[2] 提交sitemap](https://zhuanlan.zhihu.com/p/100922816)\n\n[link1]: https://search.google.com/search-console/about\n\n[p1]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p1.png\n[p2]: https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p2.png?raw=true\n[p3]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p3.png\n[p4]: https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p4.png\n[p5]: https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p5.png?raw=true\n","slug":"博客优化/blog能被搜索到","published":1,"updated":"2022-07-11T00:49:21.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hj900030bhf7rfg24rr","content":"<h2 id=\"博客优化内容\"><a href=\"#博客优化内容\" class=\"headerlink\" title=\"博客优化内容\"></a>博客优化内容</h2><p>对于刚建立的博客来说，谷歌往往不能或者不会收录你的博客，为了使自己的博客可以被谷歌所检索到。我们需要主动向谷歌提供网址信息。</p>\n<h2 id=\"优化方案\"><a href=\"#优化方案\" class=\"headerlink\" title=\"优化方案\"></a>优化方案</h2><p>谷歌提供了如何向谷歌提交搜索的方法，同样bing，搜狗，百度等搜索引擎也有相同的提交方案。<br>如果你想你的博客被全网搜索到，那么你需要在主流的搜索引擎上分别提交你的网址。要注意的是百度的提交原理跟其他搜索引擎有所不同。这篇博客只以谷歌搜索为例子。以下操作均在 <a href=\"https://search.google.com/search-console/about\">[Google Search Console]</a> 中完成。</p>\n<h3 id=\"1-验证网站所属\"><a href=\"#1-验证网站所属\" class=\"headerlink\" title=\"1.验证网站所属\"></a>1.验证网站所属</h3><p>进入 <a href=\"https://search.google.com/search-console/about\">[Google Search Console]</a> 后会显示</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p1.png\" alt=\"piture_1\"></p>\n<p>输入你博客的地址后点击继续。</p>\n<p><img src=\"https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p2.png?raw=true\" alt=\"piture_2\"></p>\n<p>选择验证网站所有权信息的方式。这里需要注意如果你的bolg是以hexo框架搭建的。 那么最好不要选择第一种 <code>HTML文件验证</code> 的方式。 因为hexo会自动编译你下载的HTML文件，使其失效，若想要用这种验证方式，那么需要在hexo编译完后，再添加HTML文件。 即在 <code>hexo g</code> 后，再添加HTML文件。且你每一次部署都需要如此操作十分麻烦。故不推荐。</p>\n<p>这里用第二种方式 <code>HTML标记</code> 进行验证。 复制content中的内容到主题中的配置文件 <code>_config.yml</code> 。 在属性 <code>google_site_verification:</code> 后添加content后的内容</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p3.png\" alt=\"piture_3\"></p>\n<p>最后通过验证如图所示。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p4.png\" alt=\"piture_4\"></p>\n<h3 id=\"2-添加sitemap文件到博客\"><a href=\"#2-添加sitemap文件到博客\" class=\"headerlink\" title=\"2.添加sitemap文件到博客\"></a>2.添加sitemap文件到博客</h3><p>向博客中添加站点地图的方式有很多。这里推荐一种用插件实现的方案。 首先要在你的博客根目录下下载插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，在public中文件夹中会生成一个 <code>sitemap.xml</code>，如果没有请重新编译一下 <code>hexo g</code> 再进行检查。 同时修改博客根目录下的站点配置文件 <code>_config.yml</code> 中的 url 属性，将你的主页网站输入到url中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class=\"line\">url: https://lantary.github.io/</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br><span class=\"line\">pretty_urls:</span><br><span class=\"line\">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class=\"line\">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>\n<p>重新编译部署 <code>hexo g -d</code>。在谷歌站点地图中输入sitemap.xml后提交即可。</p>\n<p><img src=\"https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p5.png?raw=true\" alt=\"piture_5\"></p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">博客框架 \thexo-cli_4.3.0</span><br><span class=\"line\">主题\t\tnext</span><br><span class=\"line\">网站挂载于\tgithub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://javahikers.github.io/2019/06/16/personal-blog-being-included-in-google/\">[1] 解决验证问题</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/100922816\">[2] 提交sitemap</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h2 id=\"博客优化内容\"><a href=\"#博客优化内容\" class=\"headerlink\" title=\"博客优化内容\"></a>博客优化内容</h2><p>对于刚建立的博客来说，谷歌往往不能或者不会收录你的博客，为了使自己的博客可以被谷歌所检索到。我们需要主动向谷歌提供网址信息。</p>\n<h2 id=\"优化方案\"><a href=\"#优化方案\" class=\"headerlink\" title=\"优化方案\"></a>优化方案</h2><p>谷歌提供了如何向谷歌提交搜索的方法，同样bing，搜狗，百度等搜索引擎也有相同的提交方案。<br>如果你想你的博客被全网搜索到，那么你需要在主流的搜索引擎上分别提交你的网址。要注意的是百度的提交原理跟其他搜索引擎有所不同。这篇博客只以谷歌搜索为例子。以下操作均在 <a href=\"https://search.google.com/search-console/about\">[Google Search Console]</a> 中完成。</p>\n<h3 id=\"1-验证网站所属\"><a href=\"#1-验证网站所属\" class=\"headerlink\" title=\"1.验证网站所属\"></a>1.验证网站所属</h3><p>进入 <a href=\"https://search.google.com/search-console/about\">[Google Search Console]</a> 后会显示</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p1.png\" alt=\"piture_1\"></p>\n<p>输入你博客的地址后点击继续。</p>\n<p><img src=\"https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p2.png?raw=true\" alt=\"piture_2\"></p>\n<p>选择验证网站所有权信息的方式。这里需要注意如果你的bolg是以hexo框架搭建的。 那么最好不要选择第一种 <code>HTML文件验证</code> 的方式。 因为hexo会自动编译你下载的HTML文件，使其失效，若想要用这种验证方式，那么需要在hexo编译完后，再添加HTML文件。 即在 <code>hexo g</code> 后，再添加HTML文件。且你每一次部署都需要如此操作十分麻烦。故不推荐。</p>\n<p>这里用第二种方式 <code>HTML标记</code> 进行验证。 复制content中的内容到主题中的配置文件 <code>_config.yml</code> 。 在属性 <code>google_site_verification:</code> 后添加content后的内容</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p3.png\" alt=\"piture_3\"></p>\n<p>最后通过验证如图所示。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p4.png\" alt=\"piture_4\"></p>\n<h3 id=\"2-添加sitemap文件到博客\"><a href=\"#2-添加sitemap文件到博客\" class=\"headerlink\" title=\"2.添加sitemap文件到博客\"></a>2.添加sitemap文件到博客</h3><p>向博客中添加站点地图的方式有很多。这里推荐一种用插件实现的方案。 首先要在你的博客根目录下下载插件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，在public中文件夹中会生成一个 <code>sitemap.xml</code>，如果没有请重新编译一下 <code>hexo g</code> 再进行检查。 同时修改博客根目录下的站点配置文件 <code>_config.yml</code> 中的 url 属性，将你的主页网站输入到url中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class=\"line\">url: https://lantary.github.io/</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br><span class=\"line\">pretty_urls:</span><br><span class=\"line\">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class=\"line\">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>\n<p>重新编译部署 <code>hexo g -d</code>。在谷歌站点地图中输入sitemap.xml后提交即可。</p>\n<p><img src=\"https://github.com/Lantary/Private_warehouses/blob/main/hexo%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E8%87%B3google%E6%90%9C%E7%B4%A2/p5.png?raw=true\" alt=\"piture_5\"></p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">博客框架 \thexo-cli_4.3.0</span><br><span class=\"line\">主题\t\tnext</span><br><span class=\"line\">网站挂载于\tgithub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://javahikers.github.io/2019/06/16/personal-blog-being-included-in-google/\">[1] 解决验证问题</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/100922816\">[2] 提交sitemap</a></p>\n"},{"title":"DAVID富集分析(一)","date":"2022-05-19T16:00:00.000Z","_content":"转自https://blog.csdn.net/xiaobai1_1/article/details/103596474\n\n原帖所用的是旧版的DAVID 因为各种原因，我用原帖的基因编号进行分析并没能得到同样的结果，故操作步骤与原帖相似，但重新选取了分析的基因。在一般的富集分析中被分析的基因往往来自于某一或一些列实验中差异分析的结果。\n\n# 1.使用DAVID 进行 GO/ KEGG 富集分析\n\n  a.打开DAVID官网：https://david.ncifcrf.gov/\n  \n  b.点击上侧功能菜单：shortcut to DAVID Tools 进入Function Annotation\n  \n  c.进入到如下的页面中，页面中的大红框中就是进行分析所用的主要操作区域。进入分析页面后，通过如下三步即可完成分析：\n提交基因列表 --> 选定提交列表类型 --> 开始分析\n\n  `用本文件夹下 用于练手的基因文件 可跳过d步骤，e步骤中选择数据类型为ENSEMBL_TRANSCRIPT_ID`\n\n  d.在 “Enter Gene List” 中上传基因列表，格式是每行一个基因。按照 DAVID 的要求，总的基因个数不得超过 3000 个。我们这里去GO数据库以glyoxylate cycle为关键词对搜索出的蛋白进行分析。（以该循环内的蛋白为例）选中所需的蛋白（全部）点击Download，选择bioentity_internal_id 项，实际就是蛋白的UniProtAccession编号。\n  \n  这一步是为了获取用于分析的原数据，也可以使用本文档的 000_差异分析 中获得的蛋白，ENSEMBL_TRANSCRIPT_ID 数据进行富集分析\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166140079-c8902b77-a27e-432c-98cd-464a71edc6d3.png)\n  \n  然后通过https://biodbnet-abcc.ncifcrf.gov/db/db2db.php （一个基因格式转换的工具网站） 进行ID转换，input选择UniProtAccession， output选择AffyID，后将d步骤的UniProtAccession编号复制入转换框中进行转换\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141328-e64b162a-fa97-48a8-ae69-7ec69e0dd4a4.png)\n\n  \n  结果如下图\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141337-a3df761f-ae5c-460f-a623-f2e1a5829b9b.png)\n\n  \n  这种转换可能会产生缺项。\n \n  \n  e.“Select Identifier” 中选择上传的基因类型，因为我们上传的是AffyID，所以在下拉菜单中选择 “AFFYMETRIX_3PRIME_IVT_ID”。\n  \n  f.在 “List Type” 中有两个单选框，我们统一选择 “Gene List” 这一项。\n  \n  g.点击 “Submit List” 即可\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141385-45260d50-3960-47da-b02d-170dd9834381.png)\n  \n  h.提交基因列表之后，经过几秒钟的等待，如果分析顺利，就会弹出一个提示：Please note that multiple species have been detected in your gene list. \n    这句话的意思就是在我们提交的基因列表中检测到多个物种，需要我们选择相应的物种。\n    点击弹出框中的 “确定”，然后在 “List” 中的选择相应物种，于本次分析使用的是人类细胞，\n    故这里我们选择 “Homo sapiens”，（读者可根据自己研究物种的类型进行选择）并点击下方的 “Select Species” 即可。\n\n   \n  i.在功能富集分析的结果中有多个折叠栏，其中 Gene_Ontology 这一折叠栏中有有三个栏目：GOTERM_BP_FAT、GOTERM_CC_FAT、GOTERM_MF_FAT 就是我们想要的 GO 功能富集分析结果。\n    而 Pathways 里面有一个 KEGG_PATHWAY 就是我们要的结果。找到 BP、CC、MF 和 KEGG 对应的详细结果， 点击每个栏目后面的 “Chart” 即可。\n   ![20191218161843663](https://user-images.githubusercontent.com/102901955/166135146-40de1cb7-b8d7-4201-af5b-211f8ab3346b.png)\n  \n  j.点击 “Chart” 之后，即可出现如下图所示的结果，这里面有几列数据分别是：Category、Term、RT、Genes、Count、%、P-Value 和 Benjamini。\n    这几列中我们比较关心的是：Term（GO语义）、P-Value（P值）、Count（基因数）、%（基因比例）点击红框中的 Download File 即可。\n    打开一个新的网页，新打开的网页就是分析结果的文本文件，可以下载或者导入到作图软件中进行后续的操作。\n\n  ![image](https://user-images.githubusercontent.com/102901955/166141475-d371c498-c404-4bad-ab8c-004398b9b026.png)\n\n\n\n\n\n\n    \n\n\n","source":"_posts/生物信息学/001_DAVID在线富集分析.md","raw":"---\ntitle: DAVID富集分析(一)\ncategories:\n\t- 生物信息学\n\t- 富集分析\ndate: 2022-05-20\n---\n转自https://blog.csdn.net/xiaobai1_1/article/details/103596474\n\n原帖所用的是旧版的DAVID 因为各种原因，我用原帖的基因编号进行分析并没能得到同样的结果，故操作步骤与原帖相似，但重新选取了分析的基因。在一般的富集分析中被分析的基因往往来自于某一或一些列实验中差异分析的结果。\n\n# 1.使用DAVID 进行 GO/ KEGG 富集分析\n\n  a.打开DAVID官网：https://david.ncifcrf.gov/\n  \n  b.点击上侧功能菜单：shortcut to DAVID Tools 进入Function Annotation\n  \n  c.进入到如下的页面中，页面中的大红框中就是进行分析所用的主要操作区域。进入分析页面后，通过如下三步即可完成分析：\n提交基因列表 --> 选定提交列表类型 --> 开始分析\n\n  `用本文件夹下 用于练手的基因文件 可跳过d步骤，e步骤中选择数据类型为ENSEMBL_TRANSCRIPT_ID`\n\n  d.在 “Enter Gene List” 中上传基因列表，格式是每行一个基因。按照 DAVID 的要求，总的基因个数不得超过 3000 个。我们这里去GO数据库以glyoxylate cycle为关键词对搜索出的蛋白进行分析。（以该循环内的蛋白为例）选中所需的蛋白（全部）点击Download，选择bioentity_internal_id 项，实际就是蛋白的UniProtAccession编号。\n  \n  这一步是为了获取用于分析的原数据，也可以使用本文档的 000_差异分析 中获得的蛋白，ENSEMBL_TRANSCRIPT_ID 数据进行富集分析\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166140079-c8902b77-a27e-432c-98cd-464a71edc6d3.png)\n  \n  然后通过https://biodbnet-abcc.ncifcrf.gov/db/db2db.php （一个基因格式转换的工具网站） 进行ID转换，input选择UniProtAccession， output选择AffyID，后将d步骤的UniProtAccession编号复制入转换框中进行转换\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141328-e64b162a-fa97-48a8-ae69-7ec69e0dd4a4.png)\n\n  \n  结果如下图\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141337-a3df761f-ae5c-460f-a623-f2e1a5829b9b.png)\n\n  \n  这种转换可能会产生缺项。\n \n  \n  e.“Select Identifier” 中选择上传的基因类型，因为我们上传的是AffyID，所以在下拉菜单中选择 “AFFYMETRIX_3PRIME_IVT_ID”。\n  \n  f.在 “List Type” 中有两个单选框，我们统一选择 “Gene List” 这一项。\n  \n  g.点击 “Submit List” 即可\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166141385-45260d50-3960-47da-b02d-170dd9834381.png)\n  \n  h.提交基因列表之后，经过几秒钟的等待，如果分析顺利，就会弹出一个提示：Please note that multiple species have been detected in your gene list. \n    这句话的意思就是在我们提交的基因列表中检测到多个物种，需要我们选择相应的物种。\n    点击弹出框中的 “确定”，然后在 “List” 中的选择相应物种，于本次分析使用的是人类细胞，\n    故这里我们选择 “Homo sapiens”，（读者可根据自己研究物种的类型进行选择）并点击下方的 “Select Species” 即可。\n\n   \n  i.在功能富集分析的结果中有多个折叠栏，其中 Gene_Ontology 这一折叠栏中有有三个栏目：GOTERM_BP_FAT、GOTERM_CC_FAT、GOTERM_MF_FAT 就是我们想要的 GO 功能富集分析结果。\n    而 Pathways 里面有一个 KEGG_PATHWAY 就是我们要的结果。找到 BP、CC、MF 和 KEGG 对应的详细结果， 点击每个栏目后面的 “Chart” 即可。\n   ![20191218161843663](https://user-images.githubusercontent.com/102901955/166135146-40de1cb7-b8d7-4201-af5b-211f8ab3346b.png)\n  \n  j.点击 “Chart” 之后，即可出现如下图所示的结果，这里面有几列数据分别是：Category、Term、RT、Genes、Count、%、P-Value 和 Benjamini。\n    这几列中我们比较关心的是：Term（GO语义）、P-Value（P值）、Count（基因数）、%（基因比例）点击红框中的 Download File 即可。\n    打开一个新的网页，新打开的网页就是分析结果的文本文件，可以下载或者导入到作图软件中进行后续的操作。\n\n  ![image](https://user-images.githubusercontent.com/102901955/166141475-d371c498-c404-4bad-ab8c-004398b9b026.png)\n\n\n\n\n\n\n    \n\n\n","slug":"生物信息学/001_DAVID在线富集分析","published":1,"updated":"2022-07-10T02:44:00.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjd00060bhf11wg5imp","content":"<p>转自<a href=\"https://blog.csdn.net/xiaobai1_1/article/details/103596474\">https://blog.csdn.net/xiaobai1_1/article/details/103596474</a></p>\n<p>原帖所用的是旧版的DAVID 因为各种原因，我用原帖的基因编号进行分析并没能得到同样的结果，故操作步骤与原帖相似，但重新选取了分析的基因。在一般的富集分析中被分析的基因往往来自于某一或一些列实验中差异分析的结果。</p>\n<h1 id=\"1-使用DAVID-进行-GO-KEGG-富集分析\"><a href=\"#1-使用DAVID-进行-GO-KEGG-富集分析\" class=\"headerlink\" title=\"1.使用DAVID 进行 GO/ KEGG 富集分析\"></a>1.使用DAVID 进行 GO/ KEGG 富集分析</h1><p>  a.打开DAVID官网：<a href=\"https://david.ncifcrf.gov/\">https://david.ncifcrf.gov/</a></p>\n<p>  b.点击上侧功能菜单：shortcut to DAVID Tools 进入Function Annotation</p>\n<p>  c.进入到如下的页面中，页面中的大红框中就是进行分析所用的主要操作区域。进入分析页面后，通过如下三步即可完成分析：<br>提交基因列表 –&gt; 选定提交列表类型 –&gt; 开始分析</p>\n<p>  <code>用本文件夹下 用于练手的基因文件 可跳过d步骤，e步骤中选择数据类型为ENSEMBL_TRANSCRIPT_ID</code></p>\n<p>  d.在 “Enter Gene List” 中上传基因列表，格式是每行一个基因。按照 DAVID 的要求，总的基因个数不得超过 3000 个。我们这里去GO数据库以glyoxylate cycle为关键词对搜索出的蛋白进行分析。（以该循环内的蛋白为例）选中所需的蛋白（全部）点击Download，选择bioentity_internal_id 项，实际就是蛋白的UniProtAccession编号。</p>\n<p>  这一步是为了获取用于分析的原数据，也可以使用本文档的 000_差异分析 中获得的蛋白，ENSEMBL_TRANSCRIPT_ID 数据进行富集分析</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166140079-c8902b77-a27e-432c-98cd-464a71edc6d3.png\" alt=\"image\"></p>\n<p>  然后通过<a href=\"https://biodbnet-abcc.ncifcrf.gov/db/db2db.php\">https://biodbnet-abcc.ncifcrf.gov/db/db2db.php</a> （一个基因格式转换的工具网站） 进行ID转换，input选择UniProtAccession， output选择AffyID，后将d步骤的UniProtAccession编号复制入转换框中进行转换</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141328-e64b162a-fa97-48a8-ae69-7ec69e0dd4a4.png\" alt=\"image\"></p>\n<p>  结果如下图</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141337-a3df761f-ae5c-460f-a623-f2e1a5829b9b.png\" alt=\"image\"></p>\n<p>  这种转换可能会产生缺项。</p>\n<p>  e.“Select Identifier” 中选择上传的基因类型，因为我们上传的是AffyID，所以在下拉菜单中选择 “AFFYMETRIX_3PRIME_IVT_ID”。</p>\n<p>  f.在 “List Type” 中有两个单选框，我们统一选择 “Gene List” 这一项。</p>\n<p>  g.点击 “Submit List” 即可</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141385-45260d50-3960-47da-b02d-170dd9834381.png\" alt=\"image\"></p>\n<p>  h.提交基因列表之后，经过几秒钟的等待，如果分析顺利，就会弹出一个提示：Please note that multiple species have been detected in your gene list.<br>    这句话的意思就是在我们提交的基因列表中检测到多个物种，需要我们选择相应的物种。<br>    点击弹出框中的 “确定”，然后在 “List” 中的选择相应物种，于本次分析使用的是人类细胞，<br>    故这里我们选择 “Homo sapiens”，（读者可根据自己研究物种的类型进行选择）并点击下方的 “Select Species” 即可。</p>\n<p>  i.在功能富集分析的结果中有多个折叠栏，其中 Gene_Ontology 这一折叠栏中有有三个栏目：GOTERM_BP_FAT、GOTERM_CC_FAT、GOTERM_MF_FAT 就是我们想要的 GO 功能富集分析结果。<br>    而 Pathways 里面有一个 KEGG_PATHWAY 就是我们要的结果。找到 BP、CC、MF 和 KEGG 对应的详细结果， 点击每个栏目后面的 “Chart” 即可。<br>   <img src=\"https://user-images.githubusercontent.com/102901955/166135146-40de1cb7-b8d7-4201-af5b-211f8ab3346b.png\" alt=\"20191218161843663\"></p>\n<p>  j.点击 “Chart” 之后，即可出现如下图所示的结果，这里面有几列数据分别是：Category、Term、RT、Genes、Count、%、P-Value 和 Benjamini。<br>    这几列中我们比较关心的是：Term（GO语义）、P-Value（P值）、Count（基因数）、%（基因比例）点击红框中的 Download File 即可。<br>    打开一个新的网页，新打开的网页就是分析结果的文本文件，可以下载或者导入到作图软件中进行后续的操作。</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141475-d371c498-c404-4bad-ab8c-004398b9b026.png\" alt=\"image\"></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<p>转自<a href=\"https://blog.csdn.net/xiaobai1_1/article/details/103596474\">https://blog.csdn.net/xiaobai1_1/article/details/103596474</a></p>\n<p>原帖所用的是旧版的DAVID 因为各种原因，我用原帖的基因编号进行分析并没能得到同样的结果，故操作步骤与原帖相似，但重新选取了分析的基因。在一般的富集分析中被分析的基因往往来自于某一或一些列实验中差异分析的结果。</p>\n<h1 id=\"1-使用DAVID-进行-GO-KEGG-富集分析\"><a href=\"#1-使用DAVID-进行-GO-KEGG-富集分析\" class=\"headerlink\" title=\"1.使用DAVID 进行 GO/ KEGG 富集分析\"></a>1.使用DAVID 进行 GO/ KEGG 富集分析</h1><p>  a.打开DAVID官网：<a href=\"https://david.ncifcrf.gov/\">https://david.ncifcrf.gov/</a></p>\n<p>  b.点击上侧功能菜单：shortcut to DAVID Tools 进入Function Annotation</p>\n<p>  c.进入到如下的页面中，页面中的大红框中就是进行分析所用的主要操作区域。进入分析页面后，通过如下三步即可完成分析：<br>提交基因列表 –&gt; 选定提交列表类型 –&gt; 开始分析</p>\n<p>  <code>用本文件夹下 用于练手的基因文件 可跳过d步骤，e步骤中选择数据类型为ENSEMBL_TRANSCRIPT_ID</code></p>\n<p>  d.在 “Enter Gene List” 中上传基因列表，格式是每行一个基因。按照 DAVID 的要求，总的基因个数不得超过 3000 个。我们这里去GO数据库以glyoxylate cycle为关键词对搜索出的蛋白进行分析。（以该循环内的蛋白为例）选中所需的蛋白（全部）点击Download，选择bioentity_internal_id 项，实际就是蛋白的UniProtAccession编号。</p>\n<p>  这一步是为了获取用于分析的原数据，也可以使用本文档的 000_差异分析 中获得的蛋白，ENSEMBL_TRANSCRIPT_ID 数据进行富集分析</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166140079-c8902b77-a27e-432c-98cd-464a71edc6d3.png\" alt=\"image\"></p>\n<p>  然后通过<a href=\"https://biodbnet-abcc.ncifcrf.gov/db/db2db.php\">https://biodbnet-abcc.ncifcrf.gov/db/db2db.php</a> （一个基因格式转换的工具网站） 进行ID转换，input选择UniProtAccession， output选择AffyID，后将d步骤的UniProtAccession编号复制入转换框中进行转换</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141328-e64b162a-fa97-48a8-ae69-7ec69e0dd4a4.png\" alt=\"image\"></p>\n<p>  结果如下图</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141337-a3df761f-ae5c-460f-a623-f2e1a5829b9b.png\" alt=\"image\"></p>\n<p>  这种转换可能会产生缺项。</p>\n<p>  e.“Select Identifier” 中选择上传的基因类型，因为我们上传的是AffyID，所以在下拉菜单中选择 “AFFYMETRIX_3PRIME_IVT_ID”。</p>\n<p>  f.在 “List Type” 中有两个单选框，我们统一选择 “Gene List” 这一项。</p>\n<p>  g.点击 “Submit List” 即可</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141385-45260d50-3960-47da-b02d-170dd9834381.png\" alt=\"image\"></p>\n<p>  h.提交基因列表之后，经过几秒钟的等待，如果分析顺利，就会弹出一个提示：Please note that multiple species have been detected in your gene list.<br>    这句话的意思就是在我们提交的基因列表中检测到多个物种，需要我们选择相应的物种。<br>    点击弹出框中的 “确定”，然后在 “List” 中的选择相应物种，于本次分析使用的是人类细胞，<br>    故这里我们选择 “Homo sapiens”，（读者可根据自己研究物种的类型进行选择）并点击下方的 “Select Species” 即可。</p>\n<p>  i.在功能富集分析的结果中有多个折叠栏，其中 Gene_Ontology 这一折叠栏中有有三个栏目：GOTERM_BP_FAT、GOTERM_CC_FAT、GOTERM_MF_FAT 就是我们想要的 GO 功能富集分析结果。<br>    而 Pathways 里面有一个 KEGG_PATHWAY 就是我们要的结果。找到 BP、CC、MF 和 KEGG 对应的详细结果， 点击每个栏目后面的 “Chart” 即可。<br>   <img src=\"https://user-images.githubusercontent.com/102901955/166135146-40de1cb7-b8d7-4201-af5b-211f8ab3346b.png\" alt=\"20191218161843663\"></p>\n<p>  j.点击 “Chart” 之后，即可出现如下图所示的结果，这里面有几列数据分别是：Category、Term、RT、Genes、Count、%、P-Value 和 Benjamini。<br>    这几列中我们比较关心的是：Term（GO语义）、P-Value（P值）、Count（基因数）、%（基因比例）点击红框中的 Download File 即可。<br>    打开一个新的网页，新打开的网页就是分析结果的文本文件，可以下载或者导入到作图软件中进行后续的操作。</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166141475-d371c498-c404-4bad-ab8c-004398b9b026.png\" alt=\"image\"></p>\n"},{"title":"GSEA,GSVA分析","date":"2022-05-19T16:00:00.000Z","_content":"一种富集分析\n\n# 一、什么是GSEA\n<br></br>\n## 1.GSEA(基因集富集分析)\n\nGSEA也是一种富集分析方式，与GO和KEGG富集分析相似却也有不同。一般的富集分析(GO与KEGG富集分析)更加关注少数几个显著变化的基因，在分析中往往要确定一个阈值，去除显著性或富集程度在阈值下基因。只选取头部的几个基因。这样的分析方法有可能会将基因变化量不大但又有重要生物学意义的一些基因忽略。而GSEA 在分析过程中不需要设置阈值，会将差异分析结果按log(FC)排序。关注的是基因表达量相近的基因数量。GSEA分析方法，可以有效的保留一般富集分析在设置阈值时去除的一些生物信息。GSEA是用一个预先定义的基因集中的基因来评估在与表型相关度排序的基因表中的分布趋势，从而判断其对表型的贡献。\n\n## 2.GSEA结果图解析\n\n![image](https://user-images.githubusercontent.com/102901955/168717081-1d444516-10c4-4638-a01e-a9889efd3966.png)\n\n以上图为例，GSEA 的结果图一般分为三个部分\n\n1.第一部分: Enrichment Score, 也就是主图像的纵轴, 表示基因的富集程度, 计算方式是每当有一个在通路中的基因(黑线)则ES累加一个值, 每当有一个不在通路中的基因(非黑线部分)则ES减一个值, 最后做出曲线. 即在通路中的基因相邻越近, 曲线\"斜率\"越大, 基因越分散, 曲线\"斜率\"越小. 通常会显出一个山坡图, 若山顶为于红色区域, 说明GSEA结果为该通路上调表达. 反之则为下调表达. \n\n2.第二部分: 横坐标, 红蓝条表示的是输入的基因集, 红色部分表示差异分析中log(FC)为正, 蓝色部分表示差异分析中log(FC)为负. 黑线表示与选取的通路相关的基因, 本例中黑线即表示CHRXP11 通路相关的基因. \n\n3.第三部分: Ranked list metric 表示的也是差异分析中不同基因log(FC)的量, 将横坐标中的红蓝图量化表达出来. \n\n## 3.GSEA R语言实现\n\n1.数据格式\n\n![image](https://user-images.githubusercontent.com/102901955/169223848-ed0e5293-f179-4cdf-a288-37046819a6c5.png)\n\n需要一个键名为基因ENTREZID, 键值为logFC的字典格式向量, K可以用下面代码构造字典, 其中df_all的logFC列为 差异分析后的logFC值, ENTREZID列为对应基因的ENTREZID编号\n```R\ngene_fc <- df_all$logFC                                  # 构造字典向量\nnames(gene_fc) <- df_all$ENTREZID                        # 构造字典向量\n```\n\n2.代码\n```R\n# 加载R包\nlibrary(enrichplot)      # 用于画图\nlibrary(clusterProfiler) # GSEA分析\n\n# 导入文件\ndf = read.csv(\"路径\")\n\n# GAEA\ndf_all <- df_all[order(df_all$logFC, decreasing = T), ]  # 数据按logFC排列\ngene_fc <- df_all$logFC                                  # 构造字典向量\nnames(gene_fc) <- df_all$ENTREZID                        # 构造字典向量\nKEGG <- gseKEGG(gene_fc, organism = \"mmu\")               # 人类样本organism参数为hsa 详情见http://www.genome.jp/kegg/catalog/org_list.html\n\n# 绘图\ngseaplot2(\n  KEGG,                           # gseaResult object，即GSEA结果\n  \"mmu00830\",                     # 富集的ID编号，选择表示的通路\n  title = \"Retinol metabolism\",   # 标题\n  color = \"green\",                # GSEA线条颜色\n  base_size = 11,                 # 基础字体大小\n  rel_heights = c(1.5, 0.5, 1),   # 副图的相对高度\n  subplots = 1:3,                 # 要显示哪些副图 如subplots=c(1,3) -只要第一和第三个图，subplots=1 -只要第一个图\n  pvalue_table = FALSE,           # 是否添加 pvalue table\n  ES_geom = \"line\"                # running enrichment score用线还是用点ES_geom = \"dot\"\n)\n\n```\n\n\n<br></br>\n# 二、什么是GSVA\n<br></br>\n\n## 1.GSVA(基因集变异分析)\n\nGSVA 是一种基因富集分析算法. 输入数据是表达矩阵, 与一般的富集分析不同, GSVA不需要对样品进行分组, 它可以先进行通路的富集, 形成一个以通路为行名, 样品为列名的表达矩阵. 是一种非参数的无监督分析方法, 主要用来评估芯片和转录组的基因集富集结果. 主要是通过将基因在不同样品间的表达量矩阵转化成基因集在样品间的表达量矩阵, 从而来评估不同的代谢通路在不同样品间是否富集. \n\n## 2.GSVA结果解释\n\nGSVA分析的结果是一个表达矩阵, 常见的结果可视化为制作热图, 热图的含义这里不做赘述. \n\n## 3.GSVA R语言实现\n\n1.导入的数据结构\n\n<figure class = \"half\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169063653-e5c0315d-0296-4a79-bfee-af60834bf9b6.png\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169064832-f85b88b0-58dc-46fe-bd1e-43563ccf7357.png\">\n</figure>\n\n表达矩阵: 导入的数据格式如上图所示, 行名为样本编号, 列名为Gene Symbol ID, 单元格内值为log2化的表达量. 原始数据可以在GEO数据库中找到.\n基因集:   导入的数据如下图所示, 格式为gmt, 可以在[MSigdb](https://www.gsea-msigdb.org/gsea/msigdb/genesets.jsp)上找到常用的基因集, 也可以自己制作.\n\n2.代码\n\n```R\n# 加载R包\nlibrary(GSVA)            # 用于GSVA分析\nlibrary(GSEABase)        # 用于读取文件\nlibrary(pheatmap)        # 制作热图\n\n# 文件读取\nsetwd(\"工作路径\")                                   # 设置工作路径\nkeggSet = getGmt(\"基因集文件路径\")                  # 读取基因集文件\nexpmatrix_data = read.table(                       # 读取表达矩阵\n  \"表达矩阵路径\", \n  header = TRUE,                                         \n)\n```\n如果格式不对, 自行调整\n```R\n# GSVA分析\ngsva_data <- gsva(\n  expr = as.matrix(exp_new),         # 输入表达矩阵\n  gset.idx.list = keggSet,           # 输入基因集\n  method = \"gsva\",                   # 选择算法\n  kcdf = \"none\"                      # 选择CDF计算模型,正态，高斯还是泊松\n)\n```\nGSVA分析的算法见参考连接, ?gsva可以查看更多参数, 一般来说log2化的矩阵计算模型选用正态, 没有进行log2化的选泊松\n```R\n# 绘制热图\npheatmap(\n  gsva_data,\n  show_colnames = T,\n  show_rownames = T,\n  kmeans_k = NA\n)\n```\n\n\n\n\n\n##\n\n# 参考连接\n[GSEA R绘图 代码](https://zhuanlan.zhihu.com/p/358168557)\n\n[GSVA算法介绍](https://zhuanlan.zhihu.com/p/355879724)\n\n\n","source":"_posts/生物信息学/GSEA, GSVA分析.md","raw":"---\ntitle: GSEA,GSVA分析\ncategories:\n\t- 生物信息学\n\t- 富集分析\ndate: 2022-05-20\n---\n一种富集分析\n\n# 一、什么是GSEA\n<br></br>\n## 1.GSEA(基因集富集分析)\n\nGSEA也是一种富集分析方式，与GO和KEGG富集分析相似却也有不同。一般的富集分析(GO与KEGG富集分析)更加关注少数几个显著变化的基因，在分析中往往要确定一个阈值，去除显著性或富集程度在阈值下基因。只选取头部的几个基因。这样的分析方法有可能会将基因变化量不大但又有重要生物学意义的一些基因忽略。而GSEA 在分析过程中不需要设置阈值，会将差异分析结果按log(FC)排序。关注的是基因表达量相近的基因数量。GSEA分析方法，可以有效的保留一般富集分析在设置阈值时去除的一些生物信息。GSEA是用一个预先定义的基因集中的基因来评估在与表型相关度排序的基因表中的分布趋势，从而判断其对表型的贡献。\n\n## 2.GSEA结果图解析\n\n![image](https://user-images.githubusercontent.com/102901955/168717081-1d444516-10c4-4638-a01e-a9889efd3966.png)\n\n以上图为例，GSEA 的结果图一般分为三个部分\n\n1.第一部分: Enrichment Score, 也就是主图像的纵轴, 表示基因的富集程度, 计算方式是每当有一个在通路中的基因(黑线)则ES累加一个值, 每当有一个不在通路中的基因(非黑线部分)则ES减一个值, 最后做出曲线. 即在通路中的基因相邻越近, 曲线\"斜率\"越大, 基因越分散, 曲线\"斜率\"越小. 通常会显出一个山坡图, 若山顶为于红色区域, 说明GSEA结果为该通路上调表达. 反之则为下调表达. \n\n2.第二部分: 横坐标, 红蓝条表示的是输入的基因集, 红色部分表示差异分析中log(FC)为正, 蓝色部分表示差异分析中log(FC)为负. 黑线表示与选取的通路相关的基因, 本例中黑线即表示CHRXP11 通路相关的基因. \n\n3.第三部分: Ranked list metric 表示的也是差异分析中不同基因log(FC)的量, 将横坐标中的红蓝图量化表达出来. \n\n## 3.GSEA R语言实现\n\n1.数据格式\n\n![image](https://user-images.githubusercontent.com/102901955/169223848-ed0e5293-f179-4cdf-a288-37046819a6c5.png)\n\n需要一个键名为基因ENTREZID, 键值为logFC的字典格式向量, K可以用下面代码构造字典, 其中df_all的logFC列为 差异分析后的logFC值, ENTREZID列为对应基因的ENTREZID编号\n```R\ngene_fc <- df_all$logFC                                  # 构造字典向量\nnames(gene_fc) <- df_all$ENTREZID                        # 构造字典向量\n```\n\n2.代码\n```R\n# 加载R包\nlibrary(enrichplot)      # 用于画图\nlibrary(clusterProfiler) # GSEA分析\n\n# 导入文件\ndf = read.csv(\"路径\")\n\n# GAEA\ndf_all <- df_all[order(df_all$logFC, decreasing = T), ]  # 数据按logFC排列\ngene_fc <- df_all$logFC                                  # 构造字典向量\nnames(gene_fc) <- df_all$ENTREZID                        # 构造字典向量\nKEGG <- gseKEGG(gene_fc, organism = \"mmu\")               # 人类样本organism参数为hsa 详情见http://www.genome.jp/kegg/catalog/org_list.html\n\n# 绘图\ngseaplot2(\n  KEGG,                           # gseaResult object，即GSEA结果\n  \"mmu00830\",                     # 富集的ID编号，选择表示的通路\n  title = \"Retinol metabolism\",   # 标题\n  color = \"green\",                # GSEA线条颜色\n  base_size = 11,                 # 基础字体大小\n  rel_heights = c(1.5, 0.5, 1),   # 副图的相对高度\n  subplots = 1:3,                 # 要显示哪些副图 如subplots=c(1,3) -只要第一和第三个图，subplots=1 -只要第一个图\n  pvalue_table = FALSE,           # 是否添加 pvalue table\n  ES_geom = \"line\"                # running enrichment score用线还是用点ES_geom = \"dot\"\n)\n\n```\n\n\n<br></br>\n# 二、什么是GSVA\n<br></br>\n\n## 1.GSVA(基因集变异分析)\n\nGSVA 是一种基因富集分析算法. 输入数据是表达矩阵, 与一般的富集分析不同, GSVA不需要对样品进行分组, 它可以先进行通路的富集, 形成一个以通路为行名, 样品为列名的表达矩阵. 是一种非参数的无监督分析方法, 主要用来评估芯片和转录组的基因集富集结果. 主要是通过将基因在不同样品间的表达量矩阵转化成基因集在样品间的表达量矩阵, 从而来评估不同的代谢通路在不同样品间是否富集. \n\n## 2.GSVA结果解释\n\nGSVA分析的结果是一个表达矩阵, 常见的结果可视化为制作热图, 热图的含义这里不做赘述. \n\n## 3.GSVA R语言实现\n\n1.导入的数据结构\n\n<figure class = \"half\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169063653-e5c0315d-0296-4a79-bfee-af60834bf9b6.png\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169064832-f85b88b0-58dc-46fe-bd1e-43563ccf7357.png\">\n</figure>\n\n表达矩阵: 导入的数据格式如上图所示, 行名为样本编号, 列名为Gene Symbol ID, 单元格内值为log2化的表达量. 原始数据可以在GEO数据库中找到.\n基因集:   导入的数据如下图所示, 格式为gmt, 可以在[MSigdb](https://www.gsea-msigdb.org/gsea/msigdb/genesets.jsp)上找到常用的基因集, 也可以自己制作.\n\n2.代码\n\n```R\n# 加载R包\nlibrary(GSVA)            # 用于GSVA分析\nlibrary(GSEABase)        # 用于读取文件\nlibrary(pheatmap)        # 制作热图\n\n# 文件读取\nsetwd(\"工作路径\")                                   # 设置工作路径\nkeggSet = getGmt(\"基因集文件路径\")                  # 读取基因集文件\nexpmatrix_data = read.table(                       # 读取表达矩阵\n  \"表达矩阵路径\", \n  header = TRUE,                                         \n)\n```\n如果格式不对, 自行调整\n```R\n# GSVA分析\ngsva_data <- gsva(\n  expr = as.matrix(exp_new),         # 输入表达矩阵\n  gset.idx.list = keggSet,           # 输入基因集\n  method = \"gsva\",                   # 选择算法\n  kcdf = \"none\"                      # 选择CDF计算模型,正态，高斯还是泊松\n)\n```\nGSVA分析的算法见参考连接, ?gsva可以查看更多参数, 一般来说log2化的矩阵计算模型选用正态, 没有进行log2化的选泊松\n```R\n# 绘制热图\npheatmap(\n  gsva_data,\n  show_colnames = T,\n  show_rownames = T,\n  kmeans_k = NA\n)\n```\n\n\n\n\n\n##\n\n# 参考连接\n[GSEA R绘图 代码](https://zhuanlan.zhihu.com/p/358168557)\n\n[GSVA算法介绍](https://zhuanlan.zhihu.com/p/355879724)\n\n\n","slug":"生物信息学/GSEA, GSVA分析","published":1,"updated":"2022-07-10T02:45:19.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hje00070bhf3vx23xmx","content":"<p>一种富集分析</p>\n<h1 id=\"一、什么是GSEA\"><a href=\"#一、什么是GSEA\" class=\"headerlink\" title=\"一、什么是GSEA\"></a>一、什么是GSEA</h1><p><br></br></p>\n<h2 id=\"1-GSEA-基因集富集分析\"><a href=\"#1-GSEA-基因集富集分析\" class=\"headerlink\" title=\"1.GSEA(基因集富集分析)\"></a>1.GSEA(基因集富集分析)</h2><p>GSEA也是一种富集分析方式，与GO和KEGG富集分析相似却也有不同。一般的富集分析(GO与KEGG富集分析)更加关注少数几个显著变化的基因，在分析中往往要确定一个阈值，去除显著性或富集程度在阈值下基因。只选取头部的几个基因。这样的分析方法有可能会将基因变化量不大但又有重要生物学意义的一些基因忽略。而GSEA 在分析过程中不需要设置阈值，会将差异分析结果按log(FC)排序。关注的是基因表达量相近的基因数量。GSEA分析方法，可以有效的保留一般富集分析在设置阈值时去除的一些生物信息。GSEA是用一个预先定义的基因集中的基因来评估在与表型相关度排序的基因表中的分布趋势，从而判断其对表型的贡献。</p>\n<h2 id=\"2-GSEA结果图解析\"><a href=\"#2-GSEA结果图解析\" class=\"headerlink\" title=\"2.GSEA结果图解析\"></a>2.GSEA结果图解析</h2><p><img src=\"https://user-images.githubusercontent.com/102901955/168717081-1d444516-10c4-4638-a01e-a9889efd3966.png\" alt=\"image\"></p>\n<p>以上图为例，GSEA 的结果图一般分为三个部分</p>\n<p>1.第一部分: Enrichment Score, 也就是主图像的纵轴, 表示基因的富集程度, 计算方式是每当有一个在通路中的基因(黑线)则ES累加一个值, 每当有一个不在通路中的基因(非黑线部分)则ES减一个值, 最后做出曲线. 即在通路中的基因相邻越近, 曲线”斜率”越大, 基因越分散, 曲线”斜率”越小. 通常会显出一个山坡图, 若山顶为于红色区域, 说明GSEA结果为该通路上调表达. 反之则为下调表达. </p>\n<p>2.第二部分: 横坐标, 红蓝条表示的是输入的基因集, 红色部分表示差异分析中log(FC)为正, 蓝色部分表示差异分析中log(FC)为负. 黑线表示与选取的通路相关的基因, 本例中黑线即表示CHRXP11 通路相关的基因. </p>\n<p>3.第三部分: Ranked list metric 表示的也是差异分析中不同基因log(FC)的量, 将横坐标中的红蓝图量化表达出来. </p>\n<h2 id=\"3-GSEA-R语言实现\"><a href=\"#3-GSEA-R语言实现\" class=\"headerlink\" title=\"3.GSEA R语言实现\"></a>3.GSEA R语言实现</h2><p>1.数据格式</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/169223848-ed0e5293-f179-4cdf-a288-37046819a6c5.png\" alt=\"image\"></p>\n<p>需要一个键名为基因ENTREZID, 键值为logFC的字典格式向量, K可以用下面代码构造字典, 其中df_all的logFC列为 差异分析后的logFC值, ENTREZID列为对应基因的ENTREZID编号</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gene_fc <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>logFC                                  <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>ENTREZID                        <span class=\"comment\"># 构造字典向量</span></span><br></pre></td></tr></table></figure>\n\n<p>2.代码</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>enrichplot<span class=\"punctuation\">)</span>      <span class=\"comment\"># 用于画图</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>clusterProfiler<span class=\"punctuation\">)</span> <span class=\"comment\"># GSEA分析</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入文件</span></span><br><span class=\"line\">df <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;路径&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GAEA</span></span><br><span class=\"line\">df_all <span class=\"operator\">&lt;-</span> df_all<span class=\"punctuation\">[</span>order<span class=\"punctuation\">(</span>df_all<span class=\"operator\">$</span>logFC<span class=\"punctuation\">,</span> decreasing <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span>  <span class=\"comment\"># 数据按logFC排列</span></span><br><span class=\"line\">gene_fc <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>logFC                                  <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>ENTREZID                        <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\">KEGG <span class=\"operator\">&lt;-</span> gseKEGG<span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">,</span> organism <span class=\"operator\">=</span> <span class=\"string\">&quot;mmu&quot;</span><span class=\"punctuation\">)</span>               <span class=\"comment\"># 人类样本organism参数为hsa 详情见http://www.genome.jp/kegg/catalog/org_list.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">gseaplot2<span class=\"punctuation\">(</span></span><br><span class=\"line\">  KEGG<span class=\"punctuation\">,</span>                           <span class=\"comment\"># gseaResult object，即GSEA结果</span></span><br><span class=\"line\">  <span class=\"string\">&quot;mmu00830&quot;</span><span class=\"punctuation\">,</span>                     <span class=\"comment\"># 富集的ID编号，选择表示的通路</span></span><br><span class=\"line\">  title <span class=\"operator\">=</span> <span class=\"string\">&quot;Retinol metabolism&quot;</span><span class=\"punctuation\">,</span>   <span class=\"comment\"># 标题</span></span><br><span class=\"line\">  color <span class=\"operator\">=</span> <span class=\"string\">&quot;green&quot;</span><span class=\"punctuation\">,</span>                <span class=\"comment\"># GSEA线条颜色</span></span><br><span class=\"line\">  base_size <span class=\"operator\">=</span> <span class=\"number\">11</span><span class=\"punctuation\">,</span>                 <span class=\"comment\"># 基础字体大小</span></span><br><span class=\"line\">  rel_heights <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1.5</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>   <span class=\"comment\"># 副图的相对高度</span></span><br><span class=\"line\">  subplots <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">,</span>                 <span class=\"comment\"># 要显示哪些副图 如subplots=c(1,3) -只要第一和第三个图，subplots=1 -只要第一个图</span></span><br><span class=\"line\">  pvalue_table <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>           <span class=\"comment\"># 是否添加 pvalue table</span></span><br><span class=\"line\">  ES_geom <span class=\"operator\">=</span> <span class=\"string\">&quot;line&quot;</span>                <span class=\"comment\"># running enrichment score用线还是用点ES_geom = &quot;dot&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><br></br></p>\n<h1 id=\"二、什么是GSVA\"><a href=\"#二、什么是GSVA\" class=\"headerlink\" title=\"二、什么是GSVA\"></a>二、什么是GSVA</h1><p><br></br></p>\n<h2 id=\"1-GSVA-基因集变异分析\"><a href=\"#1-GSVA-基因集变异分析\" class=\"headerlink\" title=\"1.GSVA(基因集变异分析)\"></a>1.GSVA(基因集变异分析)</h2><p>GSVA 是一种基因富集分析算法. 输入数据是表达矩阵, 与一般的富集分析不同, GSVA不需要对样品进行分组, 它可以先进行通路的富集, 形成一个以通路为行名, 样品为列名的表达矩阵. 是一种非参数的无监督分析方法, 主要用来评估芯片和转录组的基因集富集结果. 主要是通过将基因在不同样品间的表达量矩阵转化成基因集在样品间的表达量矩阵, 从而来评估不同的代谢通路在不同样品间是否富集. </p>\n<h2 id=\"2-GSVA结果解释\"><a href=\"#2-GSVA结果解释\" class=\"headerlink\" title=\"2.GSVA结果解释\"></a>2.GSVA结果解释</h2><p>GSVA分析的结果是一个表达矩阵, 常见的结果可视化为制作热图, 热图的含义这里不做赘述. </p>\n<h2 id=\"3-GSVA-R语言实现\"><a href=\"#3-GSVA-R语言实现\" class=\"headerlink\" title=\"3.GSVA R语言实现\"></a>3.GSVA R语言实现</h2><p>1.导入的数据结构</p>\n<figure class = \"half\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169063653-e5c0315d-0296-4a79-bfee-af60834bf9b6.png\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169064832-f85b88b0-58dc-46fe-bd1e-43563ccf7357.png\">\n</figure>\n\n<p>表达矩阵: 导入的数据格式如上图所示, 行名为样本编号, 列名为Gene Symbol ID, 单元格内值为log2化的表达量. 原始数据可以在GEO数据库中找到.<br>基因集:   导入的数据如下图所示, 格式为gmt, 可以在<a href=\"https://www.gsea-msigdb.org/gsea/msigdb/genesets.jsp\">MSigdb</a>上找到常用的基因集, 也可以自己制作.</p>\n<p>2.代码</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>GSVA<span class=\"punctuation\">)</span>            <span class=\"comment\"># 用于GSVA分析</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>GSEABase<span class=\"punctuation\">)</span>        <span class=\"comment\"># 用于读取文件</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pheatmap<span class=\"punctuation\">)</span>        <span class=\"comment\"># 制作热图</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件读取</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;工作路径&quot;</span><span class=\"punctuation\">)</span>                                   <span class=\"comment\"># 设置工作路径</span></span><br><span class=\"line\">keggSet <span class=\"operator\">=</span> getGmt<span class=\"punctuation\">(</span><span class=\"string\">&quot;基因集文件路径&quot;</span><span class=\"punctuation\">)</span>                  <span class=\"comment\"># 读取基因集文件</span></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">=</span> read.table<span class=\"punctuation\">(</span>                       <span class=\"comment\"># 读取表达矩阵</span></span><br><span class=\"line\">  <span class=\"string\">&quot;表达矩阵路径&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span>                                         </span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>如果格式不对, 自行调整</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GSVA分析</span></span><br><span class=\"line\">gsva_data <span class=\"operator\">&lt;-</span> gsva<span class=\"punctuation\">(</span></span><br><span class=\"line\">  expr <span class=\"operator\">=</span> as.matrix<span class=\"punctuation\">(</span>exp_new<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>         <span class=\"comment\"># 输入表达矩阵</span></span><br><span class=\"line\">  gset.idx.list <span class=\"operator\">=</span> keggSet<span class=\"punctuation\">,</span>           <span class=\"comment\"># 输入基因集</span></span><br><span class=\"line\">  method <span class=\"operator\">=</span> <span class=\"string\">&quot;gsva&quot;</span><span class=\"punctuation\">,</span>                   <span class=\"comment\"># 选择算法</span></span><br><span class=\"line\">  kcdf <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span>                      <span class=\"comment\"># 选择CDF计算模型,正态，高斯还是泊松</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>GSVA分析的算法见参考连接, ?gsva可以查看更多参数, 一般来说log2化的矩阵计算模型选用正态, 没有进行log2化的选泊松</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制热图</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span></span><br><span class=\"line\">  gsva_data<span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_colnames <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_rownames <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  kmeans_k <span class=\"operator\">=</span> <span class=\"literal\">NA</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h1><p><a href=\"https://zhuanlan.zhihu.com/p/358168557\">GSEA R绘图 代码</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/355879724\">GSVA算法介绍</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<p>一种富集分析</p>\n<h1 id=\"一、什么是GSEA\"><a href=\"#一、什么是GSEA\" class=\"headerlink\" title=\"一、什么是GSEA\"></a>一、什么是GSEA</h1><p><br></br></p>\n<h2 id=\"1-GSEA-基因集富集分析\"><a href=\"#1-GSEA-基因集富集分析\" class=\"headerlink\" title=\"1.GSEA(基因集富集分析)\"></a>1.GSEA(基因集富集分析)</h2><p>GSEA也是一种富集分析方式，与GO和KEGG富集分析相似却也有不同。一般的富集分析(GO与KEGG富集分析)更加关注少数几个显著变化的基因，在分析中往往要确定一个阈值，去除显著性或富集程度在阈值下基因。只选取头部的几个基因。这样的分析方法有可能会将基因变化量不大但又有重要生物学意义的一些基因忽略。而GSEA 在分析过程中不需要设置阈值，会将差异分析结果按log(FC)排序。关注的是基因表达量相近的基因数量。GSEA分析方法，可以有效的保留一般富集分析在设置阈值时去除的一些生物信息。GSEA是用一个预先定义的基因集中的基因来评估在与表型相关度排序的基因表中的分布趋势，从而判断其对表型的贡献。</p>\n<h2 id=\"2-GSEA结果图解析\"><a href=\"#2-GSEA结果图解析\" class=\"headerlink\" title=\"2.GSEA结果图解析\"></a>2.GSEA结果图解析</h2><p><img src=\"https://user-images.githubusercontent.com/102901955/168717081-1d444516-10c4-4638-a01e-a9889efd3966.png\" alt=\"image\"></p>\n<p>以上图为例，GSEA 的结果图一般分为三个部分</p>\n<p>1.第一部分: Enrichment Score, 也就是主图像的纵轴, 表示基因的富集程度, 计算方式是每当有一个在通路中的基因(黑线)则ES累加一个值, 每当有一个不在通路中的基因(非黑线部分)则ES减一个值, 最后做出曲线. 即在通路中的基因相邻越近, 曲线”斜率”越大, 基因越分散, 曲线”斜率”越小. 通常会显出一个山坡图, 若山顶为于红色区域, 说明GSEA结果为该通路上调表达. 反之则为下调表达. </p>\n<p>2.第二部分: 横坐标, 红蓝条表示的是输入的基因集, 红色部分表示差异分析中log(FC)为正, 蓝色部分表示差异分析中log(FC)为负. 黑线表示与选取的通路相关的基因, 本例中黑线即表示CHRXP11 通路相关的基因. </p>\n<p>3.第三部分: Ranked list metric 表示的也是差异分析中不同基因log(FC)的量, 将横坐标中的红蓝图量化表达出来. </p>\n<h2 id=\"3-GSEA-R语言实现\"><a href=\"#3-GSEA-R语言实现\" class=\"headerlink\" title=\"3.GSEA R语言实现\"></a>3.GSEA R语言实现</h2><p>1.数据格式</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/169223848-ed0e5293-f179-4cdf-a288-37046819a6c5.png\" alt=\"image\"></p>\n<p>需要一个键名为基因ENTREZID, 键值为logFC的字典格式向量, K可以用下面代码构造字典, 其中df_all的logFC列为 差异分析后的logFC值, ENTREZID列为对应基因的ENTREZID编号</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gene_fc <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>logFC                                  <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>ENTREZID                        <span class=\"comment\"># 构造字典向量</span></span><br></pre></td></tr></table></figure>\n\n<p>2.代码</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>enrichplot<span class=\"punctuation\">)</span>      <span class=\"comment\"># 用于画图</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>clusterProfiler<span class=\"punctuation\">)</span> <span class=\"comment\"># GSEA分析</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入文件</span></span><br><span class=\"line\">df <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;路径&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># GAEA</span></span><br><span class=\"line\">df_all <span class=\"operator\">&lt;-</span> df_all<span class=\"punctuation\">[</span>order<span class=\"punctuation\">(</span>df_all<span class=\"operator\">$</span>logFC<span class=\"punctuation\">,</span> decreasing <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span>  <span class=\"comment\"># 数据按logFC排列</span></span><br><span class=\"line\">gene_fc <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>logFC                                  <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> df_all<span class=\"operator\">$</span>ENTREZID                        <span class=\"comment\"># 构造字典向量</span></span><br><span class=\"line\">KEGG <span class=\"operator\">&lt;-</span> gseKEGG<span class=\"punctuation\">(</span>gene_fc<span class=\"punctuation\">,</span> organism <span class=\"operator\">=</span> <span class=\"string\">&quot;mmu&quot;</span><span class=\"punctuation\">)</span>               <span class=\"comment\"># 人类样本organism参数为hsa 详情见http://www.genome.jp/kegg/catalog/org_list.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">gseaplot2<span class=\"punctuation\">(</span></span><br><span class=\"line\">  KEGG<span class=\"punctuation\">,</span>                           <span class=\"comment\"># gseaResult object，即GSEA结果</span></span><br><span class=\"line\">  <span class=\"string\">&quot;mmu00830&quot;</span><span class=\"punctuation\">,</span>                     <span class=\"comment\"># 富集的ID编号，选择表示的通路</span></span><br><span class=\"line\">  title <span class=\"operator\">=</span> <span class=\"string\">&quot;Retinol metabolism&quot;</span><span class=\"punctuation\">,</span>   <span class=\"comment\"># 标题</span></span><br><span class=\"line\">  color <span class=\"operator\">=</span> <span class=\"string\">&quot;green&quot;</span><span class=\"punctuation\">,</span>                <span class=\"comment\"># GSEA线条颜色</span></span><br><span class=\"line\">  base_size <span class=\"operator\">=</span> <span class=\"number\">11</span><span class=\"punctuation\">,</span>                 <span class=\"comment\"># 基础字体大小</span></span><br><span class=\"line\">  rel_heights <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1.5</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>   <span class=\"comment\"># 副图的相对高度</span></span><br><span class=\"line\">  subplots <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">,</span>                 <span class=\"comment\"># 要显示哪些副图 如subplots=c(1,3) -只要第一和第三个图，subplots=1 -只要第一个图</span></span><br><span class=\"line\">  pvalue_table <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>           <span class=\"comment\"># 是否添加 pvalue table</span></span><br><span class=\"line\">  ES_geom <span class=\"operator\">=</span> <span class=\"string\">&quot;line&quot;</span>                <span class=\"comment\"># running enrichment score用线还是用点ES_geom = &quot;dot&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><br></br></p>\n<h1 id=\"二、什么是GSVA\"><a href=\"#二、什么是GSVA\" class=\"headerlink\" title=\"二、什么是GSVA\"></a>二、什么是GSVA</h1><p><br></br></p>\n<h2 id=\"1-GSVA-基因集变异分析\"><a href=\"#1-GSVA-基因集变异分析\" class=\"headerlink\" title=\"1.GSVA(基因集变异分析)\"></a>1.GSVA(基因集变异分析)</h2><p>GSVA 是一种基因富集分析算法. 输入数据是表达矩阵, 与一般的富集分析不同, GSVA不需要对样品进行分组, 它可以先进行通路的富集, 形成一个以通路为行名, 样品为列名的表达矩阵. 是一种非参数的无监督分析方法, 主要用来评估芯片和转录组的基因集富集结果. 主要是通过将基因在不同样品间的表达量矩阵转化成基因集在样品间的表达量矩阵, 从而来评估不同的代谢通路在不同样品间是否富集. </p>\n<h2 id=\"2-GSVA结果解释\"><a href=\"#2-GSVA结果解释\" class=\"headerlink\" title=\"2.GSVA结果解释\"></a>2.GSVA结果解释</h2><p>GSVA分析的结果是一个表达矩阵, 常见的结果可视化为制作热图, 热图的含义这里不做赘述. </p>\n<h2 id=\"3-GSVA-R语言实现\"><a href=\"#3-GSVA-R语言实现\" class=\"headerlink\" title=\"3.GSVA R语言实现\"></a>3.GSVA R语言实现</h2><p>1.导入的数据结构</p>\n<figure class = \"half\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169063653-e5c0315d-0296-4a79-bfee-af60834bf9b6.png\">\n    <img src = \"https://user-images.githubusercontent.com/102901955/169064832-f85b88b0-58dc-46fe-bd1e-43563ccf7357.png\">\n</figure>\n\n<p>表达矩阵: 导入的数据格式如上图所示, 行名为样本编号, 列名为Gene Symbol ID, 单元格内值为log2化的表达量. 原始数据可以在GEO数据库中找到.<br>基因集:   导入的数据如下图所示, 格式为gmt, 可以在<a href=\"https://www.gsea-msigdb.org/gsea/msigdb/genesets.jsp\">MSigdb</a>上找到常用的基因集, 也可以自己制作.</p>\n<p>2.代码</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>GSVA<span class=\"punctuation\">)</span>            <span class=\"comment\"># 用于GSVA分析</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>GSEABase<span class=\"punctuation\">)</span>        <span class=\"comment\"># 用于读取文件</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pheatmap<span class=\"punctuation\">)</span>        <span class=\"comment\"># 制作热图</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件读取</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;工作路径&quot;</span><span class=\"punctuation\">)</span>                                   <span class=\"comment\"># 设置工作路径</span></span><br><span class=\"line\">keggSet <span class=\"operator\">=</span> getGmt<span class=\"punctuation\">(</span><span class=\"string\">&quot;基因集文件路径&quot;</span><span class=\"punctuation\">)</span>                  <span class=\"comment\"># 读取基因集文件</span></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">=</span> read.table<span class=\"punctuation\">(</span>                       <span class=\"comment\"># 读取表达矩阵</span></span><br><span class=\"line\">  <span class=\"string\">&quot;表达矩阵路径&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span>                                         </span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>如果格式不对, 自行调整</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GSVA分析</span></span><br><span class=\"line\">gsva_data <span class=\"operator\">&lt;-</span> gsva<span class=\"punctuation\">(</span></span><br><span class=\"line\">  expr <span class=\"operator\">=</span> as.matrix<span class=\"punctuation\">(</span>exp_new<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>         <span class=\"comment\"># 输入表达矩阵</span></span><br><span class=\"line\">  gset.idx.list <span class=\"operator\">=</span> keggSet<span class=\"punctuation\">,</span>           <span class=\"comment\"># 输入基因集</span></span><br><span class=\"line\">  method <span class=\"operator\">=</span> <span class=\"string\">&quot;gsva&quot;</span><span class=\"punctuation\">,</span>                   <span class=\"comment\"># 选择算法</span></span><br><span class=\"line\">  kcdf <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span>                      <span class=\"comment\"># 选择CDF计算模型,正态，高斯还是泊松</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>GSVA分析的算法见参考连接, ?gsva可以查看更多参数, 一般来说log2化的矩阵计算模型选用正态, 没有进行log2化的选泊松</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制热图</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span></span><br><span class=\"line\">  gsva_data<span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_colnames <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_rownames <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  kmeans_k <span class=\"operator\">=</span> <span class=\"literal\">NA</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h1 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h1><p><a href=\"https://zhuanlan.zhihu.com/p/358168557\">GSEA R绘图 代码</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/355879724\">GSVA算法介绍</a></p>\n"},{"title":"ROC曲线","date":"2022-05-19T16:00:00.000Z","_content":"\n* [一、什么是ROC曲线](#一什么是roc曲线)\n  * [1\\.相关概念](#1相关概念)\n  * [2\\.ROC曲线](#2roc曲线)\n  * [3\\.AUC面积](#3auc面积)\n* [二、ROC曲线如何绘制](#二roc曲线如何绘制)\n  * [1\\.算法介绍](#1算法介绍)\n  * [2\\.用R进行ROC曲线的绘制](#2用r进行roc曲线的绘制)\n    * [1\\.简单绘制ROC曲线](#1简单绘制roc曲线)\n    * [2\\.将两个ROC曲线绘制在一张图中，并添加标签](#2将两个roc曲线绘制在一张图中并添加标签)\n\n# 一、什么是ROC曲线\n\nROC曲线实际上就是一种用于评价所建立的模型优劣性的二维图像\n\n<br></br>\n\n## 1.相关概念 \n\n1.真阳性(TP)：实际为正类，模型预测为正类\n\n2.假阳性(FP)：实际为负类，模型预测为正类\n\n3.真阴性(TN)：实际为负类，模型预测为负类\n\n4.假阴性(FN)：实际为正类，模型预测为负类\n\n5.精确率： 真阳性 / (真阳性 + 假阳性) | 表示模型中预测的正类中实际为正类的比例，\n\n6.召回率： 真阳性 / (真阳性 + 假阴性) | 与灵敏度相同\n\n7.特异度： 真阴性 / (真阴性 + 假阳性) | 表示所有负类中被模型分对的比例，衡量了模型对负类的识别能力\n\n8.灵敏度： 真阳性 / (真阳性 + 假阴性) | 表示所有正类中被模型分对的比例，衡量了模型对正类的识别能力\n\n9.正确率： (真阳性 + 真阴性) / (真阳性 + 假阳性 + 真阴性 + 假阴性) | 表示模型预测正确的样本占总体的比例\n\n10.预测概率：在模型对样本做出预测时，预测结果往往不是固定的，会呈现一个预测概率，即某样本在某一模型的预测下有p的概率为正类，1-p的概率为负类。最后模型会输出一个预测概率。\n\n11.阈值：为了让模型得到准确的结果，可以设置一个阈值。例如，当某样本在模型预测概率大于 一个定值 时，我们认为这个样本为正类。这个值即阈值。 \n\n## 2.ROC曲线\n\nROC曲线是以灵敏度与特异度为指标对某一模型作出评价的二维图像。\n\n以 `1 - 特异度` 作为横坐标，也可以称为伪正类率(False positive rate， FPR)，表示模型对负类的识别能力，数值越小，模型对负类识别能力越好。\n\n以  `灵敏度` 作为纵坐标 ， 也可以称为真正类率(True positive rate， TPR) ，表示模型对正类的识别能力，数值越大，模型对正类识别能力越好\n\n例如下图中蓝线是某一模型的ROC曲线。\n\n\n![image](https://user-images.githubusercontent.com/102901955/167638460-05012c00-69d3-4272-bfe0-4fee206c42a9.png)\n\n\n红线的含义为 随机预测。即预测为正类与负类的概率为均为0.5左右，正负类判定取决于阈值。\n\n而蓝线为某一模型的ROC曲线，表示当调整阈值使TPR(或FPR)为某一值时，TPR与FPR的关系符合曲线的函数关系。\n\n举例来讲，在蓝色点处，表示在阈值设置为某一值时，TPR为0.9，而FPR为0.4。实际应用过程中，我们可以根据需求(更加需求TPR,还是FPR)来设置阈值。\n\n\n## 3.AUC面积\n\nAUC面积是指ROC曲线与 x = 1 与 x 轴 所围成区域的面积，即图中绿色部分。\n\n![image](https://user-images.githubusercontent.com/102901955/167867291-c8deeddf-af02-4f42-bf52-8a7afddff16d.png)\n\nAUC面积往往用于衡量一个模型的预测性的优劣，因为ROC曲线涉及阈值的选择，在一定情况下使用ROC曲线衡量不是很好比较。\n\n一般地认为AUC面积越大，则模型的预测性越好。\n\n# 二、ROC曲线如何绘制\n<br></br>\n\n## 1.算法介绍\n\n这一部分是为了加深ROC曲线的理解，在用R绘制曲线过程中实际并不需要从0开发算法，有现成的包可以使用。\n\n![image](https://img-blog.csdnimg.cn/2545fb9435984bc8b54e7ce92e92a398.gif#pic_center)\n\n如图所示是一种ROC曲线的常用算法，先将预测概率按序排列。由上向下设置阈值，模型预测的正类数量会按梯度增加，依据这个规律计算处特异度与灵敏度，记录于内存之中，最后绘图。\n\n## 2.用R进行ROC曲线的绘制\n\n这里要介绍pROC包。一个专门用于绘制ROC曲线的模块。\n\n其中有一个函数 `roc()` 可以用于计算ROC曲线各个阈值下的敏感度与特异度\n\n=======数据格式======\n\n![image](https://user-images.githubusercontent.com/102901955/167880563-cbc141ce-5d9d-403a-91a0-915bc8416601.png)\n\n===================\n\n即最后roc函数计算的数据格式要如上图所示\n\nroc(v1, v2) \n\nv1 -训练集中实际正类还是负类的列向量\n\nv2 -训练集中模型预测为正类的预测概率\n\n### 1.简单绘制ROC曲线\n\n```R\n# 加载R包\nlibrary(pROC)\nlibrary(ggplot2)\n\n# 读取数据\ndf = read.delim(\"https://www.bioladder.cn/shiny/zyp/bioladder2/demoData/ROC/demo.txt\",# 这里读取了网络上的demo数据，将此处换成你自己电脑里的文件\n                header = T    # 指定第一行是列名\n)\n\n# ROC计算\nrocobj <- roc(df[,1], df[,2])\n\n# 绘图\nplot(rocobj, col = \"red\", legacy.axes = T, print.auc = T, print.thres = T)\n\n\"\"\"\nprint.auc    -增加AUC面积\nprint.thres  -增加临界点\nlegacy.axes  -更改横坐标(以 1-敏感度 还是 敏感度 为横坐标)\n\n\"\"\"\n\n```\n### 2.将两个ROC曲线绘制在一张图中，并添加标签\n\n```R\n# 读取数据及ROC计算同 ###1 步骤。 \n\n# 绘图\nplot(rocobj_1, col = \"red\", legacy.axes = T, print.thres = T)                                             \nplot(rocobj_2, col = \"blue\", legacy.axes = T, print.thres = T, add = T)\nlegend(\"bottomright\", legend = c(\"roc1 AUC-0.731\", \"roc2 AUC-0.612\"), col = c(\"red\", \"blue\"), lty = c(1, 1))  # 添加图例\n\n\"\"\"\n====\nplot:\nrocobj_1, rocobj_2  -表示通过roc函数所计算出来的数据集\nadd                 -表示添加曲线,添加该参数后不会覆盖原图像,而是添加新的曲线到图像上\n====\nlegend:\n\"bottomright\"       -设置标签所在位置\nlegend              -设置标签的名字, 可以通过手动添加AUC数字\nlty                 -改变标签线的类型, 可以设置通过与plot图像一一对应.\n\n\"\"\"\n\n\n","source":"_posts/生物信息学/ROC曲线.md","raw":"---\ntitle: ROC曲线\ncategories:\n\t- 生物信息学\n\t- ROC曲线\ndate: 2022-05-20\n---\n\n* [一、什么是ROC曲线](#一什么是roc曲线)\n  * [1\\.相关概念](#1相关概念)\n  * [2\\.ROC曲线](#2roc曲线)\n  * [3\\.AUC面积](#3auc面积)\n* [二、ROC曲线如何绘制](#二roc曲线如何绘制)\n  * [1\\.算法介绍](#1算法介绍)\n  * [2\\.用R进行ROC曲线的绘制](#2用r进行roc曲线的绘制)\n    * [1\\.简单绘制ROC曲线](#1简单绘制roc曲线)\n    * [2\\.将两个ROC曲线绘制在一张图中，并添加标签](#2将两个roc曲线绘制在一张图中并添加标签)\n\n# 一、什么是ROC曲线\n\nROC曲线实际上就是一种用于评价所建立的模型优劣性的二维图像\n\n<br></br>\n\n## 1.相关概念 \n\n1.真阳性(TP)：实际为正类，模型预测为正类\n\n2.假阳性(FP)：实际为负类，模型预测为正类\n\n3.真阴性(TN)：实际为负类，模型预测为负类\n\n4.假阴性(FN)：实际为正类，模型预测为负类\n\n5.精确率： 真阳性 / (真阳性 + 假阳性) | 表示模型中预测的正类中实际为正类的比例，\n\n6.召回率： 真阳性 / (真阳性 + 假阴性) | 与灵敏度相同\n\n7.特异度： 真阴性 / (真阴性 + 假阳性) | 表示所有负类中被模型分对的比例，衡量了模型对负类的识别能力\n\n8.灵敏度： 真阳性 / (真阳性 + 假阴性) | 表示所有正类中被模型分对的比例，衡量了模型对正类的识别能力\n\n9.正确率： (真阳性 + 真阴性) / (真阳性 + 假阳性 + 真阴性 + 假阴性) | 表示模型预测正确的样本占总体的比例\n\n10.预测概率：在模型对样本做出预测时，预测结果往往不是固定的，会呈现一个预测概率，即某样本在某一模型的预测下有p的概率为正类，1-p的概率为负类。最后模型会输出一个预测概率。\n\n11.阈值：为了让模型得到准确的结果，可以设置一个阈值。例如，当某样本在模型预测概率大于 一个定值 时，我们认为这个样本为正类。这个值即阈值。 \n\n## 2.ROC曲线\n\nROC曲线是以灵敏度与特异度为指标对某一模型作出评价的二维图像。\n\n以 `1 - 特异度` 作为横坐标，也可以称为伪正类率(False positive rate， FPR)，表示模型对负类的识别能力，数值越小，模型对负类识别能力越好。\n\n以  `灵敏度` 作为纵坐标 ， 也可以称为真正类率(True positive rate， TPR) ，表示模型对正类的识别能力，数值越大，模型对正类识别能力越好\n\n例如下图中蓝线是某一模型的ROC曲线。\n\n\n![image](https://user-images.githubusercontent.com/102901955/167638460-05012c00-69d3-4272-bfe0-4fee206c42a9.png)\n\n\n红线的含义为 随机预测。即预测为正类与负类的概率为均为0.5左右，正负类判定取决于阈值。\n\n而蓝线为某一模型的ROC曲线，表示当调整阈值使TPR(或FPR)为某一值时，TPR与FPR的关系符合曲线的函数关系。\n\n举例来讲，在蓝色点处，表示在阈值设置为某一值时，TPR为0.9，而FPR为0.4。实际应用过程中，我们可以根据需求(更加需求TPR,还是FPR)来设置阈值。\n\n\n## 3.AUC面积\n\nAUC面积是指ROC曲线与 x = 1 与 x 轴 所围成区域的面积，即图中绿色部分。\n\n![image](https://user-images.githubusercontent.com/102901955/167867291-c8deeddf-af02-4f42-bf52-8a7afddff16d.png)\n\nAUC面积往往用于衡量一个模型的预测性的优劣，因为ROC曲线涉及阈值的选择，在一定情况下使用ROC曲线衡量不是很好比较。\n\n一般地认为AUC面积越大，则模型的预测性越好。\n\n# 二、ROC曲线如何绘制\n<br></br>\n\n## 1.算法介绍\n\n这一部分是为了加深ROC曲线的理解，在用R绘制曲线过程中实际并不需要从0开发算法，有现成的包可以使用。\n\n![image](https://img-blog.csdnimg.cn/2545fb9435984bc8b54e7ce92e92a398.gif#pic_center)\n\n如图所示是一种ROC曲线的常用算法，先将预测概率按序排列。由上向下设置阈值，模型预测的正类数量会按梯度增加，依据这个规律计算处特异度与灵敏度，记录于内存之中，最后绘图。\n\n## 2.用R进行ROC曲线的绘制\n\n这里要介绍pROC包。一个专门用于绘制ROC曲线的模块。\n\n其中有一个函数 `roc()` 可以用于计算ROC曲线各个阈值下的敏感度与特异度\n\n=======数据格式======\n\n![image](https://user-images.githubusercontent.com/102901955/167880563-cbc141ce-5d9d-403a-91a0-915bc8416601.png)\n\n===================\n\n即最后roc函数计算的数据格式要如上图所示\n\nroc(v1, v2) \n\nv1 -训练集中实际正类还是负类的列向量\n\nv2 -训练集中模型预测为正类的预测概率\n\n### 1.简单绘制ROC曲线\n\n```R\n# 加载R包\nlibrary(pROC)\nlibrary(ggplot2)\n\n# 读取数据\ndf = read.delim(\"https://www.bioladder.cn/shiny/zyp/bioladder2/demoData/ROC/demo.txt\",# 这里读取了网络上的demo数据，将此处换成你自己电脑里的文件\n                header = T    # 指定第一行是列名\n)\n\n# ROC计算\nrocobj <- roc(df[,1], df[,2])\n\n# 绘图\nplot(rocobj, col = \"red\", legacy.axes = T, print.auc = T, print.thres = T)\n\n\"\"\"\nprint.auc    -增加AUC面积\nprint.thres  -增加临界点\nlegacy.axes  -更改横坐标(以 1-敏感度 还是 敏感度 为横坐标)\n\n\"\"\"\n\n```\n### 2.将两个ROC曲线绘制在一张图中，并添加标签\n\n```R\n# 读取数据及ROC计算同 ###1 步骤。 \n\n# 绘图\nplot(rocobj_1, col = \"red\", legacy.axes = T, print.thres = T)                                             \nplot(rocobj_2, col = \"blue\", legacy.axes = T, print.thres = T, add = T)\nlegend(\"bottomright\", legend = c(\"roc1 AUC-0.731\", \"roc2 AUC-0.612\"), col = c(\"red\", \"blue\"), lty = c(1, 1))  # 添加图例\n\n\"\"\"\n====\nplot:\nrocobj_1, rocobj_2  -表示通过roc函数所计算出来的数据集\nadd                 -表示添加曲线,添加该参数后不会覆盖原图像,而是添加新的曲线到图像上\n====\nlegend:\n\"bottomright\"       -设置标签所在位置\nlegend              -设置标签的名字, 可以通过手动添加AUC数字\nlty                 -改变标签线的类型, 可以设置通过与plot图像一一对应.\n\n\"\"\"\n\n\n","slug":"生物信息学/ROC曲线","published":1,"updated":"2022-07-10T02:42:51.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjf00080bhfgqp0cnpt","content":"<ul>\n<li><a href=\"#%E4%B8%80%E4%BB%80%E4%B9%88%E6%98%AFroc%E6%9B%B2%E7%BA%BF\">一、什么是ROC曲线</a><ul>\n<li><a href=\"#1%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5\">1.相关概念</a></li>\n<li><a href=\"#2roc%E6%9B%B2%E7%BA%BF\">2.ROC曲线</a></li>\n<li><a href=\"#3auc%E9%9D%A2%E7%A7%AF\">3.AUC面积</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BA%8Croc%E6%9B%B2%E7%BA%BF%E5%A6%82%E4%BD%95%E7%BB%98%E5%88%B6\">二、ROC曲线如何绘制</a><ul>\n<li><a href=\"#1%E7%AE%97%E6%B3%95%E4%BB%8B%E7%BB%8D\">1.算法介绍</a></li>\n<li><a href=\"#2%E7%94%A8r%E8%BF%9B%E8%A1%8Croc%E6%9B%B2%E7%BA%BF%E7%9A%84%E7%BB%98%E5%88%B6\">2.用R进行ROC曲线的绘制</a><ul>\n<li><a href=\"#1%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B6roc%E6%9B%B2%E7%BA%BF\">1.简单绘制ROC曲线</a></li>\n<li><a href=\"#2%E5%B0%86%E4%B8%A4%E4%B8%AAroc%E6%9B%B2%E7%BA%BF%E7%BB%98%E5%88%B6%E5%9C%A8%E4%B8%80%E5%BC%A0%E5%9B%BE%E4%B8%AD%E5%B9%B6%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE\">2.将两个ROC曲线绘制在一张图中，并添加标签</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"一、什么是ROC曲线\"><a href=\"#一、什么是ROC曲线\" class=\"headerlink\" title=\"一、什么是ROC曲线\"></a>一、什么是ROC曲线</h1><p>ROC曲线实际上就是一种用于评价所建立的模型优劣性的二维图像</p>\n<p><br></br></p>\n<h2 id=\"1-相关概念\"><a href=\"#1-相关概念\" class=\"headerlink\" title=\"1.相关概念\"></a>1.相关概念</h2><p>1.真阳性(TP)：实际为正类，模型预测为正类</p>\n<p>2.假阳性(FP)：实际为负类，模型预测为正类</p>\n<p>3.真阴性(TN)：实际为负类，模型预测为负类</p>\n<p>4.假阴性(FN)：实际为正类，模型预测为负类</p>\n<p>5.精确率： 真阳性 / (真阳性 + 假阳性) | 表示模型中预测的正类中实际为正类的比例，</p>\n<p>6.召回率： 真阳性 / (真阳性 + 假阴性) | 与灵敏度相同</p>\n<p>7.特异度： 真阴性 / (真阴性 + 假阳性) | 表示所有负类中被模型分对的比例，衡量了模型对负类的识别能力</p>\n<p>8.灵敏度： 真阳性 / (真阳性 + 假阴性) | 表示所有正类中被模型分对的比例，衡量了模型对正类的识别能力</p>\n<p>9.正确率： (真阳性 + 真阴性) / (真阳性 + 假阳性 + 真阴性 + 假阴性) | 表示模型预测正确的样本占总体的比例</p>\n<p>10.预测概率：在模型对样本做出预测时，预测结果往往不是固定的，会呈现一个预测概率，即某样本在某一模型的预测下有p的概率为正类，1-p的概率为负类。最后模型会输出一个预测概率。</p>\n<p>11.阈值：为了让模型得到准确的结果，可以设置一个阈值。例如，当某样本在模型预测概率大于 一个定值 时，我们认为这个样本为正类。这个值即阈值。 </p>\n<h2 id=\"2-ROC曲线\"><a href=\"#2-ROC曲线\" class=\"headerlink\" title=\"2.ROC曲线\"></a>2.ROC曲线</h2><p>ROC曲线是以灵敏度与特异度为指标对某一模型作出评价的二维图像。</p>\n<p>以 <code>1 - 特异度</code> 作为横坐标，也可以称为伪正类率(False positive rate， FPR)，表示模型对负类的识别能力，数值越小，模型对负类识别能力越好。</p>\n<p>以  <code>灵敏度</code> 作为纵坐标 ， 也可以称为真正类率(True positive rate， TPR) ，表示模型对正类的识别能力，数值越大，模型对正类识别能力越好</p>\n<p>例如下图中蓝线是某一模型的ROC曲线。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167638460-05012c00-69d3-4272-bfe0-4fee206c42a9.png\" alt=\"image\"></p>\n<p>红线的含义为 随机预测。即预测为正类与负类的概率为均为0.5左右，正负类判定取决于阈值。</p>\n<p>而蓝线为某一模型的ROC曲线，表示当调整阈值使TPR(或FPR)为某一值时，TPR与FPR的关系符合曲线的函数关系。</p>\n<p>举例来讲，在蓝色点处，表示在阈值设置为某一值时，TPR为0.9，而FPR为0.4。实际应用过程中，我们可以根据需求(更加需求TPR,还是FPR)来设置阈值。</p>\n<h2 id=\"3-AUC面积\"><a href=\"#3-AUC面积\" class=\"headerlink\" title=\"3.AUC面积\"></a>3.AUC面积</h2><p>AUC面积是指ROC曲线与 x = 1 与 x 轴 所围成区域的面积，即图中绿色部分。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167867291-c8deeddf-af02-4f42-bf52-8a7afddff16d.png\" alt=\"image\"></p>\n<p>AUC面积往往用于衡量一个模型的预测性的优劣，因为ROC曲线涉及阈值的选择，在一定情况下使用ROC曲线衡量不是很好比较。</p>\n<p>一般地认为AUC面积越大，则模型的预测性越好。</p>\n<h1 id=\"二、ROC曲线如何绘制\"><a href=\"#二、ROC曲线如何绘制\" class=\"headerlink\" title=\"二、ROC曲线如何绘制\"></a>二、ROC曲线如何绘制</h1><p><br></br></p>\n<h2 id=\"1-算法介绍\"><a href=\"#1-算法介绍\" class=\"headerlink\" title=\"1.算法介绍\"></a>1.算法介绍</h2><p>这一部分是为了加深ROC曲线的理解，在用R绘制曲线过程中实际并不需要从0开发算法，有现成的包可以使用。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2545fb9435984bc8b54e7ce92e92a398.gif#pic_center\" alt=\"image\"></p>\n<p>如图所示是一种ROC曲线的常用算法，先将预测概率按序排列。由上向下设置阈值，模型预测的正类数量会按梯度增加，依据这个规律计算处特异度与灵敏度，记录于内存之中，最后绘图。</p>\n<h2 id=\"2-用R进行ROC曲线的绘制\"><a href=\"#2-用R进行ROC曲线的绘制\" class=\"headerlink\" title=\"2.用R进行ROC曲线的绘制\"></a>2.用R进行ROC曲线的绘制</h2><p>这里要介绍pROC包。一个专门用于绘制ROC曲线的模块。</p>\n<p>其中有一个函数 <code>roc()</code> 可以用于计算ROC曲线各个阈值下的敏感度与特异度</p>\n<p>=======数据格式======</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167880563-cbc141ce-5d9d-403a-91a0-915bc8416601.png\" alt=\"image\"></p>\n<p>===================</p>\n<p>即最后roc函数计算的数据格式要如上图所示</p>\n<p>roc(v1, v2) </p>\n<p>v1 -训练集中实际正类还是负类的列向量</p>\n<p>v2 -训练集中模型预测为正类的预测概率</p>\n<h3 id=\"1-简单绘制ROC曲线\"><a href=\"#1-简单绘制ROC曲线\" class=\"headerlink\" title=\"1.简单绘制ROC曲线\"></a>1.简单绘制ROC曲线</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pROC<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取数据</span></span><br><span class=\"line\">df <span class=\"operator\">=</span> read.delim<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://www.bioladder.cn/shiny/zyp/bioladder2/demoData/ROC/demo.txt&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># 这里读取了网络上的demo数据，将此处换成你自己电脑里的文件</span></span><br><span class=\"line\">                header <span class=\"operator\">=</span> <span class=\"built_in\">T</span>    <span class=\"comment\"># 指定第一行是列名</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ROC计算</span></span><br><span class=\"line\">rocobj <span class=\"operator\">&lt;-</span> roc<span class=\"punctuation\">(</span>df<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> df<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>rocobj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">,</span> legacy.axes <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> print.auc <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> print.thres <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">print.auc    -增加AUC面积</span></span><br><span class=\"line\"><span class=\"string\">print.thres  -增加临界点</span></span><br><span class=\"line\"><span class=\"string\">legacy.axes  -更改横坐标(以 1-敏感度 还是 敏感度 为横坐标)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-将两个ROC曲线绘制在一张图中，并添加标签\"><a href=\"#2-将两个ROC曲线绘制在一张图中，并添加标签\" class=\"headerlink\" title=\"2.将两个ROC曲线绘制在一张图中，并添加标签\"></a>2.将两个ROC曲线绘制在一张图中，并添加标签</h3><pre><code class=\"R\"># 读取数据及ROC计算同 ###1 步骤。 \n\n# 绘图\nplot(rocobj_1, col = &quot;red&quot;, legacy.axes = T, print.thres = T)                                             \nplot(rocobj_2, col = &quot;blue&quot;, legacy.axes = T, print.thres = T, add = T)\nlegend(&quot;bottomright&quot;, legend = c(&quot;roc1 AUC-0.731&quot;, &quot;roc2 AUC-0.612&quot;), col = c(&quot;red&quot;, &quot;blue&quot;), lty = c(1, 1))  # 添加图例\n\n&quot;&quot;&quot;\n====\nplot:\nrocobj_1, rocobj_2  -表示通过roc函数所计算出来的数据集\nadd                 -表示添加曲线,添加该参数后不会覆盖原图像,而是添加新的曲线到图像上\n====\nlegend:\n&quot;bottomright&quot;       -设置标签所在位置\nlegend              -设置标签的名字, 可以通过手动添加AUC数字\nlty                 -改变标签线的类型, 可以设置通过与plot图像一一对应.\n\n&quot;&quot;&quot;\n\n</code></pre>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<ul>\n<li><a href=\"#%E4%B8%80%E4%BB%80%E4%B9%88%E6%98%AFroc%E6%9B%B2%E7%BA%BF\">一、什么是ROC曲线</a><ul>\n<li><a href=\"#1%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5\">1.相关概念</a></li>\n<li><a href=\"#2roc%E6%9B%B2%E7%BA%BF\">2.ROC曲线</a></li>\n<li><a href=\"#3auc%E9%9D%A2%E7%A7%AF\">3.AUC面积</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BA%8Croc%E6%9B%B2%E7%BA%BF%E5%A6%82%E4%BD%95%E7%BB%98%E5%88%B6\">二、ROC曲线如何绘制</a><ul>\n<li><a href=\"#1%E7%AE%97%E6%B3%95%E4%BB%8B%E7%BB%8D\">1.算法介绍</a></li>\n<li><a href=\"#2%E7%94%A8r%E8%BF%9B%E8%A1%8Croc%E6%9B%B2%E7%BA%BF%E7%9A%84%E7%BB%98%E5%88%B6\">2.用R进行ROC曲线的绘制</a><ul>\n<li><a href=\"#1%E7%AE%80%E5%8D%95%E7%BB%98%E5%88%B6roc%E6%9B%B2%E7%BA%BF\">1.简单绘制ROC曲线</a></li>\n<li><a href=\"#2%E5%B0%86%E4%B8%A4%E4%B8%AAroc%E6%9B%B2%E7%BA%BF%E7%BB%98%E5%88%B6%E5%9C%A8%E4%B8%80%E5%BC%A0%E5%9B%BE%E4%B8%AD%E5%B9%B6%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE\">2.将两个ROC曲线绘制在一张图中，并添加标签</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"一、什么是ROC曲线\"><a href=\"#一、什么是ROC曲线\" class=\"headerlink\" title=\"一、什么是ROC曲线\"></a>一、什么是ROC曲线</h1><p>ROC曲线实际上就是一种用于评价所建立的模型优劣性的二维图像</p>\n<p><br></br></p>\n<h2 id=\"1-相关概念\"><a href=\"#1-相关概念\" class=\"headerlink\" title=\"1.相关概念\"></a>1.相关概念</h2><p>1.真阳性(TP)：实际为正类，模型预测为正类</p>\n<p>2.假阳性(FP)：实际为负类，模型预测为正类</p>\n<p>3.真阴性(TN)：实际为负类，模型预测为负类</p>\n<p>4.假阴性(FN)：实际为正类，模型预测为负类</p>\n<p>5.精确率： 真阳性 / (真阳性 + 假阳性) | 表示模型中预测的正类中实际为正类的比例，</p>\n<p>6.召回率： 真阳性 / (真阳性 + 假阴性) | 与灵敏度相同</p>\n<p>7.特异度： 真阴性 / (真阴性 + 假阳性) | 表示所有负类中被模型分对的比例，衡量了模型对负类的识别能力</p>\n<p>8.灵敏度： 真阳性 / (真阳性 + 假阴性) | 表示所有正类中被模型分对的比例，衡量了模型对正类的识别能力</p>\n<p>9.正确率： (真阳性 + 真阴性) / (真阳性 + 假阳性 + 真阴性 + 假阴性) | 表示模型预测正确的样本占总体的比例</p>\n<p>10.预测概率：在模型对样本做出预测时，预测结果往往不是固定的，会呈现一个预测概率，即某样本在某一模型的预测下有p的概率为正类，1-p的概率为负类。最后模型会输出一个预测概率。</p>\n<p>11.阈值：为了让模型得到准确的结果，可以设置一个阈值。例如，当某样本在模型预测概率大于 一个定值 时，我们认为这个样本为正类。这个值即阈值。 </p>\n<h2 id=\"2-ROC曲线\"><a href=\"#2-ROC曲线\" class=\"headerlink\" title=\"2.ROC曲线\"></a>2.ROC曲线</h2><p>ROC曲线是以灵敏度与特异度为指标对某一模型作出评价的二维图像。</p>\n<p>以 <code>1 - 特异度</code> 作为横坐标，也可以称为伪正类率(False positive rate， FPR)，表示模型对负类的识别能力，数值越小，模型对负类识别能力越好。</p>\n<p>以  <code>灵敏度</code> 作为纵坐标 ， 也可以称为真正类率(True positive rate， TPR) ，表示模型对正类的识别能力，数值越大，模型对正类识别能力越好</p>\n<p>例如下图中蓝线是某一模型的ROC曲线。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167638460-05012c00-69d3-4272-bfe0-4fee206c42a9.png\" alt=\"image\"></p>\n<p>红线的含义为 随机预测。即预测为正类与负类的概率为均为0.5左右，正负类判定取决于阈值。</p>\n<p>而蓝线为某一模型的ROC曲线，表示当调整阈值使TPR(或FPR)为某一值时，TPR与FPR的关系符合曲线的函数关系。</p>\n<p>举例来讲，在蓝色点处，表示在阈值设置为某一值时，TPR为0.9，而FPR为0.4。实际应用过程中，我们可以根据需求(更加需求TPR,还是FPR)来设置阈值。</p>\n<h2 id=\"3-AUC面积\"><a href=\"#3-AUC面积\" class=\"headerlink\" title=\"3.AUC面积\"></a>3.AUC面积</h2><p>AUC面积是指ROC曲线与 x = 1 与 x 轴 所围成区域的面积，即图中绿色部分。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167867291-c8deeddf-af02-4f42-bf52-8a7afddff16d.png\" alt=\"image\"></p>\n<p>AUC面积往往用于衡量一个模型的预测性的优劣，因为ROC曲线涉及阈值的选择，在一定情况下使用ROC曲线衡量不是很好比较。</p>\n<p>一般地认为AUC面积越大，则模型的预测性越好。</p>\n<h1 id=\"二、ROC曲线如何绘制\"><a href=\"#二、ROC曲线如何绘制\" class=\"headerlink\" title=\"二、ROC曲线如何绘制\"></a>二、ROC曲线如何绘制</h1><p><br></br></p>\n<h2 id=\"1-算法介绍\"><a href=\"#1-算法介绍\" class=\"headerlink\" title=\"1.算法介绍\"></a>1.算法介绍</h2><p>这一部分是为了加深ROC曲线的理解，在用R绘制曲线过程中实际并不需要从0开发算法，有现成的包可以使用。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2545fb9435984bc8b54e7ce92e92a398.gif#pic_center\" alt=\"image\"></p>\n<p>如图所示是一种ROC曲线的常用算法，先将预测概率按序排列。由上向下设置阈值，模型预测的正类数量会按梯度增加，依据这个规律计算处特异度与灵敏度，记录于内存之中，最后绘图。</p>\n<h2 id=\"2-用R进行ROC曲线的绘制\"><a href=\"#2-用R进行ROC曲线的绘制\" class=\"headerlink\" title=\"2.用R进行ROC曲线的绘制\"></a>2.用R进行ROC曲线的绘制</h2><p>这里要介绍pROC包。一个专门用于绘制ROC曲线的模块。</p>\n<p>其中有一个函数 <code>roc()</code> 可以用于计算ROC曲线各个阈值下的敏感度与特异度</p>\n<p>=======数据格式======</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/167880563-cbc141ce-5d9d-403a-91a0-915bc8416601.png\" alt=\"image\"></p>\n<p>===================</p>\n<p>即最后roc函数计算的数据格式要如上图所示</p>\n<p>roc(v1, v2) </p>\n<p>v1 -训练集中实际正类还是负类的列向量</p>\n<p>v2 -训练集中模型预测为正类的预测概率</p>\n<h3 id=\"1-简单绘制ROC曲线\"><a href=\"#1-简单绘制ROC曲线\" class=\"headerlink\" title=\"1.简单绘制ROC曲线\"></a>1.简单绘制ROC曲线</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载R包</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pROC<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取数据</span></span><br><span class=\"line\">df <span class=\"operator\">=</span> read.delim<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://www.bioladder.cn/shiny/zyp/bioladder2/demoData/ROC/demo.txt&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># 这里读取了网络上的demo数据，将此处换成你自己电脑里的文件</span></span><br><span class=\"line\">                header <span class=\"operator\">=</span> <span class=\"built_in\">T</span>    <span class=\"comment\"># 指定第一行是列名</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ROC计算</span></span><br><span class=\"line\">rocobj <span class=\"operator\">&lt;-</span> roc<span class=\"punctuation\">(</span>df<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> df<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>rocobj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">,</span> legacy.axes <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> print.auc <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> print.thres <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">print.auc    -增加AUC面积</span></span><br><span class=\"line\"><span class=\"string\">print.thres  -增加临界点</span></span><br><span class=\"line\"><span class=\"string\">legacy.axes  -更改横坐标(以 1-敏感度 还是 敏感度 为横坐标)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-将两个ROC曲线绘制在一张图中，并添加标签\"><a href=\"#2-将两个ROC曲线绘制在一张图中，并添加标签\" class=\"headerlink\" title=\"2.将两个ROC曲线绘制在一张图中，并添加标签\"></a>2.将两个ROC曲线绘制在一张图中，并添加标签</h3><pre><code class=\"R\"># 读取数据及ROC计算同 ###1 步骤。 \n\n# 绘图\nplot(rocobj_1, col = &quot;red&quot;, legacy.axes = T, print.thres = T)                                             \nplot(rocobj_2, col = &quot;blue&quot;, legacy.axes = T, print.thres = T, add = T)\nlegend(&quot;bottomright&quot;, legend = c(&quot;roc1 AUC-0.731&quot;, &quot;roc2 AUC-0.612&quot;), col = c(&quot;red&quot;, &quot;blue&quot;), lty = c(1, 1))  # 添加图例\n\n&quot;&quot;&quot;\n====\nplot:\nrocobj_1, rocobj_2  -表示通过roc函数所计算出来的数据集\nadd                 -表示添加曲线,添加该参数后不会覆盖原图像,而是添加新的曲线到图像上\n====\nlegend:\n&quot;bottomright&quot;       -设置标签所在位置\nlegend              -设置标签的名字, 可以通过手动添加AUC数字\nlty                 -改变标签线的类型, 可以设置通过与plot图像一一对应.\n\n&quot;&quot;&quot;\n\n</code></pre>\n"},{"title":"差异分析","date":"2022-05-19T16:00:00.000Z","_content":"\n# 一、什么是差异分析\n\n差异分析简单来说就是我们通过一组实验后，实验组中所提取的总mRNA 较 对照组提取的总mRNA有显著性提高或者是降低的部分mRNA，寻找这部分有差异的mRNA就被称为差异分析\n\n在常见的差异分析中，有几个比较常用的库下面来介绍一下\n\n  ## 1.GEO数据库\n  \n  GEO数据库可以理解为一个实验原始数据的储存库。\n  \n  如图所示，这是一个 研究某基因 对酮酸脱氢酶活性是否有促进性的实验。\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166443694-5c94a8e0-0e2b-4364-837e-e701537ac0a1.png)\n  \n  GSE号：是这组实验的编号，在GEO每个不同的实验编号唯一，用于检索。\n  \n  GPL号：实验芯片平台，在GEO数据库的实验信息，往往是通过基因芯片高通量测序的方式测量转录组。简单来讲就是基因芯片中包含了这个实验测量了哪些基因的表达量\n  \n  GSM号：是每一种样品处理方式的编号，一组实验中（一个GSE号）往往有多种处理（GSM号），例如，在研究pH压迫某微生物生长时，当你设置了5个梯度，则在一个GSE号中至少会有5个GSM号，即五种处理方式。如果设置了3个重复，则会有15个GSM号，GSM在GEO数据库中也是唯一的，可以通过GSM来唯一检索。\n  \n  表达矩阵：表达矩阵中包含了每种处理下，样品被提取出的总mRNA的表达情况。简单来讲就是测量的“值域”，而平台信息就是测量的“定义域”\n  \n  \n # 二、如何进行差异分析\n  \n ## 1.下载原始文件\n  \n   下载表达矩阵文件\n    \n   ![image](https://user-images.githubusercontent.com/102901955/166445401-bf365267-070d-47a6-9d04-f496323ee36b.png)\n    \n   下载实验芯片平台信息\n    \n   ![image](https://user-images.githubusercontent.com/102901955/166446074-3e9de36f-fb6d-4fe1-8ecb-dff09c444997.png)\n    \n   在处理样本量比较小的情况下，可以手动记录一下，每个GSM号对应的处理方式\n    \n   在处理样本量比较大的请胯下，# 待编辑 #\n\n ## 2.将原始数据导入你的R中并且进行格式化处理\n   \n   分析过程中依赖的包：limma，stringr\n   \n```R\nlibrary(limma)\nlibrary(stringr)\n\n\n# 首先设置你的工作目录\nsetwd(\"E:/Project/R/差异分析\") \n  \n# 导入表达矩阵\nexpmatrix_data <- read.table(\"GSE115269_series_matrix.txt\", header = TRUE, skip = 64)\n\n# 导入平台文件 \npla_data <- read.table(\"GPL18233-21178.txt\", sep = \"\\t\", header = T)\n```\n\n   在表达矩阵导入中，因为我用的表达矩阵从第65行开始才是矩阵数据，所以设置了skip。\n   \n   ![image](https://user-images.githubusercontent.com/102901955/166447821-199cb428-0458-48fa-8e46-abb11511e564.png)\n   \n```R\n# 格式化平台文件（将转录组编号列提出，只保留ENSMUST编号）\nmRNA_assigment <- pla_data[, \"mrna_assignment\"]   \n\npattern <- \"ENSMUST\\\\d*\"\n\nfor (i in 1:length(mRNA_assigment)){\n  # 用正则表达式循环替换单元格内的内容\n  mRNA_assigment[i] <- str_match(string = mRNA_assigment[i], pattern = pattern)\n}\n\npla_data[, \"mrna_assignment\"] <- mRNA_assigment\n\n  # 让平台文件以ID列重排序\npla_data <- pla_data[order(pla_data[, 'ID']), ]\n```\n   格式化的目的是从上图到下图，\n   \n   ![image](https://user-images.githubusercontent.com/102901955/166448469-d5f0dff7-f3a1-4a5e-acea-6e841a2d7737.png)\n   ![image](https://user-images.githubusercontent.com/102901955/166448601-266dc6e6-5625-46c5-84c1-b758cd39261c.png)\n   \n   即让多个转录组编号转成一个，并且让平台文件按基因编号排序，这样处理是为了后续富集分析的方便。可能会出现转录组缺失的情况，因为多个编号转成了一个。\n   \n```R\n# 将样品处理方式导入R --手动 这里写样品的处理方式，不同实验有所不同\nsamp_treat <- c(\"DJ-1+/+_01\", \"DJ-1+/+_02\", \"DJ-1+/+_03\", \"DJ-1-/-_01\", \"DJ-1-/-_02\", \"DJ-1-/-_03\")\n\n# 以csv文件保存格式化后的平台注释文件\nwrite.table(pla_data, \"pla_data.csv\", row.names = T, col.names = T, sep = \",\")\n```\n  \n   因为R使用不熟练的原因，后续富集部分操作可能需要在excel中进行，故导出格式化后的平台注释文件。\n  \n```R  \n# 格式化表达矩阵\nrownames(expmatrix_data) <- expmatrix_data[, \"ID_REF\"]\n\nexpmatrix_data <- expmatrix_data[, -1]\n\ncolnames(expmatrix_data) <- samp_treat\n\nexpmatrix_data <- log2(expmatrix_data) \n```\n  格式化目的是上图到下图\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166449476-7360a7ae-858c-4aca-82ab-68ef6f66dedd.png)\n  ![image](https://user-images.githubusercontent.com/102901955/166449646-95bf82db-4fe6-4724-ab94-f921736897f4.png)\n\n\n## 3.用limma包进行差异分析\n\n```R\n\n# 根据样本处理方式设计design矩阵\ngroup_list <- c(rep(\"Control\", 3), rep(\"Treatment\", 3)) \n\ndesign <- model.matrix(~0 + factor(group_list))\n\ncolnames(design) = levels(factor(group_list))\n\nrownames(design) = colnames(expmatrix_data)\n```\n\n设置design矩阵的目的是为了对样本分组，但model.matrix函数的构造原理不是很清楚，这个需要进一步学习。总之就是构造出下图一样的分组。\n\n![image](https://user-images.githubusercontent.com/102901955/166450324-cba4ae19-fbc4-477e-b831-e26ceb873989.png)\n\n![image](https://user-images.githubusercontent.com/102901955/166450398-3acded90-8d4b-4bfc-a0d1-196384dfef91.png)\n\n这个design矩阵是含有level信息的。\n\n\n```R\n# 模型拟合及分析\nfit <- lmFit(expmatrix_data, design)\n\ncontrast.matrix <- makeContrasts(\"Control-Treatment\", levels = design)\n\nfit2 <- contrasts.fit(fit, contrast.matrix) \n\nfit2 <- eBayes(fit2) \n\nexpDiff_data <- topTable(fit2, coef = 1, n = Inf) %>% na.omit()\n\n  # 保存差异分析结果文件\nwrite.table(expDiff_data, \"expDiff.csv\", row.names = TRUE, col.names = TRUE, sep = \",\")\n```\n\n分析后得到的expDiff_data如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166450968-704e6eee-eb8d-4275-9ba9-13dd057e67dc.png)\n\n后续操作转至excel\n\n打开expDiff.csv文件\n\n![image](https://user-images.githubusercontent.com/102901955/166451186-2118dcce-fda7-4145-8c54-b625bfb60de0.png)\n\n将expDiff.csv文件列名调整好，并且将第一列转为数字格式，进行升序排序\n\n然后将平台信息中的，转录组编号复制至expDiff.csv文件中，注意检查基因编号是不是相同的。\n\n最后得到expDiff.csv文件如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166452304-f9c03157-becb-4bd1-a01b-c32b2d9d55b2.png)\n\n\n\n\n\n\n\n\n\n\n\nFold change 表示 实验组基因表达量 与 对照组基因表达量 的比值 \n\n![image](https://user-images.githubusercontent.com/102901955/166248412-302a40e9-2b30-488e-86fe-3c5439089f9a.png)\n\n\n\n","source":"_posts/生物信息学/差异分析.md","raw":"---\ntitle: 差异分析\ncategories:\n\t- 生物信息学\n\t- 富集分析\ndate: 2022-05-20\n---\n\n# 一、什么是差异分析\n\n差异分析简单来说就是我们通过一组实验后，实验组中所提取的总mRNA 较 对照组提取的总mRNA有显著性提高或者是降低的部分mRNA，寻找这部分有差异的mRNA就被称为差异分析\n\n在常见的差异分析中，有几个比较常用的库下面来介绍一下\n\n  ## 1.GEO数据库\n  \n  GEO数据库可以理解为一个实验原始数据的储存库。\n  \n  如图所示，这是一个 研究某基因 对酮酸脱氢酶活性是否有促进性的实验。\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166443694-5c94a8e0-0e2b-4364-837e-e701537ac0a1.png)\n  \n  GSE号：是这组实验的编号，在GEO每个不同的实验编号唯一，用于检索。\n  \n  GPL号：实验芯片平台，在GEO数据库的实验信息，往往是通过基因芯片高通量测序的方式测量转录组。简单来讲就是基因芯片中包含了这个实验测量了哪些基因的表达量\n  \n  GSM号：是每一种样品处理方式的编号，一组实验中（一个GSE号）往往有多种处理（GSM号），例如，在研究pH压迫某微生物生长时，当你设置了5个梯度，则在一个GSE号中至少会有5个GSM号，即五种处理方式。如果设置了3个重复，则会有15个GSM号，GSM在GEO数据库中也是唯一的，可以通过GSM来唯一检索。\n  \n  表达矩阵：表达矩阵中包含了每种处理下，样品被提取出的总mRNA的表达情况。简单来讲就是测量的“值域”，而平台信息就是测量的“定义域”\n  \n  \n # 二、如何进行差异分析\n  \n ## 1.下载原始文件\n  \n   下载表达矩阵文件\n    \n   ![image](https://user-images.githubusercontent.com/102901955/166445401-bf365267-070d-47a6-9d04-f496323ee36b.png)\n    \n   下载实验芯片平台信息\n    \n   ![image](https://user-images.githubusercontent.com/102901955/166446074-3e9de36f-fb6d-4fe1-8ecb-dff09c444997.png)\n    \n   在处理样本量比较小的情况下，可以手动记录一下，每个GSM号对应的处理方式\n    \n   在处理样本量比较大的请胯下，# 待编辑 #\n\n ## 2.将原始数据导入你的R中并且进行格式化处理\n   \n   分析过程中依赖的包：limma，stringr\n   \n```R\nlibrary(limma)\nlibrary(stringr)\n\n\n# 首先设置你的工作目录\nsetwd(\"E:/Project/R/差异分析\") \n  \n# 导入表达矩阵\nexpmatrix_data <- read.table(\"GSE115269_series_matrix.txt\", header = TRUE, skip = 64)\n\n# 导入平台文件 \npla_data <- read.table(\"GPL18233-21178.txt\", sep = \"\\t\", header = T)\n```\n\n   在表达矩阵导入中，因为我用的表达矩阵从第65行开始才是矩阵数据，所以设置了skip。\n   \n   ![image](https://user-images.githubusercontent.com/102901955/166447821-199cb428-0458-48fa-8e46-abb11511e564.png)\n   \n```R\n# 格式化平台文件（将转录组编号列提出，只保留ENSMUST编号）\nmRNA_assigment <- pla_data[, \"mrna_assignment\"]   \n\npattern <- \"ENSMUST\\\\d*\"\n\nfor (i in 1:length(mRNA_assigment)){\n  # 用正则表达式循环替换单元格内的内容\n  mRNA_assigment[i] <- str_match(string = mRNA_assigment[i], pattern = pattern)\n}\n\npla_data[, \"mrna_assignment\"] <- mRNA_assigment\n\n  # 让平台文件以ID列重排序\npla_data <- pla_data[order(pla_data[, 'ID']), ]\n```\n   格式化的目的是从上图到下图，\n   \n   ![image](https://user-images.githubusercontent.com/102901955/166448469-d5f0dff7-f3a1-4a5e-acea-6e841a2d7737.png)\n   ![image](https://user-images.githubusercontent.com/102901955/166448601-266dc6e6-5625-46c5-84c1-b758cd39261c.png)\n   \n   即让多个转录组编号转成一个，并且让平台文件按基因编号排序，这样处理是为了后续富集分析的方便。可能会出现转录组缺失的情况，因为多个编号转成了一个。\n   \n```R\n# 将样品处理方式导入R --手动 这里写样品的处理方式，不同实验有所不同\nsamp_treat <- c(\"DJ-1+/+_01\", \"DJ-1+/+_02\", \"DJ-1+/+_03\", \"DJ-1-/-_01\", \"DJ-1-/-_02\", \"DJ-1-/-_03\")\n\n# 以csv文件保存格式化后的平台注释文件\nwrite.table(pla_data, \"pla_data.csv\", row.names = T, col.names = T, sep = \",\")\n```\n  \n   因为R使用不熟练的原因，后续富集部分操作可能需要在excel中进行，故导出格式化后的平台注释文件。\n  \n```R  \n# 格式化表达矩阵\nrownames(expmatrix_data) <- expmatrix_data[, \"ID_REF\"]\n\nexpmatrix_data <- expmatrix_data[, -1]\n\ncolnames(expmatrix_data) <- samp_treat\n\nexpmatrix_data <- log2(expmatrix_data) \n```\n  格式化目的是上图到下图\n  \n  ![image](https://user-images.githubusercontent.com/102901955/166449476-7360a7ae-858c-4aca-82ab-68ef6f66dedd.png)\n  ![image](https://user-images.githubusercontent.com/102901955/166449646-95bf82db-4fe6-4724-ab94-f921736897f4.png)\n\n\n## 3.用limma包进行差异分析\n\n```R\n\n# 根据样本处理方式设计design矩阵\ngroup_list <- c(rep(\"Control\", 3), rep(\"Treatment\", 3)) \n\ndesign <- model.matrix(~0 + factor(group_list))\n\ncolnames(design) = levels(factor(group_list))\n\nrownames(design) = colnames(expmatrix_data)\n```\n\n设置design矩阵的目的是为了对样本分组，但model.matrix函数的构造原理不是很清楚，这个需要进一步学习。总之就是构造出下图一样的分组。\n\n![image](https://user-images.githubusercontent.com/102901955/166450324-cba4ae19-fbc4-477e-b831-e26ceb873989.png)\n\n![image](https://user-images.githubusercontent.com/102901955/166450398-3acded90-8d4b-4bfc-a0d1-196384dfef91.png)\n\n这个design矩阵是含有level信息的。\n\n\n```R\n# 模型拟合及分析\nfit <- lmFit(expmatrix_data, design)\n\ncontrast.matrix <- makeContrasts(\"Control-Treatment\", levels = design)\n\nfit2 <- contrasts.fit(fit, contrast.matrix) \n\nfit2 <- eBayes(fit2) \n\nexpDiff_data <- topTable(fit2, coef = 1, n = Inf) %>% na.omit()\n\n  # 保存差异分析结果文件\nwrite.table(expDiff_data, \"expDiff.csv\", row.names = TRUE, col.names = TRUE, sep = \",\")\n```\n\n分析后得到的expDiff_data如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166450968-704e6eee-eb8d-4275-9ba9-13dd057e67dc.png)\n\n后续操作转至excel\n\n打开expDiff.csv文件\n\n![image](https://user-images.githubusercontent.com/102901955/166451186-2118dcce-fda7-4145-8c54-b625bfb60de0.png)\n\n将expDiff.csv文件列名调整好，并且将第一列转为数字格式，进行升序排序\n\n然后将平台信息中的，转录组编号复制至expDiff.csv文件中，注意检查基因编号是不是相同的。\n\n最后得到expDiff.csv文件如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166452304-f9c03157-becb-4bd1-a01b-c32b2d9d55b2.png)\n\n\n\n\n\n\n\n\n\n\n\nFold change 表示 实验组基因表达量 与 对照组基因表达量 的比值 \n\n![image](https://user-images.githubusercontent.com/102901955/166248412-302a40e9-2b30-488e-86fe-3c5439089f9a.png)\n\n\n\n","slug":"生物信息学/差异分析","published":1,"updated":"2022-07-10T02:44:32.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjg000a0bhfe8axg60e","content":"<h1 id=\"一、什么是差异分析\"><a href=\"#一、什么是差异分析\" class=\"headerlink\" title=\"一、什么是差异分析\"></a>一、什么是差异分析</h1><p>差异分析简单来说就是我们通过一组实验后，实验组中所提取的总mRNA 较 对照组提取的总mRNA有显著性提高或者是降低的部分mRNA，寻找这部分有差异的mRNA就被称为差异分析</p>\n<p>在常见的差异分析中，有几个比较常用的库下面来介绍一下</p>\n<h2 id=\"1-GEO数据库\"><a href=\"#1-GEO数据库\" class=\"headerlink\" title=\"1.GEO数据库\"></a>1.GEO数据库</h2><p>  GEO数据库可以理解为一个实验原始数据的储存库。</p>\n<p>  如图所示，这是一个 研究某基因 对酮酸脱氢酶活性是否有促进性的实验。</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166443694-5c94a8e0-0e2b-4364-837e-e701537ac0a1.png\" alt=\"image\"></p>\n<p>  GSE号：是这组实验的编号，在GEO每个不同的实验编号唯一，用于检索。</p>\n<p>  GPL号：实验芯片平台，在GEO数据库的实验信息，往往是通过基因芯片高通量测序的方式测量转录组。简单来讲就是基因芯片中包含了这个实验测量了哪些基因的表达量</p>\n<p>  GSM号：是每一种样品处理方式的编号，一组实验中（一个GSE号）往往有多种处理（GSM号），例如，在研究pH压迫某微生物生长时，当你设置了5个梯度，则在一个GSE号中至少会有5个GSM号，即五种处理方式。如果设置了3个重复，则会有15个GSM号，GSM在GEO数据库中也是唯一的，可以通过GSM来唯一检索。</p>\n<p>  表达矩阵：表达矩阵中包含了每种处理下，样品被提取出的总mRNA的表达情况。简单来讲就是测量的“值域”，而平台信息就是测量的“定义域”</p>\n<h1 id=\"二、如何进行差异分析\"><a href=\"#二、如何进行差异分析\" class=\"headerlink\" title=\"二、如何进行差异分析\"></a>二、如何进行差异分析</h1><h2 id=\"1-下载原始文件\"><a href=\"#1-下载原始文件\" class=\"headerlink\" title=\"1.下载原始文件\"></a>1.下载原始文件</h2><p>   下载表达矩阵文件</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166445401-bf365267-070d-47a6-9d04-f496323ee36b.png\" alt=\"image\"></p>\n<p>   下载实验芯片平台信息</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166446074-3e9de36f-fb6d-4fe1-8ecb-dff09c444997.png\" alt=\"image\"></p>\n<p>   在处理样本量比较小的情况下，可以手动记录一下，每个GSM号对应的处理方式</p>\n<p>   在处理样本量比较大的请胯下，# 待编辑 #</p>\n<h2 id=\"2-将原始数据导入你的R中并且进行格式化处理\"><a href=\"#2-将原始数据导入你的R中并且进行格式化处理\" class=\"headerlink\" title=\"2.将原始数据导入你的R中并且进行格式化处理\"></a>2.将原始数据导入你的R中并且进行格式化处理</h2><p>   分析过程中依赖的包：limma，stringr</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>limma<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>stringr<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 首先设置你的工作目录</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Project/R/差异分析&quot;</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 导入表达矩阵</span></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;GSE115269_series_matrix.txt&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> <span class=\"number\">64</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入平台文件 </span></span><br><span class=\"line\">pla_data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;GPL18233-21178.txt&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>   在表达矩阵导入中，因为我用的表达矩阵从第65行开始才是矩阵数据，所以设置了skip。</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166447821-199cb428-0458-48fa-8e46-abb11511e564.png\" alt=\"image\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式化平台文件（将转录组编号列提出，只保留ENSMUST编号）</span></span><br><span class=\"line\">mRNA_assigment <span class=\"operator\">&lt;-</span> pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mrna_assignment&quot;</span><span class=\"punctuation\">]</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">pattern <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;ENSMUST\\\\d*&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>i <span class=\"keyword\">in</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>mRNA_assigment<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># 用正则表达式循环替换单元格内的内容</span></span><br><span class=\"line\">  mRNA_assigment<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> str_match<span class=\"punctuation\">(</span>string <span class=\"operator\">=</span> mRNA_assigment<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pattern <span class=\"operator\">=</span> pattern<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mrna_assignment&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> mRNA_assigment</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 让平台文件以ID列重排序</span></span><br><span class=\"line\">pla_data <span class=\"operator\">&lt;-</span> pla_data<span class=\"punctuation\">[</span>order<span class=\"punctuation\">(</span>pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&#x27;ID&#x27;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>   格式化的目的是从上图到下图，</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166448469-d5f0dff7-f3a1-4a5e-acea-6e841a2d7737.png\" alt=\"image\"><br>   <img src=\"https://user-images.githubusercontent.com/102901955/166448601-266dc6e6-5625-46c5-84c1-b758cd39261c.png\" alt=\"image\"></p>\n<p>   即让多个转录组编号转成一个，并且让平台文件按基因编号排序，这样处理是为了后续富集分析的方便。可能会出现转录组缺失的情况，因为多个编号转成了一个。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将样品处理方式导入R --手动 这里写样品的处理方式，不同实验有所不同</span></span><br><span class=\"line\">samp_treat <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;DJ-1+/+_01&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1+/+_02&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1+/+_03&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_01&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_02&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_03&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以csv文件保存格式化后的平台注释文件</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pla_data<span class=\"punctuation\">,</span> <span class=\"string\">&quot;pla_data.csv&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> col.names <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>   因为R使用不熟练的原因，后续富集部分操作可能需要在excel中进行，故导出格式化后的平台注释文件。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式化表达矩阵</span></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> expmatrix_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ID_REF&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> expmatrix_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"operator\">-</span><span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> samp_treat</span><br><span class=\"line\"></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> log2<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n<p>  格式化目的是上图到下图</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166449476-7360a7ae-858c-4aca-82ab-68ef6f66dedd.png\" alt=\"image\"><br>  <img src=\"https://user-images.githubusercontent.com/102901955/166449646-95bf82db-4fe6-4724-ab94-f921736897f4.png\" alt=\"image\"></p>\n<h2 id=\"3-用limma包进行差异分析\"><a href=\"#3-用limma包进行差异分析\" class=\"headerlink\" title=\"3.用limma包进行差异分析\"></a>3.用limma包进行差异分析</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据样本处理方式设计design矩阵</span></span><br><span class=\"line\">group_list <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Control&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Treatment&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">design <span class=\"operator\">&lt;-</span> model.matrix<span class=\"punctuation\">(</span><span class=\"operator\">~</span><span class=\"number\">0</span> <span class=\"operator\">+</span> factor<span class=\"punctuation\">(</span>group_list<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>design<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> levels<span class=\"punctuation\">(</span>factor<span class=\"punctuation\">(</span>group_list<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>design<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> colnames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>设置design矩阵的目的是为了对样本分组，但model.matrix函数的构造原理不是很清楚，这个需要进一步学习。总之就是构造出下图一样的分组。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450324-cba4ae19-fbc4-477e-b831-e26ceb873989.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450398-3acded90-8d4b-4bfc-a0d1-196384dfef91.png\" alt=\"image\"></p>\n<p>这个design矩阵是含有level信息的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 模型拟合及分析</span></span><br><span class=\"line\">fit <span class=\"operator\">&lt;-</span> lmFit<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">,</span> design<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">contrast.matrix <span class=\"operator\">&lt;-</span> makeContrasts<span class=\"punctuation\">(</span><span class=\"string\">&quot;Control-Treatment&quot;</span><span class=\"punctuation\">,</span> levels <span class=\"operator\">=</span> design<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">fit2 <span class=\"operator\">&lt;-</span> contrasts.fit<span class=\"punctuation\">(</span>fit<span class=\"punctuation\">,</span> contrast.matrix<span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">fit2 <span class=\"operator\">&lt;-</span> eBayes<span class=\"punctuation\">(</span>fit2<span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">expDiff_data <span class=\"operator\">&lt;-</span> topTable<span class=\"punctuation\">(</span>fit2<span class=\"punctuation\">,</span> coef <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"literal\">Inf</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> na.omit<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 保存差异分析结果文件</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>expDiff_data<span class=\"punctuation\">,</span> <span class=\"string\">&quot;expDiff.csv&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> col.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>分析后得到的expDiff_data如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450968-704e6eee-eb8d-4275-9ba9-13dd057e67dc.png\" alt=\"image\"></p>\n<p>后续操作转至excel</p>\n<p>打开expDiff.csv文件</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166451186-2118dcce-fda7-4145-8c54-b625bfb60de0.png\" alt=\"image\"></p>\n<p>将expDiff.csv文件列名调整好，并且将第一列转为数字格式，进行升序排序</p>\n<p>然后将平台信息中的，转录组编号复制至expDiff.csv文件中，注意检查基因编号是不是相同的。</p>\n<p>最后得到expDiff.csv文件如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166452304-f9c03157-becb-4bd1-a01b-c32b2d9d55b2.png\" alt=\"image\"></p>\n<p>Fold change 表示 实验组基因表达量 与 对照组基因表达量 的比值 </p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166248412-302a40e9-2b30-488e-86fe-3c5439089f9a.png\" alt=\"image\"></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h1 id=\"一、什么是差异分析\"><a href=\"#一、什么是差异分析\" class=\"headerlink\" title=\"一、什么是差异分析\"></a>一、什么是差异分析</h1><p>差异分析简单来说就是我们通过一组实验后，实验组中所提取的总mRNA 较 对照组提取的总mRNA有显著性提高或者是降低的部分mRNA，寻找这部分有差异的mRNA就被称为差异分析</p>\n<p>在常见的差异分析中，有几个比较常用的库下面来介绍一下</p>\n<h2 id=\"1-GEO数据库\"><a href=\"#1-GEO数据库\" class=\"headerlink\" title=\"1.GEO数据库\"></a>1.GEO数据库</h2><p>  GEO数据库可以理解为一个实验原始数据的储存库。</p>\n<p>  如图所示，这是一个 研究某基因 对酮酸脱氢酶活性是否有促进性的实验。</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166443694-5c94a8e0-0e2b-4364-837e-e701537ac0a1.png\" alt=\"image\"></p>\n<p>  GSE号：是这组实验的编号，在GEO每个不同的实验编号唯一，用于检索。</p>\n<p>  GPL号：实验芯片平台，在GEO数据库的实验信息，往往是通过基因芯片高通量测序的方式测量转录组。简单来讲就是基因芯片中包含了这个实验测量了哪些基因的表达量</p>\n<p>  GSM号：是每一种样品处理方式的编号，一组实验中（一个GSE号）往往有多种处理（GSM号），例如，在研究pH压迫某微生物生长时，当你设置了5个梯度，则在一个GSE号中至少会有5个GSM号，即五种处理方式。如果设置了3个重复，则会有15个GSM号，GSM在GEO数据库中也是唯一的，可以通过GSM来唯一检索。</p>\n<p>  表达矩阵：表达矩阵中包含了每种处理下，样品被提取出的总mRNA的表达情况。简单来讲就是测量的“值域”，而平台信息就是测量的“定义域”</p>\n<h1 id=\"二、如何进行差异分析\"><a href=\"#二、如何进行差异分析\" class=\"headerlink\" title=\"二、如何进行差异分析\"></a>二、如何进行差异分析</h1><h2 id=\"1-下载原始文件\"><a href=\"#1-下载原始文件\" class=\"headerlink\" title=\"1.下载原始文件\"></a>1.下载原始文件</h2><p>   下载表达矩阵文件</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166445401-bf365267-070d-47a6-9d04-f496323ee36b.png\" alt=\"image\"></p>\n<p>   下载实验芯片平台信息</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166446074-3e9de36f-fb6d-4fe1-8ecb-dff09c444997.png\" alt=\"image\"></p>\n<p>   在处理样本量比较小的情况下，可以手动记录一下，每个GSM号对应的处理方式</p>\n<p>   在处理样本量比较大的请胯下，# 待编辑 #</p>\n<h2 id=\"2-将原始数据导入你的R中并且进行格式化处理\"><a href=\"#2-将原始数据导入你的R中并且进行格式化处理\" class=\"headerlink\" title=\"2.将原始数据导入你的R中并且进行格式化处理\"></a>2.将原始数据导入你的R中并且进行格式化处理</h2><p>   分析过程中依赖的包：limma，stringr</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>limma<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>stringr<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 首先设置你的工作目录</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Project/R/差异分析&quot;</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 导入表达矩阵</span></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;GSE115269_series_matrix.txt&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> <span class=\"number\">64</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入平台文件 </span></span><br><span class=\"line\">pla_data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;GPL18233-21178.txt&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>   在表达矩阵导入中，因为我用的表达矩阵从第65行开始才是矩阵数据，所以设置了skip。</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166447821-199cb428-0458-48fa-8e46-abb11511e564.png\" alt=\"image\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式化平台文件（将转录组编号列提出，只保留ENSMUST编号）</span></span><br><span class=\"line\">mRNA_assigment <span class=\"operator\">&lt;-</span> pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mrna_assignment&quot;</span><span class=\"punctuation\">]</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">pattern <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;ENSMUST\\\\d*&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>i <span class=\"keyword\">in</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>mRNA_assigment<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># 用正则表达式循环替换单元格内的内容</span></span><br><span class=\"line\">  mRNA_assigment<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> str_match<span class=\"punctuation\">(</span>string <span class=\"operator\">=</span> mRNA_assigment<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pattern <span class=\"operator\">=</span> pattern<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mrna_assignment&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> mRNA_assigment</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 让平台文件以ID列重排序</span></span><br><span class=\"line\">pla_data <span class=\"operator\">&lt;-</span> pla_data<span class=\"punctuation\">[</span>order<span class=\"punctuation\">(</span>pla_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&#x27;ID&#x27;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>   格式化的目的是从上图到下图，</p>\n<p>   <img src=\"https://user-images.githubusercontent.com/102901955/166448469-d5f0dff7-f3a1-4a5e-acea-6e841a2d7737.png\" alt=\"image\"><br>   <img src=\"https://user-images.githubusercontent.com/102901955/166448601-266dc6e6-5625-46c5-84c1-b758cd39261c.png\" alt=\"image\"></p>\n<p>   即让多个转录组编号转成一个，并且让平台文件按基因编号排序，这样处理是为了后续富集分析的方便。可能会出现转录组缺失的情况，因为多个编号转成了一个。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将样品处理方式导入R --手动 这里写样品的处理方式，不同实验有所不同</span></span><br><span class=\"line\">samp_treat <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;DJ-1+/+_01&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1+/+_02&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1+/+_03&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_01&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_02&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DJ-1-/-_03&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以csv文件保存格式化后的平台注释文件</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pla_data<span class=\"punctuation\">,</span> <span class=\"string\">&quot;pla_data.csv&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> col.names <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>   因为R使用不熟练的原因，后续富集部分操作可能需要在excel中进行，故导出格式化后的平台注释文件。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式化表达矩阵</span></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> expmatrix_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ID_REF&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> expmatrix_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"operator\">-</span><span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> samp_treat</span><br><span class=\"line\"></span><br><span class=\"line\">expmatrix_data <span class=\"operator\">&lt;-</span> log2<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n<p>  格式化目的是上图到下图</p>\n<p>  <img src=\"https://user-images.githubusercontent.com/102901955/166449476-7360a7ae-858c-4aca-82ab-68ef6f66dedd.png\" alt=\"image\"><br>  <img src=\"https://user-images.githubusercontent.com/102901955/166449646-95bf82db-4fe6-4724-ab94-f921736897f4.png\" alt=\"image\"></p>\n<h2 id=\"3-用limma包进行差异分析\"><a href=\"#3-用limma包进行差异分析\" class=\"headerlink\" title=\"3.用limma包进行差异分析\"></a>3.用limma包进行差异分析</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据样本处理方式设计design矩阵</span></span><br><span class=\"line\">group_list <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Control&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Treatment&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">design <span class=\"operator\">&lt;-</span> model.matrix<span class=\"punctuation\">(</span><span class=\"operator\">~</span><span class=\"number\">0</span> <span class=\"operator\">+</span> factor<span class=\"punctuation\">(</span>group_list<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>design<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> levels<span class=\"punctuation\">(</span>factor<span class=\"punctuation\">(</span>group_list<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>design<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> colnames<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>设置design矩阵的目的是为了对样本分组，但model.matrix函数的构造原理不是很清楚，这个需要进一步学习。总之就是构造出下图一样的分组。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450324-cba4ae19-fbc4-477e-b831-e26ceb873989.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450398-3acded90-8d4b-4bfc-a0d1-196384dfef91.png\" alt=\"image\"></p>\n<p>这个design矩阵是含有level信息的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 模型拟合及分析</span></span><br><span class=\"line\">fit <span class=\"operator\">&lt;-</span> lmFit<span class=\"punctuation\">(</span>expmatrix_data<span class=\"punctuation\">,</span> design<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">contrast.matrix <span class=\"operator\">&lt;-</span> makeContrasts<span class=\"punctuation\">(</span><span class=\"string\">&quot;Control-Treatment&quot;</span><span class=\"punctuation\">,</span> levels <span class=\"operator\">=</span> design<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">fit2 <span class=\"operator\">&lt;-</span> contrasts.fit<span class=\"punctuation\">(</span>fit<span class=\"punctuation\">,</span> contrast.matrix<span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">fit2 <span class=\"operator\">&lt;-</span> eBayes<span class=\"punctuation\">(</span>fit2<span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">expDiff_data <span class=\"operator\">&lt;-</span> topTable<span class=\"punctuation\">(</span>fit2<span class=\"punctuation\">,</span> coef <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"literal\">Inf</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> na.omit<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 保存差异分析结果文件</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>expDiff_data<span class=\"punctuation\">,</span> <span class=\"string\">&quot;expDiff.csv&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> col.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>分析后得到的expDiff_data如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166450968-704e6eee-eb8d-4275-9ba9-13dd057e67dc.png\" alt=\"image\"></p>\n<p>后续操作转至excel</p>\n<p>打开expDiff.csv文件</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166451186-2118dcce-fda7-4145-8c54-b625bfb60de0.png\" alt=\"image\"></p>\n<p>将expDiff.csv文件列名调整好，并且将第一列转为数字格式，进行升序排序</p>\n<p>然后将平台信息中的，转录组编号复制至expDiff.csv文件中，注意检查基因编号是不是相同的。</p>\n<p>最后得到expDiff.csv文件如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166452304-f9c03157-becb-4bd1-a01b-c32b2d9d55b2.png\" alt=\"image\"></p>\n<p>Fold change 表示 实验组基因表达量 与 对照组基因表达量 的比值 </p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166248412-302a40e9-2b30-488e-86fe-3c5439089f9a.png\" alt=\"image\"></p>\n"},{"title":"DAVID富集分析(二)","date":"2022-05-19T16:00:00.000Z","_content":"\n1.原始数据为从DAVID进行富集分析结束后download下的txt文件。\n\n2.下载txt文件后用 本文件夹 中的R代码改写相应工作目录即可画出通路富集的气泡图。\n\n3.结果如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166146200-7a47dcef-6eb1-4ecc-b289-d7bd7db9c9be.png)\n\n4.横轴Fold Enrichmment表示实际富集到的概率比随机富集到的概率多了多少倍  \n  \n  计算公式：\n  \n  Count / List.Total = 实际富集到的概率i\n  \n  Pop.Hits / Pop.Total = 随机富集到的概率ii\n  \n  i / ii = Fold Enrichment\n","source":"_posts/生物信息学/数据可视化分析.md","raw":"---\ntitle: DAVID富集分析(二)\ncategories:\n\t- 生物信息学\n\t- 富集分析\ndate: 2022-05-20\n---\n\n1.原始数据为从DAVID进行富集分析结束后download下的txt文件。\n\n2.下载txt文件后用 本文件夹 中的R代码改写相应工作目录即可画出通路富集的气泡图。\n\n3.结果如图所示\n\n![image](https://user-images.githubusercontent.com/102901955/166146200-7a47dcef-6eb1-4ecc-b289-d7bd7db9c9be.png)\n\n4.横轴Fold Enrichmment表示实际富集到的概率比随机富集到的概率多了多少倍  \n  \n  计算公式：\n  \n  Count / List.Total = 实际富集到的概率i\n  \n  Pop.Hits / Pop.Total = 随机富集到的概率ii\n  \n  i / ii = Fold Enrichment\n","slug":"生物信息学/数据可视化分析","published":1,"updated":"2022-07-10T02:45:00.169Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjh000b0bhf0gkv9s5u","content":"<p>1.原始数据为从DAVID进行富集分析结束后download下的txt文件。</p>\n<p>2.下载txt文件后用 本文件夹 中的R代码改写相应工作目录即可画出通路富集的气泡图。</p>\n<p>3.结果如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166146200-7a47dcef-6eb1-4ecc-b289-d7bd7db9c9be.png\" alt=\"image\"></p>\n<p>4.横轴Fold Enrichmment表示实际富集到的概率比随机富集到的概率多了多少倍  </p>\n<p>  计算公式：</p>\n<p>  Count / List.Total = 实际富集到的概率i</p>\n<p>  Pop.Hits / Pop.Total = 随机富集到的概率ii</p>\n<p>  i / ii = Fold Enrichment</p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<p>1.原始数据为从DAVID进行富集分析结束后download下的txt文件。</p>\n<p>2.下载txt文件后用 本文件夹 中的R代码改写相应工作目录即可画出通路富集的气泡图。</p>\n<p>3.结果如图所示</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166146200-7a47dcef-6eb1-4ecc-b289-d7bd7db9c9be.png\" alt=\"image\"></p>\n<p>4.横轴Fold Enrichmment表示实际富集到的概率比随机富集到的概率多了多少倍  </p>\n<p>  计算公式：</p>\n<p>  Count / List.Total = 实际富集到的概率i</p>\n<p>  Pop.Hits / Pop.Total = 随机富集到的概率ii</p>\n<p>  i / ii = Fold Enrichment</p>\n"},{"title":"生物网络","date":"2022-05-19T16:00:00.000Z","_content":"\n* [一、什么是生物网络](#一什么是生物网络)\n  * [1\\.生物网络的定义](#1生物网络的定义)\n  * [2\\.生物网络的分类](#2生物网络的分类)\n  * [3\\.生物网络的子概念](#3生物网络的子概念)\n  \n<br></br>\n\n# 一、什么是生物网络\n\n## 1.生物网络的定义\n\n\n生物网络指的是适用于生物系统的网络。网络指的是具有连为一体的子单元（例如链接到整个食物网的物种单元）的系统<sup>[[1]](https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C)</sup>。简单的来理解，就是生物网络是一个有关生物的信息的载体，通过网络链接的方式表达各个节点之间的关系。如蛋白质互作网络，KEGG通路等都是常见的生物网络\n\n## 2.生物网络的分类\n\n\n**1.有向网络与无向网络**\n\n<br></br>\n\n根据网络中的边是否具有方向性或者说连接一条边的两个节点是否存在顺序，网络可以分为有向网络与无向网络，边存在方向性为有向网络(directed network)，否则为无向网络(undirected network)。\n下图为KEGG的通路网络图，是一个典型的有向网络，连接边的方向代表了代谢的顺序。\n\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651208-0a88d139-b90a-46c3-829d-4a164d5d1602.png width=40% /></div>\n\n\n下图为String 数据库中蛋白互作的关系图，是一个典型的无向网络，节点表示蛋白，而连接的线条表示是否互作，不含有方向信息。\n  \n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651669-638d6cb8-279b-40d5-8df4-82cdfa095985.png width=40% /></div>\n\n<br></br>\n\n**2.加权网络与等权网络**\n\n<br></br>\n\n加权网络指网络中的每条边都被赋予相应的数值。所赋予的数值称为边的权重。权重可以用来描述节点间的距离，相关程度，稳定程度。String蛋白互作网络就是一个加权网络，他的边表示两个节点直接互作的得分。\n\n如果网络中各边之间没有区别，可以认为各边的权重相等，称为等权网络或无权网络\n\n<br></br>\n\n**3.二分网络**\n\n<br></br>\n\n如果网络中的节点可分为两个互不相交的集合，而所有的边都建立在来自不同集合的节点之间，则称这样的网络为二分网络。下图是一个二分网络的例子\n\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166682187-d89e8481-abe4-4c47-a1e3-b915e31be598.png width=40% /></div>\n\n<br></br>\n\n## 3.生物网络的子概念\n\n<br></br>\n\n为了解释下面几个概念我们用一个简单的网络图作为例子\n\n<div align=center> <img src = https://user-images.githubusercontent.com/102901955/166682829-2c72d3ae-51d9-43fa-9fce-97012de5d9b2.png /> </div>\n\n<br></br>\n\n**1.节点的度(degree)**\n\n<br></br>\n\n又称为连通度，关联度。节点度是指和该节点相关联的边的条数。\n\n特别地，对于有向图，\n\n节点的入度 是指进入该节点的边的条数；\n\n节点的出度是指从该节点出发的边的条数。\n\n如上图 `A` 的度数为2，`B`，`C` 的度数为 1\n  \n<br></br>\n\n**2.最短路径**  \n\n<br></br>\n\n指连接两个节点之间经过最少的边的路径。\n\n如上图中 `A` 节点到 `B` 的最短路径为 `A-B` ， 而 `B` 节点到 `C` 节点的最短路径为 `B-C` 。  \n\n<br></br>\n\n**3.节点的介数**   \n\n<br></br>\n\n节点的介数是用于描述一个节点在网络中的重要程度的参数。某一节点在网络中越重要，则其介数越大。\n\n其计算公式为\n\n<img src =https://user-images.githubusercontent.com/102901955/166685241-d931e15b-54f3-417a-89cf-05e858f26885.png width=20% />\n\n其中 B<sub>i</sub> 即为节点 `i` 的介数，如 B<sub>A</sub> 为上图中 A 节点的介数。\n\n**n<sub>k,j</sub>** 表示为 `k` ，`j` 节点之间的最短路径的数量。 **n<sub>k,j(i)</sub>** 表示为 `k` ， `j` 节点最短路径中含有 `i` 节点的数量。\n\n如上图中 显然可以看出 `A` 节点是整个网络中最重要的。其介数为 \n\n<img src =https://user-images.githubusercontent.com/102901955/166689035-59e8c4f1-99b8-45e1-ba3f-7ca92336658d.png width=50% />\n\n同理可计算出 `B` ， `C` 节点的节度均为 2 。 表明 `A` 节点的重要程度大于 `B` ， `C` 节点。\n\n<br></br>\n\n**4.聚类系数(clustering coefficient, CC)**\n\n<br></br>\n\n聚类系数用于衡量节点的密集程度。\n\n在无向网络中，节点 `v` 的聚类系数 CC<sub>v</sub> 的表达公式为  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{C_{k}^{2}} = \\frac{2n}{k(k-1)}\" style=\"border:none;\">\n\n其中 n 表示 节点v 的所有 k 个邻居节点之间边的数量。n 的最大值可以由 C<sub>k</sub><sup>2</sup> = k(k-1)/2 计算出。其含义为在所有 k 个邻居节点中， 选出2个相连的节点的所有可能数量。\n故可以得到 CC<sub>v</sub> 的取值落在 \\[0, 1\\] 之间。\n\n以下图为例。\n\n![image](https://user-images.githubusercontent.com/102901955/166695151-865f3ca3-91ac-441f-a624-a579b6aaa850.png)\n\n节点 A 的聚类系数  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{2}{3(3-1)} = \\frac{1}{3}\" >\n\n在有向网络中，节点 `v` 的聚类系数 CC<sub>v</sub> 的表达公式为 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{P_{k_{out}}^{2}} = \\frac{n}{k_{out}(k_{out}-1)}\" style=\"border:none;\">\n\n其中 k<sub>out</sub> 为 v 节点的出度，n 表示 v 所有指向的节点彼此之间存在的边数。因为有方向差别，不同方向的节点算两条边，故用的是排列而不是组合。\n\n以下图为例\n\n![image](https://user-images.githubusercontent.com/102901955/166705407-db0f21e5-357f-48b6-ba3d-9ebbef6ef265.png)\n\n图中 计算 A 节点的聚类系数。 节点 A 连接了三个节点 `{B, C, F}` ， 所以 n 为 3 ，其中`{B, C, F}` 相连接的边有 `{[B → C], [C → B], [C → F]}` 共 3 条 故 k<sub>out</sub> 为 3\n\nA 的聚类系数 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{3}{3(3-1)} = \\frac{1}{2}\" >\n\n\n<br></br>\n\n**5.度分布**\n\n<br></br>\n\n度分布指的是整个网络中各个点的度数量的概率分布。\n\n例如 P{k = k<sub>i</sub>} 表示的是在某一网络中，度为 k<sub>i</sub> 的节点的出现概率。 \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/生物信息学/生物网络分析.md","raw":"---\ntitle: 生物网络\ncategories:\n\t- 生物信息学\n\t- 生物网络\ndate: 2022-05-20\n---\n\n* [一、什么是生物网络](#一什么是生物网络)\n  * [1\\.生物网络的定义](#1生物网络的定义)\n  * [2\\.生物网络的分类](#2生物网络的分类)\n  * [3\\.生物网络的子概念](#3生物网络的子概念)\n  \n<br></br>\n\n# 一、什么是生物网络\n\n## 1.生物网络的定义\n\n\n生物网络指的是适用于生物系统的网络。网络指的是具有连为一体的子单元（例如链接到整个食物网的物种单元）的系统<sup>[[1]](https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C)</sup>。简单的来理解，就是生物网络是一个有关生物的信息的载体，通过网络链接的方式表达各个节点之间的关系。如蛋白质互作网络，KEGG通路等都是常见的生物网络\n\n## 2.生物网络的分类\n\n\n**1.有向网络与无向网络**\n\n<br></br>\n\n根据网络中的边是否具有方向性或者说连接一条边的两个节点是否存在顺序，网络可以分为有向网络与无向网络，边存在方向性为有向网络(directed network)，否则为无向网络(undirected network)。\n下图为KEGG的通路网络图，是一个典型的有向网络，连接边的方向代表了代谢的顺序。\n\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651208-0a88d139-b90a-46c3-829d-4a164d5d1602.png width=40% /></div>\n\n\n下图为String 数据库中蛋白互作的关系图，是一个典型的无向网络，节点表示蛋白，而连接的线条表示是否互作，不含有方向信息。\n  \n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651669-638d6cb8-279b-40d5-8df4-82cdfa095985.png width=40% /></div>\n\n<br></br>\n\n**2.加权网络与等权网络**\n\n<br></br>\n\n加权网络指网络中的每条边都被赋予相应的数值。所赋予的数值称为边的权重。权重可以用来描述节点间的距离，相关程度，稳定程度。String蛋白互作网络就是一个加权网络，他的边表示两个节点直接互作的得分。\n\n如果网络中各边之间没有区别，可以认为各边的权重相等，称为等权网络或无权网络\n\n<br></br>\n\n**3.二分网络**\n\n<br></br>\n\n如果网络中的节点可分为两个互不相交的集合，而所有的边都建立在来自不同集合的节点之间，则称这样的网络为二分网络。下图是一个二分网络的例子\n\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166682187-d89e8481-abe4-4c47-a1e3-b915e31be598.png width=40% /></div>\n\n<br></br>\n\n## 3.生物网络的子概念\n\n<br></br>\n\n为了解释下面几个概念我们用一个简单的网络图作为例子\n\n<div align=center> <img src = https://user-images.githubusercontent.com/102901955/166682829-2c72d3ae-51d9-43fa-9fce-97012de5d9b2.png /> </div>\n\n<br></br>\n\n**1.节点的度(degree)**\n\n<br></br>\n\n又称为连通度，关联度。节点度是指和该节点相关联的边的条数。\n\n特别地，对于有向图，\n\n节点的入度 是指进入该节点的边的条数；\n\n节点的出度是指从该节点出发的边的条数。\n\n如上图 `A` 的度数为2，`B`，`C` 的度数为 1\n  \n<br></br>\n\n**2.最短路径**  \n\n<br></br>\n\n指连接两个节点之间经过最少的边的路径。\n\n如上图中 `A` 节点到 `B` 的最短路径为 `A-B` ， 而 `B` 节点到 `C` 节点的最短路径为 `B-C` 。  \n\n<br></br>\n\n**3.节点的介数**   \n\n<br></br>\n\n节点的介数是用于描述一个节点在网络中的重要程度的参数。某一节点在网络中越重要，则其介数越大。\n\n其计算公式为\n\n<img src =https://user-images.githubusercontent.com/102901955/166685241-d931e15b-54f3-417a-89cf-05e858f26885.png width=20% />\n\n其中 B<sub>i</sub> 即为节点 `i` 的介数，如 B<sub>A</sub> 为上图中 A 节点的介数。\n\n**n<sub>k,j</sub>** 表示为 `k` ，`j` 节点之间的最短路径的数量。 **n<sub>k,j(i)</sub>** 表示为 `k` ， `j` 节点最短路径中含有 `i` 节点的数量。\n\n如上图中 显然可以看出 `A` 节点是整个网络中最重要的。其介数为 \n\n<img src =https://user-images.githubusercontent.com/102901955/166689035-59e8c4f1-99b8-45e1-ba3f-7ca92336658d.png width=50% />\n\n同理可计算出 `B` ， `C` 节点的节度均为 2 。 表明 `A` 节点的重要程度大于 `B` ， `C` 节点。\n\n<br></br>\n\n**4.聚类系数(clustering coefficient, CC)**\n\n<br></br>\n\n聚类系数用于衡量节点的密集程度。\n\n在无向网络中，节点 `v` 的聚类系数 CC<sub>v</sub> 的表达公式为  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{C_{k}^{2}} = \\frac{2n}{k(k-1)}\" style=\"border:none;\">\n\n其中 n 表示 节点v 的所有 k 个邻居节点之间边的数量。n 的最大值可以由 C<sub>k</sub><sup>2</sup> = k(k-1)/2 计算出。其含义为在所有 k 个邻居节点中， 选出2个相连的节点的所有可能数量。\n故可以得到 CC<sub>v</sub> 的取值落在 \\[0, 1\\] 之间。\n\n以下图为例。\n\n![image](https://user-images.githubusercontent.com/102901955/166695151-865f3ca3-91ac-441f-a624-a579b6aaa850.png)\n\n节点 A 的聚类系数  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{2}{3(3-1)} = \\frac{1}{3}\" >\n\n在有向网络中，节点 `v` 的聚类系数 CC<sub>v</sub> 的表达公式为 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{P_{k_{out}}^{2}} = \\frac{n}{k_{out}(k_{out}-1)}\" style=\"border:none;\">\n\n其中 k<sub>out</sub> 为 v 节点的出度，n 表示 v 所有指向的节点彼此之间存在的边数。因为有方向差别，不同方向的节点算两条边，故用的是排列而不是组合。\n\n以下图为例\n\n![image](https://user-images.githubusercontent.com/102901955/166705407-db0f21e5-357f-48b6-ba3d-9ebbef6ef265.png)\n\n图中 计算 A 节点的聚类系数。 节点 A 连接了三个节点 `{B, C, F}` ， 所以 n 为 3 ，其中`{B, C, F}` 相连接的边有 `{[B → C], [C → B], [C → F]}` 共 3 条 故 k<sub>out</sub> 为 3\n\nA 的聚类系数 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{3}{3(3-1)} = \\frac{1}{2}\" >\n\n\n<br></br>\n\n**5.度分布**\n\n<br></br>\n\n度分布指的是整个网络中各个点的度数量的概率分布。\n\n例如 P{k = k<sub>i</sub>} 表示的是在某一网络中，度为 k<sub>i</sub> 的节点的出现概率。 \n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"生物信息学/生物网络分析","published":1,"updated":"2022-07-10T02:45:47.708Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hji000e0bhfhk2x86w4","content":"<ul>\n<li><a href=\"#%E4%B8%80%E4%BB%80%E4%B9%88%E6%98%AF%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C\">一、什么是生物网络</a><ul>\n<li><a href=\"#1%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%AE%9A%E4%B9%89\">1.生物网络的定义</a></li>\n<li><a href=\"#2%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%88%86%E7%B1%BB\">2.生物网络的分类</a></li>\n<li><a href=\"#3%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%AD%90%E6%A6%82%E5%BF%B5\">3.生物网络的子概念</a></li>\n</ul>\n</li>\n</ul>\n<p><br></br></p>\n<h1 id=\"一、什么是生物网络\"><a href=\"#一、什么是生物网络\" class=\"headerlink\" title=\"一、什么是生物网络\"></a>一、什么是生物网络</h1><h2 id=\"1-生物网络的定义\"><a href=\"#1-生物网络的定义\" class=\"headerlink\" title=\"1.生物网络的定义\"></a>1.生物网络的定义</h2><p>生物网络指的是适用于生物系统的网络。网络指的是具有连为一体的子单元（例如链接到整个食物网的物种单元）的系统<sup><a href=\"https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C\">[1]</a></sup>。简单的来理解，就是生物网络是一个有关生物的信息的载体，通过网络链接的方式表达各个节点之间的关系。如蛋白质互作网络，KEGG通路等都是常见的生物网络</p>\n<h2 id=\"2-生物网络的分类\"><a href=\"#2-生物网络的分类\" class=\"headerlink\" title=\"2.生物网络的分类\"></a>2.生物网络的分类</h2><p><strong>1.有向网络与无向网络</strong></p>\n<p><br></br></p>\n<p>根据网络中的边是否具有方向性或者说连接一条边的两个节点是否存在顺序，网络可以分为有向网络与无向网络，边存在方向性为有向网络(directed network)，否则为无向网络(undirected network)。<br>下图为KEGG的通路网络图，是一个典型的有向网络，连接边的方向代表了代谢的顺序。</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651208-0a88d139-b90a-46c3-829d-4a164d5d1602.png width=40% /></div>\n\n\n<p>下图为String 数据库中蛋白互作的关系图，是一个典型的无向网络，节点表示蛋白，而连接的线条表示是否互作，不含有方向信息。</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651669-638d6cb8-279b-40d5-8df4-82cdfa095985.png width=40% /></div>\n\n<p><br></br></p>\n<p><strong>2.加权网络与等权网络</strong></p>\n<p><br></br></p>\n<p>加权网络指网络中的每条边都被赋予相应的数值。所赋予的数值称为边的权重。权重可以用来描述节点间的距离，相关程度，稳定程度。String蛋白互作网络就是一个加权网络，他的边表示两个节点直接互作的得分。</p>\n<p>如果网络中各边之间没有区别，可以认为各边的权重相等，称为等权网络或无权网络</p>\n<p><br></br></p>\n<p><strong>3.二分网络</strong></p>\n<p><br></br></p>\n<p>如果网络中的节点可分为两个互不相交的集合，而所有的边都建立在来自不同集合的节点之间，则称这样的网络为二分网络。下图是一个二分网络的例子</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166682187-d89e8481-abe4-4c47-a1e3-b915e31be598.png width=40% /></div>\n\n<p><br></br></p>\n<h2 id=\"3-生物网络的子概念\"><a href=\"#3-生物网络的子概念\" class=\"headerlink\" title=\"3.生物网络的子概念\"></a>3.生物网络的子概念</h2><p><br></br></p>\n<p>为了解释下面几个概念我们用一个简单的网络图作为例子</p>\n<div align=center> <img src = https://user-images.githubusercontent.com/102901955/166682829-2c72d3ae-51d9-43fa-9fce-97012de5d9b2.png /> </div>\n\n<p><br></br></p>\n<p><strong>1.节点的度(degree)</strong></p>\n<p><br></br></p>\n<p>又称为连通度，关联度。节点度是指和该节点相关联的边的条数。</p>\n<p>特别地，对于有向图，</p>\n<p>节点的入度 是指进入该节点的边的条数；</p>\n<p>节点的出度是指从该节点出发的边的条数。</p>\n<p>如上图 <code>A</code> 的度数为2，<code>B</code>，<code>C</code> 的度数为 1</p>\n<p><br></br></p>\n<p><strong>2.最短路径</strong>  </p>\n<p><br></br></p>\n<p>指连接两个节点之间经过最少的边的路径。</p>\n<p>如上图中 <code>A</code> 节点到 <code>B</code> 的最短路径为 <code>A-B</code> ， 而 <code>B</code> 节点到 <code>C</code> 节点的最短路径为 <code>B-C</code> 。  </p>\n<p><br></br></p>\n<p><strong>3.节点的介数</strong>   </p>\n<p><br></br></p>\n<p>节点的介数是用于描述一个节点在网络中的重要程度的参数。某一节点在网络中越重要，则其介数越大。</p>\n<p>其计算公式为</p>\n<img src =https://user-images.githubusercontent.com/102901955/166685241-d931e15b-54f3-417a-89cf-05e858f26885.png width=20% />\n\n<p>其中 B<sub>i</sub> 即为节点 <code>i</code> 的介数，如 B<sub>A</sub> 为上图中 A 节点的介数。</p>\n<p><strong>n<sub>k,j</sub></strong> 表示为 <code>k</code> ，<code>j</code> 节点之间的最短路径的数量。 <strong>n<sub>k,j(i)</sub></strong> 表示为 <code>k</code> ， <code>j</code> 节点最短路径中含有 <code>i</code> 节点的数量。</p>\n<p>如上图中 显然可以看出 <code>A</code> 节点是整个网络中最重要的。其介数为 </p>\n<img src =https://user-images.githubusercontent.com/102901955/166689035-59e8c4f1-99b8-45e1-ba3f-7ca92336658d.png width=50% />\n\n<p>同理可计算出 <code>B</code> ， <code>C</code> 节点的节度均为 2 。 表明 <code>A</code> 节点的重要程度大于 <code>B</code> ， <code>C</code> 节点。</p>\n<p><br></br></p>\n<p><strong>4.聚类系数(clustering coefficient, CC)</strong></p>\n<p><br></br></p>\n<p>聚类系数用于衡量节点的密集程度。</p>\n<p>在无向网络中，节点 <code>v</code> 的聚类系数 CC<sub>v</sub> 的表达公式为  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{C_{k}^{2}} = \\frac{2n}{k(k-1)}\" style=\"border:none;\"></p>\n<p>其中 n 表示 节点v 的所有 k 个邻居节点之间边的数量。n 的最大值可以由 C<sub>k</sub><sup>2</sup> = k(k-1)/2 计算出。其含义为在所有 k 个邻居节点中， 选出2个相连的节点的所有可能数量。<br>故可以得到 CC<sub>v</sub> 的取值落在 [0, 1] 之间。</p>\n<p>以下图为例。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166695151-865f3ca3-91ac-441f-a624-a579b6aaa850.png\" alt=\"image\"></p>\n<p>节点 A 的聚类系数  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{2}{3(3-1)} = \\frac{1}{3}\" ></p>\n<p>在有向网络中，节点 <code>v</code> 的聚类系数 CC<sub>v</sub> 的表达公式为 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{P_{k_{out}}^{2}} = \\frac{n}{k_{out}(k_{out}-1)}\" style=\"border:none;\"></p>\n<p>其中 k<sub>out</sub> 为 v 节点的出度，n 表示 v 所有指向的节点彼此之间存在的边数。因为有方向差别，不同方向的节点算两条边，故用的是排列而不是组合。</p>\n<p>以下图为例</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166705407-db0f21e5-357f-48b6-ba3d-9ebbef6ef265.png\" alt=\"image\"></p>\n<p>图中 计算 A 节点的聚类系数。 节点 A 连接了三个节点 <code>&#123;B, C, F&#125;</code> ， 所以 n 为 3 ，其中<code>&#123;B, C, F&#125;</code> 相连接的边有 <code>&#123;[B → C], [C → B], [C → F]&#125;</code> 共 3 条 故 k<sub>out</sub> 为 3</p>\n<p>A 的聚类系数 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{3}{3(3-1)} = \\frac{1}{2}\" ></p>\n<p><br></br></p>\n<p><strong>5.度分布</strong></p>\n<p><br></br></p>\n<p>度分布指的是整个网络中各个点的度数量的概率分布。</p>\n<p>例如 P{k = k<sub>i</sub>} 表示的是在某一网络中，度为 k<sub>i</sub> 的节点的出现概率。 </p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<ul>\n<li><a href=\"#%E4%B8%80%E4%BB%80%E4%B9%88%E6%98%AF%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C\">一、什么是生物网络</a><ul>\n<li><a href=\"#1%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%AE%9A%E4%B9%89\">1.生物网络的定义</a></li>\n<li><a href=\"#2%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%88%86%E7%B1%BB\">2.生物网络的分类</a></li>\n<li><a href=\"#3%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C%E7%9A%84%E5%AD%90%E6%A6%82%E5%BF%B5\">3.生物网络的子概念</a></li>\n</ul>\n</li>\n</ul>\n<p><br></br></p>\n<h1 id=\"一、什么是生物网络\"><a href=\"#一、什么是生物网络\" class=\"headerlink\" title=\"一、什么是生物网络\"></a>一、什么是生物网络</h1><h2 id=\"1-生物网络的定义\"><a href=\"#1-生物网络的定义\" class=\"headerlink\" title=\"1.生物网络的定义\"></a>1.生物网络的定义</h2><p>生物网络指的是适用于生物系统的网络。网络指的是具有连为一体的子单元（例如链接到整个食物网的物种单元）的系统<sup><a href=\"https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E7%BD%91%E7%BB%9C\">[1]</a></sup>。简单的来理解，就是生物网络是一个有关生物的信息的载体，通过网络链接的方式表达各个节点之间的关系。如蛋白质互作网络，KEGG通路等都是常见的生物网络</p>\n<h2 id=\"2-生物网络的分类\"><a href=\"#2-生物网络的分类\" class=\"headerlink\" title=\"2.生物网络的分类\"></a>2.生物网络的分类</h2><p><strong>1.有向网络与无向网络</strong></p>\n<p><br></br></p>\n<p>根据网络中的边是否具有方向性或者说连接一条边的两个节点是否存在顺序，网络可以分为有向网络与无向网络，边存在方向性为有向网络(directed network)，否则为无向网络(undirected network)。<br>下图为KEGG的通路网络图，是一个典型的有向网络，连接边的方向代表了代谢的顺序。</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651208-0a88d139-b90a-46c3-829d-4a164d5d1602.png width=40% /></div>\n\n\n<p>下图为String 数据库中蛋白互作的关系图，是一个典型的无向网络，节点表示蛋白，而连接的线条表示是否互作，不含有方向信息。</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166651669-638d6cb8-279b-40d5-8df4-82cdfa095985.png width=40% /></div>\n\n<p><br></br></p>\n<p><strong>2.加权网络与等权网络</strong></p>\n<p><br></br></p>\n<p>加权网络指网络中的每条边都被赋予相应的数值。所赋予的数值称为边的权重。权重可以用来描述节点间的距离，相关程度，稳定程度。String蛋白互作网络就是一个加权网络，他的边表示两个节点直接互作的得分。</p>\n<p>如果网络中各边之间没有区别，可以认为各边的权重相等，称为等权网络或无权网络</p>\n<p><br></br></p>\n<p><strong>3.二分网络</strong></p>\n<p><br></br></p>\n<p>如果网络中的节点可分为两个互不相交的集合，而所有的边都建立在来自不同集合的节点之间，则称这样的网络为二分网络。下图是一个二分网络的例子</p>\n<div align=center><img src=https://user-images.githubusercontent.com/102901955/166682187-d89e8481-abe4-4c47-a1e3-b915e31be598.png width=40% /></div>\n\n<p><br></br></p>\n<h2 id=\"3-生物网络的子概念\"><a href=\"#3-生物网络的子概念\" class=\"headerlink\" title=\"3.生物网络的子概念\"></a>3.生物网络的子概念</h2><p><br></br></p>\n<p>为了解释下面几个概念我们用一个简单的网络图作为例子</p>\n<div align=center> <img src = https://user-images.githubusercontent.com/102901955/166682829-2c72d3ae-51d9-43fa-9fce-97012de5d9b2.png /> </div>\n\n<p><br></br></p>\n<p><strong>1.节点的度(degree)</strong></p>\n<p><br></br></p>\n<p>又称为连通度，关联度。节点度是指和该节点相关联的边的条数。</p>\n<p>特别地，对于有向图，</p>\n<p>节点的入度 是指进入该节点的边的条数；</p>\n<p>节点的出度是指从该节点出发的边的条数。</p>\n<p>如上图 <code>A</code> 的度数为2，<code>B</code>，<code>C</code> 的度数为 1</p>\n<p><br></br></p>\n<p><strong>2.最短路径</strong>  </p>\n<p><br></br></p>\n<p>指连接两个节点之间经过最少的边的路径。</p>\n<p>如上图中 <code>A</code> 节点到 <code>B</code> 的最短路径为 <code>A-B</code> ， 而 <code>B</code> 节点到 <code>C</code> 节点的最短路径为 <code>B-C</code> 。  </p>\n<p><br></br></p>\n<p><strong>3.节点的介数</strong>   </p>\n<p><br></br></p>\n<p>节点的介数是用于描述一个节点在网络中的重要程度的参数。某一节点在网络中越重要，则其介数越大。</p>\n<p>其计算公式为</p>\n<img src =https://user-images.githubusercontent.com/102901955/166685241-d931e15b-54f3-417a-89cf-05e858f26885.png width=20% />\n\n<p>其中 B<sub>i</sub> 即为节点 <code>i</code> 的介数，如 B<sub>A</sub> 为上图中 A 节点的介数。</p>\n<p><strong>n<sub>k,j</sub></strong> 表示为 <code>k</code> ，<code>j</code> 节点之间的最短路径的数量。 <strong>n<sub>k,j(i)</sub></strong> 表示为 <code>k</code> ， <code>j</code> 节点最短路径中含有 <code>i</code> 节点的数量。</p>\n<p>如上图中 显然可以看出 <code>A</code> 节点是整个网络中最重要的。其介数为 </p>\n<img src =https://user-images.githubusercontent.com/102901955/166689035-59e8c4f1-99b8-45e1-ba3f-7ca92336658d.png width=50% />\n\n<p>同理可计算出 <code>B</code> ， <code>C</code> 节点的节度均为 2 。 表明 <code>A</code> 节点的重要程度大于 <code>B</code> ， <code>C</code> 节点。</p>\n<p><br></br></p>\n<p><strong>4.聚类系数(clustering coefficient, CC)</strong></p>\n<p><br></br></p>\n<p>聚类系数用于衡量节点的密集程度。</p>\n<p>在无向网络中，节点 <code>v</code> 的聚类系数 CC<sub>v</sub> 的表达公式为  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{C_{k}^{2}} = \\frac{2n}{k(k-1)}\" style=\"border:none;\"></p>\n<p>其中 n 表示 节点v 的所有 k 个邻居节点之间边的数量。n 的最大值可以由 C<sub>k</sub><sup>2</sup> = k(k-1)/2 计算出。其含义为在所有 k 个邻居节点中， 选出2个相连的节点的所有可能数量。<br>故可以得到 CC<sub>v</sub> 的取值落在 [0, 1] 之间。</p>\n<p>以下图为例。</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166695151-865f3ca3-91ac-441f-a624-a579b6aaa850.png\" alt=\"image\"></p>\n<p>节点 A 的聚类系数  <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{2}{3(3-1)} = \\frac{1}{3}\" ></p>\n<p>在有向网络中，节点 <code>v</code> 的聚类系数 CC<sub>v</sub> 的表达公式为 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{v} = \\frac{n}{P_{k_{out}}^{2}} = \\frac{n}{k_{out}(k_{out}-1)}\" style=\"border:none;\"></p>\n<p>其中 k<sub>out</sub> 为 v 节点的出度，n 表示 v 所有指向的节点彼此之间存在的边数。因为有方向差别，不同方向的节点算两条边，故用的是排列而不是组合。</p>\n<p>以下图为例</p>\n<p><img src=\"https://user-images.githubusercontent.com/102901955/166705407-db0f21e5-357f-48b6-ba3d-9ebbef6ef265.png\" alt=\"image\"></p>\n<p>图中 计算 A 节点的聚类系数。 节点 A 连接了三个节点 <code>&#123;B, C, F&#125;</code> ， 所以 n 为 3 ，其中<code>&#123;B, C, F&#125;</code> 相连接的边有 <code>&#123;[B → C], [C → B], [C → F]&#125;</code> 共 3 条 故 k<sub>out</sub> 为 3</p>\n<p>A 的聚类系数 <img src=\"http://chart.googleapis.com/chart?cht=tx&chl=CC_{A}  = \\frac{3}{3(3-1)} = \\frac{1}{2}\" ></p>\n<p><br></br></p>\n<p><strong>5.度分布</strong></p>\n<p><br></br></p>\n<p>度分布指的是整个网络中各个点的度数量的概率分布。</p>\n<p>例如 P{k = k<sub>i</sub>} 表示的是在某一网络中，度为 k<sub>i</sub> 的节点的出现概率。 </p>\n"},{"title":"Rstudio自定义代码配色方案","date":"2022-06-30T16:00:00.000Z","_content":"\n## 问题描述\nRsutido 中默认的代码配色方案变量和函数是没有区分的。所以想要一个自定义代码配色的方案\n\n## 解决方案\n因为只需要区分开函数和变量，所以可以让便量为默认色-\"白色\"，而函数给一个高亮。\n在Rstudio中，函数高亮是有可以直接实现的选项的。\n选择 TOOL -->> Global Option -->> Code -->> Display 中，勾选Highlight R function call。\n\n![p1](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p1.png)\n\n如果只是需求将变量和函数名分开，那么到这里为止就结束了。\n但是如果你对Rstudio默认主题中的函数高亮颜色不满意想要修改，那么可以通过以下方式。\n\n1. 确定你现在所使用的配色方案可以在TOOL -->> Global Option -->> Appearance 中查看\n\n![p2](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p2.png)\n\n3. 在你Rstudio的安装目录下找到对应名字的[ .rtheme]文件，我的文件夹在./Rstudio/resources/themes下\n4. 复制一份更名，打开后找到 `.ace_support.ace_function` 即为函数颜色设置的设置条目。\n\n![p3](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p3.png)\n\n6. 更改文本开头的  `rs-theme-name:` 然后用Rstudio Add新设置的主题文件就可以了\n\n\n## 版本信息\n```\n操作系统\t\tubuntu22\nRstudio\t\t2022.02.3+492\n```\n\n\n## 参考链接\n[1] https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428\n\n\n\n","source":"_posts/日常使用中的问题/Rstudio自定义代码配色方案.md","raw":"---\ntitle: Rstudio自定义代码配色方案\ncategories:\n\t- 日常使用中的问题\ndate: 2022-07-01\n---\n\n## 问题描述\nRsutido 中默认的代码配色方案变量和函数是没有区分的。所以想要一个自定义代码配色的方案\n\n## 解决方案\n因为只需要区分开函数和变量，所以可以让便量为默认色-\"白色\"，而函数给一个高亮。\n在Rstudio中，函数高亮是有可以直接实现的选项的。\n选择 TOOL -->> Global Option -->> Code -->> Display 中，勾选Highlight R function call。\n\n![p1](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p1.png)\n\n如果只是需求将变量和函数名分开，那么到这里为止就结束了。\n但是如果你对Rstudio默认主题中的函数高亮颜色不满意想要修改，那么可以通过以下方式。\n\n1. 确定你现在所使用的配色方案可以在TOOL -->> Global Option -->> Appearance 中查看\n\n![p2](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p2.png)\n\n3. 在你Rstudio的安装目录下找到对应名字的[ .rtheme]文件，我的文件夹在./Rstudio/resources/themes下\n4. 复制一份更名，打开后找到 `.ace_support.ace_function` 即为函数颜色设置的设置条目。\n\n![p3](https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p3.png)\n\n6. 更改文本开头的  `rs-theme-name:` 然后用Rstudio Add新设置的主题文件就可以了\n\n\n## 版本信息\n```\n操作系统\t\tubuntu22\nRstudio\t\t2022.02.3+492\n```\n\n\n## 参考链接\n[1] https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428\n\n\n\n","slug":"日常使用中的问题/Rstudio自定义代码配色方案","published":1,"updated":"2022-07-10T02:50:43.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjj000f0bhfdqwzc5kw","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Rsutido 中默认的代码配色方案变量和函数是没有区分的。所以想要一个自定义代码配色的方案</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>因为只需要区分开函数和变量，所以可以让便量为默认色-“白色”，而函数给一个高亮。<br>在Rstudio中，函数高亮是有可以直接实现的选项的。<br>选择 TOOL –&gt;&gt; Global Option –&gt;&gt; Code –&gt;&gt; Display 中，勾选Highlight R function call。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p1.png\" alt=\"p1\"></p>\n<p>如果只是需求将变量和函数名分开，那么到这里为止就结束了。<br>但是如果你对Rstudio默认主题中的函数高亮颜色不满意想要修改，那么可以通过以下方式。</p>\n<ol>\n<li>确定你现在所使用的配色方案可以在TOOL –&gt;&gt; Global Option –&gt;&gt; Appearance 中查看</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p2.png\" alt=\"p2\"></p>\n<ol start=\"3\">\n<li>在你Rstudio的安装目录下找到对应名字的[ .rtheme]文件，我的文件夹在./Rstudio/resources/themes下</li>\n<li>复制一份更名，打开后找到 <code>.ace_support.ace_function</code> 即为函数颜色设置的设置条目。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p3.png\" alt=\"p3\"></p>\n<ol start=\"6\">\n<li>更改文本开头的  <code>rs-theme-name:</code> 然后用Rstudio Add新设置的主题文件就可以了</li>\n</ol>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作系统\t\tubuntu22</span><br><span class=\"line\">Rstudio\t\t2022.02.3+492</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p>[1] <a href=\"https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428\">https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Rsutido 中默认的代码配色方案变量和函数是没有区分的。所以想要一个自定义代码配色的方案</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>因为只需要区分开函数和变量，所以可以让便量为默认色-“白色”，而函数给一个高亮。<br>在Rstudio中，函数高亮是有可以直接实现的选项的。<br>选择 TOOL –&gt;&gt; Global Option –&gt;&gt; Code –&gt;&gt; Display 中，勾选Highlight R function call。</p>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p1.png\" alt=\"p1\"></p>\n<p>如果只是需求将变量和函数名分开，那么到这里为止就结束了。<br>但是如果你对Rstudio默认主题中的函数高亮颜色不满意想要修改，那么可以通过以下方式。</p>\n<ol>\n<li>确定你现在所使用的配色方案可以在TOOL –&gt;&gt; Global Option –&gt;&gt; Appearance 中查看</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p2.png\" alt=\"p2\"></p>\n<ol start=\"3\">\n<li>在你Rstudio的安装目录下找到对应名字的[ .rtheme]文件，我的文件夹在./Rstudio/resources/themes下</li>\n<li>复制一份更名，打开后找到 <code>.ace_support.ace_function</code> 即为函数颜色设置的设置条目。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/Lantary/Private_warehouses/main/Rstudio%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88_p3.png\" alt=\"p3\"></p>\n<ol start=\"6\">\n<li>更改文本开头的  <code>rs-theme-name:</code> 然后用Rstudio Add新设置的主题文件就可以了</li>\n</ol>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作系统\t\tubuntu22</span><br><span class=\"line\">Rstudio\t\t2022.02.3+492</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p>[1] <a href=\"https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428\">https://community.rstudio.com/t/colour-additional-functions-within-an-editor-theme/4428</a></p>\n"},{"title":"ibus在pycharm中不能进行汉字输入的问题","date":"2022-06-26T16:00:00.000Z","_content":"## 问题描述\n\n在使用pycharm过程中，发现pycharm没有办法输入中文，且ibus输入法的候选框一直在左下角，不跟随光标位置。\n在网络上搜索了一下，目前中文互联网上能搜索到的大部分解决方案因为版本问题多多少少都有些问题。\n所以这里写一篇基于我使用版本确实有效的一个解决方案。并且指出我在用其他方案来解决时遇到的问题\n\n## 解决方案\n\n打开pycharm  ---->> help ---->> Edit Custom VM Options \n\n在出现的交互窗中输入\n\n ```\n -Drecreate.x11.input.method=true\n ```\n重启pycharm 可以正常的输入中文，但是光标跟随问题仍未解决。目前为之还没有找到很好的解决方案\n\n## 其他方案\n\n### 1.[修改pycharm.sh文件](https://blog.csdn.net/weixin_39628498/article/details/110485125)\n\n该方法尝试最大的问题是我的pycharm是从snap中下载的。\n而通过snap安装的软件，赋予的权限特别高，无论怎么改它的权限，都没有办法写入。\nchmod命令，chattr命令都试过了，没有用。\n\n### 2.[加载第三方插件的方法](https://zhuanlan.zhihu.com/p/342670244)\n\n这个方案尝试过程中，遇到的最大问题是本版本pycharm搜索不到choose runtime 需要自己手动下载。\n而且文章中给的JBR文件链接也是无效的。\n这里提供一个[choose runtime](https://plugins.jetbrains.com/plugin/12836-choose-runtime/versions)的手动下载链接。\n下载后在pycharm插件界面本地添加插件添加choose runtime即可。\n\n需要注意的是，这个方案的尝试中，我确实成功了。\n但是也只是解决了pycharm中不能输入中文的问题。\n光标不跟随问题仍不能解决。\n并且按这个方案做完之后 pycharm 中 markdown 插件会出bug，直接失效。\n这里写出来仅供参考。\n\n\n\n\n\n## 版本信息\n```\nDistributor \t\t Ubuntu 22.04 LTS  \nCodename: \t\t jammy  \n架构: \t\t\t x86_64  \nibus框架：\t\t IBus 1.5.26\nibus输入法：\t\t IBus 智能拼音 1.12.1\npycharm:\t\t community_11.0.15\n```\n## 参考链接\n\nhttps://blog.csdn.net/m0_54032194/article/details/119081008\n\n\n\n\n\n\n","source":"_posts/日常使用中的问题/ibus在pycharm中不能进行汉字输入的问题.md","raw":"---\ntitle: ibus在pycharm中不能进行汉字输入的问题\ncategories:\n\t- 日常使用中的问题\ndate: 2022-06-27\n---\n## 问题描述\n\n在使用pycharm过程中，发现pycharm没有办法输入中文，且ibus输入法的候选框一直在左下角，不跟随光标位置。\n在网络上搜索了一下，目前中文互联网上能搜索到的大部分解决方案因为版本问题多多少少都有些问题。\n所以这里写一篇基于我使用版本确实有效的一个解决方案。并且指出我在用其他方案来解决时遇到的问题\n\n## 解决方案\n\n打开pycharm  ---->> help ---->> Edit Custom VM Options \n\n在出现的交互窗中输入\n\n ```\n -Drecreate.x11.input.method=true\n ```\n重启pycharm 可以正常的输入中文，但是光标跟随问题仍未解决。目前为之还没有找到很好的解决方案\n\n## 其他方案\n\n### 1.[修改pycharm.sh文件](https://blog.csdn.net/weixin_39628498/article/details/110485125)\n\n该方法尝试最大的问题是我的pycharm是从snap中下载的。\n而通过snap安装的软件，赋予的权限特别高，无论怎么改它的权限，都没有办法写入。\nchmod命令，chattr命令都试过了，没有用。\n\n### 2.[加载第三方插件的方法](https://zhuanlan.zhihu.com/p/342670244)\n\n这个方案尝试过程中，遇到的最大问题是本版本pycharm搜索不到choose runtime 需要自己手动下载。\n而且文章中给的JBR文件链接也是无效的。\n这里提供一个[choose runtime](https://plugins.jetbrains.com/plugin/12836-choose-runtime/versions)的手动下载链接。\n下载后在pycharm插件界面本地添加插件添加choose runtime即可。\n\n需要注意的是，这个方案的尝试中，我确实成功了。\n但是也只是解决了pycharm中不能输入中文的问题。\n光标不跟随问题仍不能解决。\n并且按这个方案做完之后 pycharm 中 markdown 插件会出bug，直接失效。\n这里写出来仅供参考。\n\n\n\n\n\n## 版本信息\n```\nDistributor \t\t Ubuntu 22.04 LTS  \nCodename: \t\t jammy  \n架构: \t\t\t x86_64  \nibus框架：\t\t IBus 1.5.26\nibus输入法：\t\t IBus 智能拼音 1.12.1\npycharm:\t\t community_11.0.15\n```\n## 参考链接\n\nhttps://blog.csdn.net/m0_54032194/article/details/119081008\n\n\n\n\n\n\n","slug":"日常使用中的问题/ibus在pycharm中不能进行汉字输入的问题","published":1,"updated":"2022-07-10T02:41:51.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjl000i0bhfag3yblsh","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在使用pycharm过程中，发现pycharm没有办法输入中文，且ibus输入法的候选框一直在左下角，不跟随光标位置。<br>在网络上搜索了一下，目前中文互联网上能搜索到的大部分解决方案因为版本问题多多少少都有些问题。<br>所以这里写一篇基于我使用版本确实有效的一个解决方案。并且指出我在用其他方案来解决时遇到的问题</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>打开pycharm  —-&gt;&gt; help —-&gt;&gt; Edit Custom VM Options </p>\n<p>在出现的交互窗中输入</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Drecreate.x11.input.method=true</span><br></pre></td></tr></table></figure>\n<p>重启pycharm 可以正常的输入中文，但是光标跟随问题仍未解决。目前为之还没有找到很好的解决方案</p>\n<h2 id=\"其他方案\"><a href=\"#其他方案\" class=\"headerlink\" title=\"其他方案\"></a>其他方案</h2><h3 id=\"1-修改pycharm-sh文件\"><a href=\"#1-修改pycharm-sh文件\" class=\"headerlink\" title=\"1.修改pycharm.sh文件\"></a>1.<a href=\"https://blog.csdn.net/weixin_39628498/article/details/110485125\">修改pycharm.sh文件</a></h3><p>该方法尝试最大的问题是我的pycharm是从snap中下载的。<br>而通过snap安装的软件，赋予的权限特别高，无论怎么改它的权限，都没有办法写入。<br>chmod命令，chattr命令都试过了，没有用。</p>\n<h3 id=\"2-加载第三方插件的方法\"><a href=\"#2-加载第三方插件的方法\" class=\"headerlink\" title=\"2.加载第三方插件的方法\"></a>2.<a href=\"https://zhuanlan.zhihu.com/p/342670244\">加载第三方插件的方法</a></h3><p>这个方案尝试过程中，遇到的最大问题是本版本pycharm搜索不到choose runtime 需要自己手动下载。<br>而且文章中给的JBR文件链接也是无效的。<br>这里提供一个<a href=\"https://plugins.jetbrains.com/plugin/12836-choose-runtime/versions\">choose runtime</a>的手动下载链接。<br>下载后在pycharm插件界面本地添加插件添加choose runtime即可。</p>\n<p>需要注意的是，这个方案的尝试中，我确实成功了。<br>但是也只是解决了pycharm中不能输入中文的问题。<br>光标不跟随问题仍不能解决。<br>并且按这个方案做完之后 pycharm 中 markdown 插件会出bug，直接失效。<br>这里写出来仅供参考。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Distributor \t\t Ubuntu 22.04 LTS  </span><br><span class=\"line\">Codename: \t\t jammy  </span><br><span class=\"line\">架构: \t\t\t x86_64  </span><br><span class=\"line\">ibus框架：\t\t IBus 1.5.26</span><br><span class=\"line\">ibus输入法：\t\t IBus 智能拼音 1.12.1</span><br><span class=\"line\">pycharm:\t\t community_11.0.15</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/m0_54032194/article/details/119081008\">https://blog.csdn.net/m0_54032194/article/details/119081008</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在使用pycharm过程中，发现pycharm没有办法输入中文，且ibus输入法的候选框一直在左下角，不跟随光标位置。<br>在网络上搜索了一下，目前中文互联网上能搜索到的大部分解决方案因为版本问题多多少少都有些问题。<br>所以这里写一篇基于我使用版本确实有效的一个解决方案。并且指出我在用其他方案来解决时遇到的问题</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>打开pycharm  —-&gt;&gt; help —-&gt;&gt; Edit Custom VM Options </p>\n<p>在出现的交互窗中输入</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Drecreate.x11.input.method=true</span><br></pre></td></tr></table></figure>\n<p>重启pycharm 可以正常的输入中文，但是光标跟随问题仍未解决。目前为之还没有找到很好的解决方案</p>\n<h2 id=\"其他方案\"><a href=\"#其他方案\" class=\"headerlink\" title=\"其他方案\"></a>其他方案</h2><h3 id=\"1-修改pycharm-sh文件\"><a href=\"#1-修改pycharm-sh文件\" class=\"headerlink\" title=\"1.修改pycharm.sh文件\"></a>1.<a href=\"https://blog.csdn.net/weixin_39628498/article/details/110485125\">修改pycharm.sh文件</a></h3><p>该方法尝试最大的问题是我的pycharm是从snap中下载的。<br>而通过snap安装的软件，赋予的权限特别高，无论怎么改它的权限，都没有办法写入。<br>chmod命令，chattr命令都试过了，没有用。</p>\n<h3 id=\"2-加载第三方插件的方法\"><a href=\"#2-加载第三方插件的方法\" class=\"headerlink\" title=\"2.加载第三方插件的方法\"></a>2.<a href=\"https://zhuanlan.zhihu.com/p/342670244\">加载第三方插件的方法</a></h3><p>这个方案尝试过程中，遇到的最大问题是本版本pycharm搜索不到choose runtime 需要自己手动下载。<br>而且文章中给的JBR文件链接也是无效的。<br>这里提供一个<a href=\"https://plugins.jetbrains.com/plugin/12836-choose-runtime/versions\">choose runtime</a>的手动下载链接。<br>下载后在pycharm插件界面本地添加插件添加choose runtime即可。</p>\n<p>需要注意的是，这个方案的尝试中，我确实成功了。<br>但是也只是解决了pycharm中不能输入中文的问题。<br>光标不跟随问题仍不能解决。<br>并且按这个方案做完之后 pycharm 中 markdown 插件会出bug，直接失效。<br>这里写出来仅供参考。</p>\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Distributor \t\t Ubuntu 22.04 LTS  </span><br><span class=\"line\">Codename: \t\t jammy  </span><br><span class=\"line\">架构: \t\t\t x86_64  </span><br><span class=\"line\">ibus框架：\t\t IBus 1.5.26</span><br><span class=\"line\">ibus输入法：\t\t IBus 智能拼音 1.12.1</span><br><span class=\"line\">pycharm:\t\t community_11.0.15</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/m0_54032194/article/details/119081008\">https://blog.csdn.net/m0_54032194/article/details/119081008</a></p>\n"},{"title":"检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出","date":"2022-06-26T16:00:00.000Z","_content":"\n## 问题描述及解决办法\n\nubuntu系统中下载了腾讯会议官方版本的deb包，安装后无法打开。弹窗警告 “检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出”\n\n```shell\nsudo vim /etc/gdm3/custom.conf\n#WaylandEnable=false 的注释井号去掉\nsudo service gdm3 restart\n```\n\n\n## 版本信息\n\nDistributor ID: Ubuntu  \nDescription: Ubuntu 22.04 LTS  \nRelease: 22.04  \nCodename: jammy  \n架构: x86_64  \n腾讯会议: linux 3.8.0.2(2022-06-07)\n\n## 参考链接\n\nhttps://blog.csdn.net/m0_52640673/article/details/124911402\n\n\n\n\n\n\n","source":"_posts/日常使用中的问题/检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出.md","raw":"---\ntitle: 检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出\ncategories:\n\t- 日常使用中的问题\ndate: 2022-06-27\n---\n\n## 问题描述及解决办法\n\nubuntu系统中下载了腾讯会议官方版本的deb包，安装后无法打开。弹窗警告 “检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出”\n\n```shell\nsudo vim /etc/gdm3/custom.conf\n#WaylandEnable=false 的注释井号去掉\nsudo service gdm3 restart\n```\n\n\n## 版本信息\n\nDistributor ID: Ubuntu  \nDescription: Ubuntu 22.04 LTS  \nRelease: 22.04  \nCodename: jammy  \n架构: x86_64  \n腾讯会议: linux 3.8.0.2(2022-06-07)\n\n## 参考链接\n\nhttps://blog.csdn.net/m0_52640673/article/details/124911402\n\n\n\n\n\n\n","slug":"日常使用中的问题/检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出","published":1,"updated":"2022-07-10T02:41:31.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ia9hjm000j0bhf80xg5v51","content":"<h2 id=\"问题描述及解决办法\"><a href=\"#问题描述及解决办法\" class=\"headerlink\" title=\"问题描述及解决办法\"></a>问题描述及解决办法</h2><p>ubuntu系统中下载了腾讯会议官方版本的deb包，安装后无法打开。弹窗警告 “检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出”</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/gdm3/custom.conf</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">WaylandEnable=<span class=\"literal\">false</span> 的注释井号去掉</span></span><br><span class=\"line\">sudo service gdm3 restart</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><p>Distributor ID: Ubuntu<br>Description: Ubuntu 22.04 LTS<br>Release: 22.04<br>Codename: jammy<br>架构: x86_64<br>腾讯会议: linux 3.8.0.2(2022-06-07)</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/m0_52640673/article/details/124911402\">https://blog.csdn.net/m0_52640673/article/details/124911402</a></p>\n","site":{"data":{"calendar":"#CloudCalendar {\n/*全句背景色*/\n  background-color: #eee;\n}\n#CloudCalendar a {\n  text-decoration: none;\n}\n.cal-head {\n  position: relative;\n  height: 20px;\n  padding: 8px 6px 2px 6px;\n}\n.cal-prev,\n.cal-next {\n  position: absolute;\n  top: 9px;\n  width: 9px;\n  height: 10px;\n  padding: 3px 4px;\n  border: 1px solid transparent;\n  color: #fff;\n  outline: 0;\n}\n/*上下页箭头*/\n.cal-prev {\n  left: 8px;\n}\n.cal-prev:before {\n  border-right: 9px solid #333;\n}\n.cal-next {\n  right: 8px;\n}\n.cal-next:before {\n  border-left: 9px solid #333;\n}\n.cal-prev:before,\n.cal-next:before {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n}\n.cal-title {\n  width: 120px;\n  margin: 0 auto;\n  color: #808080;\n  font: bold 14px/18px Arial;\n  text-align: center;\n}\n.cal-title a {\n  border: 1px solid transparent;\n/*年份颜色*/\n  color: color-link;\n}\n.cal,\n.cal th,\n.cal td {\n  border: 1px solid #eee;\n}\n.cal {\n  border-collapse: separate;\n  border-spacing: 0;\n  border-width: 1px 0 0 1px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0;\n}\n.cal th {\n/*星期颜色*/\n  color: color-link;\n  border-width: 0 1px 1px 0;\n  font-weight: 700;\n}\n.cal td {\n  border-width: 0 1px 1px 0;\n}\n.cal tbody a {\n/*有提交的天*/\n  background-color: #baf786;\n  color: #fff;\n  display: block;\n  border-bottom: 0px solid transparent;\n  font-weight: 700;\n}\n.cal tbody .cal-today {\n/*今天*/\n  color: #a722ff;\n  font-weight: bold;\n}\n.cal .cal-gray {\n/*没提交的天*/\n  color: #808080;\n}\n.cal th,\n.cal td {\n  font-weight: normal;\n  line-height: 2.5625;\n  padding: 0;\n  text-align: center;\n}\n.cal .cal-foot {\n/*底栏箭头切换月*/\n  color: color-link;\n}\n.cal-title a:hover,\n.cal-prev:hover,\n.cal-next:hover,\n.cal .cal-foot:hover,\n.cal .cal-foot:focus {\n/*底栏箭头切换月-鼠标覆盖*/\n  background-color: color-link;\n  color: #fff;\n  cursor: pointer;\n}\n/*鼠标覆盖后的颜色*/\n.cal tbody a:hover,\n.cal tbody a:focus {\n  background-color: #68dc6e;\n  color: #fff;\n  cursor: pointer;\n}\n","sidebar":"<!-- CloudCalendar -->\n<div class=\"widget-wrap\" style=\"width: 90%;margin-left: auto;margin-right: auto; opacity: 0.97;\">\n<div class=\"widget\" id=\"CloudCalendar\"></div>\n</div>"}},"excerpt":"","more":"<h2 id=\"问题描述及解决办法\"><a href=\"#问题描述及解决办法\" class=\"headerlink\" title=\"问题描述及解决办法\"></a>问题描述及解决办法</h2><p>ubuntu系统中下载了腾讯会议官方版本的deb包，安装后无法打开。弹窗警告 “检测到窗口系统采用wayland协议 腾讯会议暂不兼容 程序即将退出”</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/gdm3/custom.conf</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">WaylandEnable=<span class=\"literal\">false</span> 的注释井号去掉</span></span><br><span class=\"line\">sudo service gdm3 restart</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h2><p>Distributor ID: Ubuntu<br>Description: Ubuntu 22.04 LTS<br>Release: 22.04<br>Codename: jammy<br>架构: x86_64<br>腾讯会议: linux 3.8.0.2(2022-06-07)</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/m0_52640673/article/details/124911402\">https://blog.csdn.net/m0_52640673/article/details/124911402</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl5ia9hj500010bhfaqab2zmi","category_id":"cl5ia9hjb00040bhfh6pp5mov","_id":"cl5ia9hjh000c0bhfgxg94vli"},{"post_id":"cl5ia9hj900030bhf7rfg24rr","category_id":"cl5ia9hjf00090bhfhdhsfc2v","_id":"cl5ia9hjk000g0bhffbb77eqi"},{"post_id":"cl5ia9hji000e0bhfhk2x86w4","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjp000p0bhfetyxe39u"},{"post_id":"cl5ia9hji000e0bhfhk2x86w4","category_id":"cl5ia9hjp000n0bhfcdlp0cfi","_id":"cl5ia9hjq000r0bhf2uhf86bz"},{"post_id":"cl5ia9hjd00060bhf11wg5imp","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjq000s0bhf1vwphn01"},{"post_id":"cl5ia9hjd00060bhf11wg5imp","category_id":"cl5ia9hjp000o0bhf9s09a8ef","_id":"cl5ia9hjq000u0bhf4qu88ld6"},{"post_id":"cl5ia9hjj000f0bhfdqwzc5kw","category_id":"cl5ia9hjp000q0bhf1978hq09","_id":"cl5ia9hjr000w0bhf4wx02kfd"},{"post_id":"cl5ia9hjl000i0bhfag3yblsh","category_id":"cl5ia9hjp000q0bhf1978hq09","_id":"cl5ia9hjr000y0bhfcq3ie0wv"},{"post_id":"cl5ia9hje00070bhf3vx23xmx","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjs00100bhf1rii7ddp"},{"post_id":"cl5ia9hje00070bhf3vx23xmx","category_id":"cl5ia9hjp000o0bhf9s09a8ef","_id":"cl5ia9hjs00110bhf1y36g4r5"},{"post_id":"cl5ia9hjm000j0bhf80xg5v51","category_id":"cl5ia9hjp000q0bhf1978hq09","_id":"cl5ia9hjs00120bhf66pk93hr"},{"post_id":"cl5ia9hjf00080bhfgqp0cnpt","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjt00150bhf0hwiboi5"},{"post_id":"cl5ia9hjf00080bhfgqp0cnpt","category_id":"cl5ia9hjr000z0bhfa91e4ve4","_id":"cl5ia9hjt00160bhfbwoshh8a"},{"post_id":"cl5ia9hjg000a0bhfe8axg60e","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjt00170bhfeckp2xz4"},{"post_id":"cl5ia9hjg000a0bhfe8axg60e","category_id":"cl5ia9hjp000o0bhf9s09a8ef","_id":"cl5ia9hjt00180bhf90009jds"},{"post_id":"cl5ia9hjh000b0bhf0gkv9s5u","category_id":"cl5ia9hji000d0bhfb2x5fl0b","_id":"cl5ia9hjt00190bhf5941bknn"},{"post_id":"cl5ia9hjh000b0bhf0gkv9s5u","category_id":"cl5ia9hjp000o0bhf9s09a8ef","_id":"cl5ia9hjt001a0bhf95c851c1"}],"PostTag":[],"Tag":[]}}